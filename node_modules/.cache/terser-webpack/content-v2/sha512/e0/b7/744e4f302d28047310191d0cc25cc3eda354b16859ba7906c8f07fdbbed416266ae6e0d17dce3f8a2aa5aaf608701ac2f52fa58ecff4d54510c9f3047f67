{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{\"1kSV\":function(module,__webpack_exports__,__webpack_require__){\"use strict\";function __decorate(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r}function __param(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}}__webpack_require__.d(__webpack_exports__,\"a\",function(){return ModalDismissReasons}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return ng_bootstrap_NgbAlert}),__webpack_require__.d(__webpack_exports__,\"c\",function(){return ng_bootstrap_NgbAlertModule}),__webpack_require__.d(__webpack_exports__,\"d\",function(){return ng_bootstrap_NgbButtonLabel}),__webpack_require__.d(__webpack_exports__,\"e\",function(){return ng_bootstrap_NgbCarousel}),__webpack_require__.d(__webpack_exports__,\"f\",function(){return ng_bootstrap_NgbCarouselModule}),__webpack_require__.d(__webpack_exports__,\"g\",function(){return ng_bootstrap_NgbCollapse}),__webpack_require__.d(__webpack_exports__,\"h\",function(){return ng_bootstrap_NgbDropdown}),__webpack_require__.d(__webpack_exports__,\"i\",function(){return ng_bootstrap_NgbDropdownMenu}),__webpack_require__.d(__webpack_exports__,\"j\",function(){return ng_bootstrap_NgbDropdownModule}),__webpack_require__.d(__webpack_exports__,\"k\",function(){return ng_bootstrap_NgbDropdownToggle}),__webpack_require__.d(__webpack_exports__,\"l\",function(){return ng_bootstrap_NgbInputDatepicker}),__webpack_require__.d(__webpack_exports__,\"m\",function(){return ng_bootstrap_NgbModal}),__webpack_require__.d(__webpack_exports__,\"n\",function(){return ng_bootstrap_NgbModule}),__webpack_require__.d(__webpack_exports__,\"o\",function(){return ng_bootstrap_NgbNavbar}),__webpack_require__.d(__webpack_exports__,\"p\",function(){return ng_bootstrap_NgbPagination}),__webpack_require__.d(__webpack_exports__,\"q\",function(){return ng_bootstrap_NgbPopover}),__webpack_require__.d(__webpack_exports__,\"r\",function(){return ng_bootstrap_NgbProgressbar}),__webpack_require__.d(__webpack_exports__,\"s\",function(){return ng_bootstrap_NgbRadio}),__webpack_require__.d(__webpack_exports__,\"t\",function(){return ng_bootstrap_NgbRadioGroup}),__webpack_require__.d(__webpack_exports__,\"u\",function(){return ng_bootstrap_NgbRating}),__webpack_require__.d(__webpack_exports__,\"v\",function(){return ng_bootstrap_NgbSlide}),__webpack_require__.d(__webpack_exports__,\"w\",function(){return ng_bootstrap_NgbTab}),__webpack_require__.d(__webpack_exports__,\"x\",function(){return ng_bootstrap_NgbTabContent}),__webpack_require__.d(__webpack_exports__,\"y\",function(){return ng_bootstrap_NgbTabTitle}),__webpack_require__.d(__webpack_exports__,\"z\",function(){return ng_bootstrap_NgbTabset}),__webpack_require__.d(__webpack_exports__,\"A\",function(){return ng_bootstrap_NgbTimepicker}),__webpack_require__.d(__webpack_exports__,\"B\",function(){return ng_bootstrap_NgbTooltip});var core=__webpack_require__(\"fXoL\"),common=__webpack_require__(\"ofXK\"),fesm2015_forms=__webpack_require__(\"3Pt+\"),Subject=__webpack_require__(\"XNiG\"),BehaviorSubject=__webpack_require__(\"2Vo4\"),combineLatest=__webpack_require__(\"itXk\"),Observable=__webpack_require__(\"HDdC\"),AsyncAction=__webpack_require__(\"3N8a\");const async_async=new(__webpack_require__(\"IjjT\").a)(AsyncAction.a);var isArray=__webpack_require__(\"DH7j\");function isNumeric(val){return!Object(isArray.a)(val)&&val-parseFloat(val)+1>=0}var isScheduler=__webpack_require__(\"z+Ro\");function dispatch(state){const{index:index,period:period,subscriber:subscriber}=state;if(subscriber.next(index),!subscriber.closed){if(-1===period)return subscriber.complete();state.index=index+1,this.schedule(state,period)}}var noop=__webpack_require__(\"KqfI\");const NEVER=new Observable.a(noop.a);var isFunction=__webpack_require__(\"n6bG\"),map=__webpack_require__(\"lJxs\");function fromEvent(target,eventName,options,resultSelector){return Object(isFunction.a)(options)&&(resultSelector=options,options=void 0),resultSelector?fromEvent(target,eventName,options).pipe(Object(map.a)(args=>Object(isArray.a)(args)?resultSelector(...args):resultSelector(args))):new Observable.a(subscriber=>{setupSubscription(target,eventName,function(e){subscriber.next(arguments.length>1?Array.prototype.slice.call(arguments):e)},subscriber,options)})}function setupSubscription(sourceObj,eventName,handler,subscriber,options){let unsubscribe;if(function(sourceObj){return sourceObj&&\"function\"==typeof sourceObj.addEventListener&&\"function\"==typeof sourceObj.removeEventListener}(sourceObj)){const source=sourceObj;sourceObj.addEventListener(eventName,handler,options),unsubscribe=()=>source.removeEventListener(eventName,handler,options)}else if(function(sourceObj){return sourceObj&&\"function\"==typeof sourceObj.on&&\"function\"==typeof sourceObj.off}(sourceObj)){const source=sourceObj;sourceObj.on(eventName,handler),unsubscribe=()=>source.off(eventName,handler)}else if(function(sourceObj){return sourceObj&&\"function\"==typeof sourceObj.addListener&&\"function\"==typeof sourceObj.removeListener}(sourceObj)){const source=sourceObj;sourceObj.addListener(eventName,handler),unsubscribe=()=>source.removeListener(eventName,handler)}else{if(!sourceObj||!sourceObj.length)throw new TypeError(\"Invalid event target\");for(let i=0,len=sourceObj.length;i<len;i++)setupSubscription(sourceObj[i],eventName,handler,subscriber,options)}subscriber.add(unsubscribe)}var merge=__webpack_require__(\"VRyK\"),fromArray=__webpack_require__(\"yCtX\"),OuterSubscriber=__webpack_require__(\"l7GE\"),subscribeToResult=__webpack_require__(\"ZUHj\");class RaceOperator{call(subscriber,source){return source.subscribe(new race_RaceSubscriber(subscriber))}}class race_RaceSubscriber extends OuterSubscriber.a{constructor(destination){super(destination),this.hasFirst=!1,this.observables=[],this.subscriptions=[]}_next(observable){this.observables.push(observable)}_complete(){const observables=this.observables,len=observables.length;if(0===len)this.destination.complete();else{for(let i=0;i<len&&!this.hasFirst;i++){const observable=observables[i],subscription=Object(subscribeToResult.a)(this,observable,void 0,i);this.subscriptions&&this.subscriptions.push(subscription),this.add(subscription)}this.observables=null}}notifyNext(_outerValue,innerValue,outerIndex){if(!this.hasFirst){this.hasFirst=!0;for(let i=0;i<this.subscriptions.length;i++)if(i!==outerIndex){let subscription=this.subscriptions[i];subscription.unsubscribe(),this.remove(subscription)}this.subscriptions=null}this.destination.next(innerValue)}}var startWith=__webpack_require__(\"JX91\"),Subscriber=__webpack_require__(\"7o/Q\");function distinctUntilChanged(compare,keySelector){return source=>source.lift(new DistinctUntilChangedOperator(compare,keySelector))}class DistinctUntilChangedOperator{constructor(compare,keySelector){this.compare=compare,this.keySelector=keySelector}call(subscriber,source){return source.subscribe(new distinctUntilChanged_DistinctUntilChangedSubscriber(subscriber,this.compare,this.keySelector))}}class distinctUntilChanged_DistinctUntilChangedSubscriber extends Subscriber.a{constructor(destination,compare,keySelector){super(destination),this.keySelector=keySelector,this.hasKey=!1,\"function\"==typeof compare&&(this.compare=compare)}compare(x,y){return x===y}_next(value){let key;try{const{keySelector:keySelector}=this;key=keySelector?keySelector(value):value}catch(err){return this.destination.error(err)}let result=!1;if(this.hasKey)try{const{compare:compare}=this;result=compare(this.key,key)}catch(err){return this.destination.error(err)}else this.hasKey=!0;result||(this.key=key,this.destination.next(value))}}var switchMap=__webpack_require__(\"eIep\"),innerSubscribe=__webpack_require__(\"zx2A\");function takeUntil(notifier){return source=>source.lift(new takeUntil_TakeUntilOperator(notifier))}class takeUntil_TakeUntilOperator{constructor(notifier){this.notifier=notifier}call(subscriber,source){const takeUntilSubscriber=new takeUntil_TakeUntilSubscriber(subscriber),notifierSubscription=Object(innerSubscribe.c)(this.notifier,new innerSubscribe.a(takeUntilSubscriber));return notifierSubscription&&!takeUntilSubscriber.seenValue?(takeUntilSubscriber.add(notifierSubscription),source.subscribe(takeUntilSubscriber)):takeUntilSubscriber}}class takeUntil_TakeUntilSubscriber extends innerSubscribe.b{constructor(destination){super(destination),this.seenValue=!1}notifyNext(){this.seenValue=!0,this.complete()}notifyComplete(){}}var filter=__webpack_require__(\"pLZG\"),take=__webpack_require__(\"IzEk\"),tap=__webpack_require__(\"vkgz\");function withLatestFrom(...args){return source=>{let project;return\"function\"==typeof args[args.length-1]&&(project=args.pop()),source.lift(new WithLatestFromOperator(args,project))}}class WithLatestFromOperator{constructor(observables,project){this.observables=observables,this.project=project}call(subscriber,source){return source.subscribe(new withLatestFrom_WithLatestFromSubscriber(subscriber,this.observables,this.project))}}class withLatestFrom_WithLatestFromSubscriber extends OuterSubscriber.a{constructor(destination,observables,project){super(destination),this.observables=observables,this.project=project,this.toRespond=[];const len=observables.length;this.values=new Array(len);for(let i=0;i<len;i++)this.toRespond.push(i);for(let i=0;i<len;i++){let observable=observables[i];this.add(Object(subscribeToResult.a)(this,observable,void 0,i))}}notifyNext(_outerValue,innerValue,outerIndex){this.values[outerIndex]=innerValue;const toRespond=this.toRespond;if(toRespond.length>0){const found=toRespond.indexOf(outerIndex);-1!==found&&toRespond.splice(found,1)}}notifyComplete(){}_next(value){if(0===this.toRespond.length){const args=[value,...this.values];this.project?this._tryProject(args):this.destination.next(args)}}_tryProject(args){let result;try{result=this.project.apply(this,args)}catch(err){return void this.destination.error(err)}this.destination.next(result)}}var Notification=__webpack_require__(\"WMd4\");function delay_delay(delay,scheduler=async_async){var value;const delayFor=(value=delay)instanceof Date&&!isNaN(+value)?+delay-scheduler.now():Math.abs(delay);return source=>source.lift(new DelayOperator(delayFor,scheduler))}class DelayOperator{constructor(delay,scheduler){this.delay=delay,this.scheduler=scheduler}call(subscriber,source){return source.subscribe(new delay_DelaySubscriber(subscriber,this.delay,this.scheduler))}}class delay_DelaySubscriber extends Subscriber.a{constructor(destination,delay,scheduler){super(destination),this.delay=delay,this.scheduler=scheduler,this.queue=[],this.active=!1,this.errored=!1}static dispatch(state){const source=state.source,queue=source.queue,scheduler=state.scheduler,destination=state.destination;for(;queue.length>0&&queue[0].time-scheduler.now()<=0;)queue.shift().notification.observe(destination);if(queue.length>0){const delay=Math.max(0,queue[0].time-scheduler.now());this.schedule(state,delay)}else this.unsubscribe(),source.active=!1}_schedule(scheduler){this.active=!0,this.destination.add(scheduler.schedule(delay_DelaySubscriber.dispatch,this.delay,{source:this,destination:this.destination,scheduler:scheduler}))}scheduleNotification(notification){if(!0===this.errored)return;const scheduler=this.scheduler,message=new DelayMessage(scheduler.now()+this.delay,notification);this.queue.push(message),!1===this.active&&this._schedule(scheduler)}_next(value){this.scheduleNotification(Notification.a.createNext(value))}_error(err){this.errored=!0,this.queue=[],this.destination.error(err),this.unsubscribe()}_complete(){this.scheduleNotification(Notification.a.createComplete()),this.unsubscribe()}}class DelayMessage{constructor(time,notification){this.time=time,this.notification=notification}}var share=__webpack_require__(\"w1tV\");function NgbAlert_button_1_Template(rf,ctx){if(1&rf){const _r2=core.Tb();core.Sb(0,\"button\",1),core.cc(\"click\",function(){return core.tc(_r2),core.ec().closeHandler()}),core.Sb(1,\"span\",2),core.Ac(2,\"×\"),core.Rb(),core.Rb()}}const _c3=[\"*\"];function NgbCarousel_ol_0_li_1_Template(rf,ctx){if(1&rf){const _r7=core.Tb();core.Sb(0,\"li\",7),core.cc(\"click\",function(){core.tc(_r7);const slide_r5=ctx.$implicit,ctx_r6=core.ec(2);return ctx_r6.select(slide_r5.id,ctx_r6.NgbSlideEventSource.INDICATOR)}),core.Rb()}if(2&rf){const slide_r5=ctx.$implicit,ctx_r4=core.ec(2);core.Fb(\"active\",slide_r5.id===ctx_r4.activeId),core.kc(\"id\",slide_r5.id)}}function NgbCarousel_ol_0_Template(rf,ctx){if(1&rf&&(core.Sb(0,\"ol\",5),core.yc(1,NgbCarousel_ol_0_li_1_Template,1,3,\"li\",6),core.Rb()),2&rf){const ctx_r0=core.ec();core.Ab(1),core.kc(\"ngForOf\",ctx_r0.slides)}}function NgbCarousel_div_2_ng_template_1_Template(rf,ctx){}function NgbCarousel_div_2_Template(rf,ctx){if(1&rf&&(core.Sb(0,\"div\",8),core.yc(1,NgbCarousel_div_2_ng_template_1_Template,0,0,\"ng-template\",9),core.Rb()),2&rf){const slide_r8=ctx.$implicit,ctx_r1=core.ec();core.Fb(\"active\",slide_r8.id===ctx_r1.activeId),core.Ab(1),core.kc(\"ngTemplateOutlet\",slide_r8.tplRef)}}function NgbCarousel_a_3_Template(rf,ctx){if(1&rf){const _r11=core.Tb();core.Sb(0,\"a\",10),core.cc(\"click\",function(){core.tc(_r11);const ctx_r10=core.ec();return ctx_r10.prev(ctx_r10.NgbSlideEventSource.ARROW_LEFT)}),core.Ob(1,\"span\",11),core.Sb(2,\"span\",12),core.Wb(3,13),core.Rb(),core.Rb()}}function NgbCarousel_a_4_Template(rf,ctx){if(1&rf){const _r13=core.Tb();core.Sb(0,\"a\",14),core.cc(\"click\",function(){core.tc(_r13);const ctx_r12=core.ec();return ctx_r12.next(ctx_r12.NgbSlideEventSource.ARROW_RIGHT)}),core.Ob(1,\"span\",15),core.Sb(2,\"span\",12),core.Wb(3,16),core.Rb(),core.Rb()}}const _c8=[\"defaultDayTemplate\"],_c9=[\"content\"];function NgbDatepicker_ng_template_0_Template(rf,ctx){if(1&rf&&core.Ob(0,\"div\",7),2&rf){const currentMonth_r9=ctx.currentMonth,selected_r10=ctx.selected,disabled_r11=ctx.disabled,focused_r12=ctx.focused;core.kc(\"date\",ctx.date)(\"currentMonth\",currentMonth_r9)(\"selected\",selected_r10)(\"disabled\",disabled_r11)(\"focused\",focused_r12)}}function NgbDatepicker_ng_template_2_div_0_div_1_Template(rf,ctx){if(1&rf&&(core.Sb(0,\"div\",12),core.Ac(1),core.Rb()),2&rf){const month_r14=core.ec().$implicit,ctx_r16=core.ec(2);core.Ab(1),core.Dc(\" \",ctx_r16.i18n.getMonthFullName(month_r14.number,month_r14.year),\" \",ctx_r16.i18n.getYearNumerals(month_r14.year),\" \")}}function NgbDatepicker_ng_template_2_div_0_Template(rf,ctx){if(1&rf&&(core.Sb(0,\"div\",9),core.yc(1,NgbDatepicker_ng_template_2_div_0_div_1_Template,2,2,\"div\",10),core.Ob(2,\"ngb-datepicker-month\",11),core.Rb()),2&rf){const month_r14=ctx.$implicit,ctx_r13=core.ec(2);core.Ab(1),core.kc(\"ngIf\",\"none\"===ctx_r13.navigation||ctx_r13.displayMonths>1&&\"select\"===ctx_r13.navigation),core.Ab(1),core.kc(\"month\",month_r14.firstDate)}}function NgbDatepicker_ng_template_2_Template(rf,ctx){if(1&rf&&core.yc(0,NgbDatepicker_ng_template_2_div_0_Template,3,2,\"div\",8),2&rf){const ctx_r3=core.ec();core.kc(\"ngForOf\",ctx_r3.model.months)}}function NgbDatepicker_ngb_datepicker_navigation_5_Template(rf,ctx){if(1&rf){const _r19=core.Tb();core.Sb(0,\"ngb-datepicker-navigation\",13),core.cc(\"navigate\",function($event){return core.tc(_r19),core.ec().onNavigateEvent($event)})(\"select\",function($event){return core.tc(_r19),core.ec().onNavigateDateSelect($event)}),core.Rb()}if(2&rf){const ctx_r4=core.ec();core.kc(\"date\",ctx_r4.model.firstDate)(\"months\",ctx_r4.model.months)(\"disabled\",ctx_r4.model.disabled)(\"showSelect\",\"select\"===ctx_r4.model.navigation)(\"prevDisabled\",ctx_r4.model.prevDisabled)(\"nextDisabled\",ctx_r4.model.nextDisabled)(\"selectBoxes\",ctx_r4.model.selectBoxes)}}function NgbDatepicker_ng_template_8_Template(rf,ctx){}function NgbDatepicker_ng_template_9_Template(rf,ctx){}function NgbDatepickerMonth_div_0_div_1_Template(rf,ctx){1&rf&&core.Ob(0,\"div\",5)}function NgbDatepickerMonth_div_0_div_2_Template(rf,ctx){if(1&rf&&(core.Sb(0,\"div\",6),core.Ac(1),core.Rb()),2&rf){const w_r4=ctx.$implicit,ctx_r3=core.ec(2);core.Ab(1),core.Cc(\" \",ctx_r3.i18n.getWeekdayShortName(w_r4),\" \")}}function NgbDatepickerMonth_div_0_Template(rf,ctx){if(1&rf&&(core.Sb(0,\"div\",2),core.yc(1,NgbDatepickerMonth_div_0_div_1_Template,1,0,\"div\",3),core.yc(2,NgbDatepickerMonth_div_0_div_2_Template,2,1,\"div\",4),core.Rb()),2&rf){const ctx_r0=core.ec();core.Ab(1),core.kc(\"ngIf\",ctx_r0.datepicker.showWeekNumbers),core.Ab(1),core.kc(\"ngForOf\",ctx_r0.viewModel.weekdays)}}function NgbDatepickerMonth_ng_template_1_div_0_div_1_Template(rf,ctx){if(1&rf&&(core.Sb(0,\"div\",11),core.Ac(1),core.Rb()),2&rf){const week_r5=core.ec(2).$implicit,ctx_r7=core.ec();core.Ab(1),core.Bc(ctx_r7.i18n.getWeekNumerals(week_r5.number))}}function NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template(rf,ctx){}function NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_Template(rf,ctx){if(1&rf&&core.yc(0,NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template,0,0,\"ng-template\",14),2&rf){const day_r10=core.ec().$implicit,ctx_r11=core.ec(3);core.kc(\"ngTemplateOutlet\",ctx_r11.datepicker.dayTemplate)(\"ngTemplateOutletContext\",day_r10.context)}}function NgbDatepickerMonth_ng_template_1_div_0_div_2_Template(rf,ctx){if(1&rf){const _r15=core.Tb();core.Sb(0,\"div\",12),core.cc(\"click\",function($event){core.tc(_r15);const day_r10=ctx.$implicit;return core.ec(3).doSelect(day_r10),$event.preventDefault()}),core.yc(1,NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_Template,1,2,\"ng-template\",13),core.Rb()}if(2&rf){const day_r10=ctx.$implicit;core.Fb(\"disabled\",day_r10.context.disabled)(\"hidden\",day_r10.hidden)(\"ngb-dp-today\",day_r10.context.today),core.kc(\"tabindex\",day_r10.tabindex),core.Bb(\"aria-label\",day_r10.ariaLabel),core.Ab(1),core.kc(\"ngIf\",!day_r10.hidden)}}function NgbDatepickerMonth_ng_template_1_div_0_Template(rf,ctx){if(1&rf&&(core.Sb(0,\"div\",8),core.yc(1,NgbDatepickerMonth_ng_template_1_div_0_div_1_Template,2,1,\"div\",9),core.yc(2,NgbDatepickerMonth_ng_template_1_div_0_div_2_Template,2,9,\"div\",10),core.Rb()),2&rf){const week_r5=core.ec().$implicit,ctx_r6=core.ec();core.Ab(1),core.kc(\"ngIf\",ctx_r6.datepicker.showWeekNumbers),core.Ab(1),core.kc(\"ngForOf\",week_r5.days)}}function NgbDatepickerMonth_ng_template_1_Template(rf,ctx){1&rf&&core.yc(0,NgbDatepickerMonth_ng_template_1_div_0_Template,3,2,\"div\",7),2&rf&&core.kc(\"ngIf\",!ctx.$implicit.collapsed)}function NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template(rf,ctx){if(1&rf){const _r3=core.Tb();core.Sb(0,\"ngb-datepicker-navigation-select\",7),core.cc(\"select\",function($event){return core.tc(_r3),core.ec().select.emit($event)}),core.Rb()}if(2&rf){const ctx_r0=core.ec();core.kc(\"date\",ctx_r0.date)(\"disabled\",ctx_r0.disabled)(\"months\",ctx_r0.selectBoxes.months)(\"years\",ctx_r0.selectBoxes.years)}}function NgbDatepickerNavigation_4_ng_template_0_div_0_Template(rf,ctx){1&rf&&core.Ob(0,\"div\",0)}function NgbDatepickerNavigation_4_ng_template_0_div_3_Template(rf,ctx){1&rf&&core.Ob(0,\"div\",0)}function NgbDatepickerNavigation_4_ng_template_0_Template(rf,ctx){if(1&rf&&(core.yc(0,NgbDatepickerNavigation_4_ng_template_0_div_0_Template,1,0,\"div\",9),core.Sb(1,\"div\",10),core.Ac(2),core.Rb(),core.yc(3,NgbDatepickerNavigation_4_ng_template_0_div_3_Template,1,0,\"div\",9)),2&rf){const month_r5=ctx.$implicit,i_r6=ctx.index,ctx_r4=core.ec(2);core.kc(\"ngIf\",i_r6>0),core.Ab(2),core.Dc(\" \",ctx_r4.i18n.getMonthFullName(month_r5.number,month_r5.year),\" \",ctx_r4.i18n.getYearNumerals(month_r5.year),\" \"),core.Ab(1),core.kc(\"ngIf\",i_r6!==ctx_r4.months.length-1)}}function NgbDatepickerNavigation_4_Template(rf,ctx){if(1&rf&&core.yc(0,NgbDatepickerNavigation_4_ng_template_0_Template,4,4,\"ng-template\",8),2&rf){const ctx_r1=core.ec();core.kc(\"ngForOf\",ctx_r1.months)}}const _c18=[\"ngbDatepickerDayView\",\"\"],_c19=[\"month\"],_c20=[\"year\"];function NgbDatepickerNavigationSelect_option_2_Template(rf,ctx){if(1&rf&&(core.Sb(0,\"option\",5),core.Ac(1),core.Rb()),2&rf){const m_r4=ctx.$implicit,ctx_r1=core.ec();core.kc(\"value\",m_r4),core.Bb(\"aria-label\",ctx_r1.i18n.getMonthFullName(m_r4,null==ctx_r1.date?null:ctx_r1.date.year)),core.Ab(1),core.Bc(ctx_r1.i18n.getMonthShortName(m_r4,null==ctx_r1.date?null:ctx_r1.date.year))}}function NgbDatepickerNavigationSelect_option_5_Template(rf,ctx){if(1&rf&&(core.Sb(0,\"option\",5),core.Ac(1),core.Rb()),2&rf){const y_r5=ctx.$implicit,ctx_r3=core.ec();core.kc(\"value\",y_r5),core.Ab(1),core.Bc(ctx_r3.i18n.getYearNumerals(y_r5))}}const _c29=[\"dialog\"];function NgbPagination_ng_template_0_Template(rf,ctx){1&rf&&(core.Sb(0,\"span\",8),core.Wb(1,9),core.Rb())}function NgbPagination_ng_template_2_Template(rf,ctx){1&rf&&(core.Sb(0,\"span\",8),core.Wb(1,10),core.Rb())}function NgbPagination_ng_template_4_Template(rf,ctx){1&rf&&(core.Sb(0,\"span\",8),core.Wb(1,11),core.Rb())}function NgbPagination_ng_template_6_Template(rf,ctx){1&rf&&(core.Sb(0,\"span\",8),core.Wb(1,12),core.Rb())}function NgbPagination_ng_template_8_Template(rf,ctx){1&rf&&core.Ac(0,\"...\")}function NgbPagination_ng_template_10_span_1_Template(rf,ctx){1&rf&&(core.Sb(0,\"span\",14),core.Ac(1,\"(current)\"),core.Rb())}function NgbPagination_ng_template_10_Template(rf,ctx){if(1&rf&&(core.Ac(0),core.yc(1,NgbPagination_ng_template_10_span_1_Template,2,0,\"span\",13)),2&rf){const page_r17=ctx.$implicit,currentPage_r18=ctx.currentPage;core.Cc(\" \",page_r17,\" \"),core.Ab(1),core.kc(\"ngIf\",page_r17===currentPage_r18)}}function NgbPagination_li_13_ng_template_2_Template(rf,ctx){}const _c42=function(a0,a1){return{disabled:a0,currentPage:a1}};function NgbPagination_li_13_Template(rf,ctx){if(1&rf){const _r22=core.Tb();core.Sb(0,\"li\",15),core.Sb(1,\"a\",16),core.cc(\"click\",function($event){return core.tc(_r22),core.ec().selectPage(1),$event.preventDefault()}),core.yc(2,NgbPagination_li_13_ng_template_2_Template,0,0,\"ng-template\",17),core.Rb(),core.Rb()}if(2&rf){const ctx_r12=core.ec(),_r0=core.sc(1);core.Fb(\"disabled\",ctx_r12.previousDisabled()),core.Ab(1),core.Bb(\"tabindex\",ctx_r12.previousDisabled()?\"-1\":null)(\"aria-disabled\",ctx_r12.previousDisabled()?\"true\":null),core.Ab(1),core.kc(\"ngTemplateOutlet\",(null==ctx_r12.tplFirst?null:ctx_r12.tplFirst.templateRef)||_r0)(\"ngTemplateOutletContext\",core.pc(6,_c42,ctx_r12.previousDisabled(),ctx_r12.page))}}function NgbPagination_li_14_ng_template_2_Template(rf,ctx){}const _c45=function(a0){return{disabled:a0}};function NgbPagination_li_14_Template(rf,ctx){if(1&rf){const _r25=core.Tb();core.Sb(0,\"li\",15),core.Sb(1,\"a\",18),core.cc(\"click\",function($event){core.tc(_r25);const ctx_r24=core.ec();return ctx_r24.selectPage(ctx_r24.page-1),$event.preventDefault()}),core.yc(2,NgbPagination_li_14_ng_template_2_Template,0,0,\"ng-template\",17),core.Rb(),core.Rb()}if(2&rf){const ctx_r13=core.ec(),_r2=core.sc(3);core.Fb(\"disabled\",ctx_r13.previousDisabled()),core.Ab(1),core.Bb(\"tabindex\",ctx_r13.previousDisabled()?\"-1\":null)(\"aria-disabled\",ctx_r13.previousDisabled()?\"true\":null),core.Ab(1),core.kc(\"ngTemplateOutlet\",(null==ctx_r13.tplPrevious?null:ctx_r13.tplPrevious.templateRef)||_r2)(\"ngTemplateOutletContext\",core.oc(6,_c45,ctx_r13.previousDisabled()))}}function NgbPagination_li_15_a_1_ng_template_1_Template(rf,ctx){}const _c46=function(a1){return{disabled:!0,currentPage:a1}};function NgbPagination_li_15_a_1_Template(rf,ctx){if(1&rf&&(core.Sb(0,\"a\",21),core.yc(1,NgbPagination_li_15_a_1_ng_template_1_Template,0,0,\"ng-template\",17),core.Rb()),2&rf){const ctx_r27=core.ec(2),_r8=core.sc(9);core.Ab(1),core.kc(\"ngTemplateOutlet\",(null==ctx_r27.tplEllipsis?null:ctx_r27.tplEllipsis.templateRef)||_r8)(\"ngTemplateOutletContext\",core.oc(2,_c46,ctx_r27.page))}}function NgbPagination_li_15_a_2_ng_template_1_Template(rf,ctx){}const _c47=function(a0,a1,a2){return{disabled:a0,$implicit:a1,currentPage:a2}};function NgbPagination_li_15_a_2_Template(rf,ctx){if(1&rf){const _r33=core.Tb();core.Sb(0,\"a\",22),core.cc(\"click\",function($event){core.tc(_r33);const pageNumber_r26=core.ec().$implicit;return core.ec().selectPage(pageNumber_r26),$event.preventDefault()}),core.yc(1,NgbPagination_li_15_a_2_ng_template_1_Template,0,0,\"ng-template\",17),core.Rb()}if(2&rf){const pageNumber_r26=core.ec().$implicit,ctx_r28=core.ec(),_r10=core.sc(11);core.Bb(\"tabindex\",ctx_r28.disabled?\"-1\":null)(\"aria-disabled\",ctx_r28.disabled?\"true\":null),core.Ab(1),core.kc(\"ngTemplateOutlet\",(null==ctx_r28.tplNumber?null:ctx_r28.tplNumber.templateRef)||_r10)(\"ngTemplateOutletContext\",core.qc(4,_c47,ctx_r28.disabled,pageNumber_r26,ctx_r28.page))}}function NgbPagination_li_15_Template(rf,ctx){if(1&rf&&(core.Sb(0,\"li\",15),core.yc(1,NgbPagination_li_15_a_1_Template,2,4,\"a\",19),core.yc(2,NgbPagination_li_15_a_2_Template,2,8,\"a\",20),core.Rb()),2&rf){const pageNumber_r26=ctx.$implicit,ctx_r14=core.ec();core.Fb(\"active\",pageNumber_r26===ctx_r14.page)(\"disabled\",ctx_r14.isEllipsis(pageNumber_r26)||ctx_r14.disabled),core.Bb(\"aria-current\",pageNumber_r26===ctx_r14.page?\"page\":null),core.Ab(1),core.kc(\"ngIf\",ctx_r14.isEllipsis(pageNumber_r26)),core.Ab(1),core.kc(\"ngIf\",!ctx_r14.isEllipsis(pageNumber_r26))}}function NgbPagination_li_16_ng_template_2_Template(rf,ctx){}function NgbPagination_li_16_Template(rf,ctx){if(1&rf){const _r37=core.Tb();core.Sb(0,\"li\",15),core.Sb(1,\"a\",23),core.cc(\"click\",function($event){core.tc(_r37);const ctx_r36=core.ec();return ctx_r36.selectPage(ctx_r36.page+1),$event.preventDefault()}),core.yc(2,NgbPagination_li_16_ng_template_2_Template,0,0,\"ng-template\",17),core.Rb(),core.Rb()}if(2&rf){const ctx_r15=core.ec(),_r4=core.sc(5);core.Fb(\"disabled\",ctx_r15.nextDisabled()),core.Ab(1),core.Bb(\"tabindex\",ctx_r15.nextDisabled()?\"-1\":null)(\"aria-disabled\",ctx_r15.nextDisabled()?\"true\":null),core.Ab(1),core.kc(\"ngTemplateOutlet\",(null==ctx_r15.tplNext?null:ctx_r15.tplNext.templateRef)||_r4)(\"ngTemplateOutletContext\",core.pc(6,_c42,ctx_r15.nextDisabled(),ctx_r15.page))}}function NgbPagination_li_17_ng_template_2_Template(rf,ctx){}function NgbPagination_li_17_Template(rf,ctx){if(1&rf){const _r40=core.Tb();core.Sb(0,\"li\",15),core.Sb(1,\"a\",24),core.cc(\"click\",function($event){core.tc(_r40);const ctx_r39=core.ec();return ctx_r39.selectPage(ctx_r39.pageCount),$event.preventDefault()}),core.yc(2,NgbPagination_li_17_ng_template_2_Template,0,0,\"ng-template\",17),core.Rb(),core.Rb()}if(2&rf){const ctx_r16=core.ec(),_r6=core.sc(7);core.Fb(\"disabled\",ctx_r16.nextDisabled()),core.Ab(1),core.Bb(\"tabindex\",ctx_r16.nextDisabled()?\"-1\":null)(\"aria-disabled\",ctx_r16.nextDisabled()?\"true\":null),core.Ab(1),core.kc(\"ngTemplateOutlet\",(null==ctx_r16.tplLast?null:ctx_r16.tplLast.templateRef)||_r6)(\"ngTemplateOutletContext\",core.pc(6,_c42,ctx_r16.nextDisabled(),ctx_r16.page))}}function NgbPopoverWindow_h3_1_ng_template_1_Template(rf,ctx){if(1&rf&&core.Ac(0),2&rf){const ctx_r2=core.ec(2);core.Bc(ctx_r2.title)}}function NgbPopoverWindow_h3_1_ng_template_3_Template(rf,ctx){}function NgbPopoverWindow_h3_1_Template(rf,ctx){if(1&rf&&(core.Sb(0,\"h3\",3),core.yc(1,NgbPopoverWindow_h3_1_ng_template_1_Template,1,1,\"ng-template\",null,4,core.zc),core.yc(3,NgbPopoverWindow_h3_1_ng_template_3_Template,0,0,\"ng-template\",5),core.Rb()),2&rf){const _r1=core.sc(2),ctx_r0=core.ec();core.Ab(3),core.kc(\"ngTemplateOutlet\",ctx_r0.isTitleTemplate()?ctx_r0.title:_r1)(\"ngTemplateOutletContext\",ctx_r0.context)}}function NgbProgressbar_span_2_Template(rf,ctx){if(1&rf&&(core.Sb(0,\"span\"),core.Wb(1,3),core.fc(2,\"percent\"),core.Rb()),2&rf){const ctx_r0=core.ec();core.Ab(2),core.Yb(core.gc(2,1,ctx_r0.getValue()/ctx_r0.max)),core.Xb(1)}}function NgbRating_ng_template_0_Template(rf,ctx){1&rf&&core.Ac(0),2&rf&&core.Bc(100===ctx.fill?\"★\":\"☆\")}function NgbRating_ng_template_2_ng_template_3_Template(rf,ctx){}function NgbRating_ng_template_2_Template(rf,ctx){if(1&rf){const _r7=core.Tb();core.Sb(0,\"span\",2),core.Ac(1),core.Rb(),core.Sb(2,\"span\",3),core.cc(\"mouseenter\",function(){core.tc(_r7);const index_r4=ctx.index;return core.ec().enter(index_r4+1)})(\"click\",function(){core.tc(_r7);const index_r4=ctx.index;return core.ec().handleClick(index_r4+1)}),core.yc(3,NgbRating_ng_template_2_ng_template_3_Template,0,0,\"ng-template\",4),core.Rb()}if(2&rf){const index_r4=ctx.index,ctx_r2=core.ec(),_r0=core.sc(1);core.Ab(1),core.Cc(\"(\",index_r4<ctx_r2.nextRate?\"*\":\" \",\")\"),core.Ab(1),core.xc(\"cursor\",ctx_r2.readonly||ctx_r2.disabled?\"default\":\"pointer\"),core.Ab(1),core.kc(\"ngTemplateOutlet\",ctx_r2.starTemplate||ctx_r2.starTemplateFromContent||_r0)(\"ngTemplateOutletContext\",ctx_r2.contexts[index_r4])}}function NgbTabset_li_1_ng_template_3_Template(rf,ctx){}function NgbTabset_li_1_Template(rf,ctx){if(1&rf){const _r5=core.Tb();core.Sb(0,\"li\",4),core.Sb(1,\"a\",5),core.cc(\"click\",function($event){core.tc(_r5);const tab_r2=ctx.$implicit;return core.ec().select(tab_r2.id),$event.preventDefault()}),core.Ac(2),core.yc(3,NgbTabset_li_1_ng_template_3_Template,0,0,\"ng-template\",6),core.Rb(),core.Rb()}if(2&rf){const tab_r2=ctx.$implicit,ctx_r0=core.ec();core.Ab(1),core.Fb(\"active\",tab_r2.id===ctx_r0.activeId)(\"disabled\",tab_r2.disabled),core.kc(\"id\",tab_r2.id),core.Bb(\"tabindex\",tab_r2.disabled?\"-1\":void 0)(\"aria-controls\",ctx_r0.destroyOnHide&&tab_r2.id!==ctx_r0.activeId?null:tab_r2.id+\"-panel\")(\"aria-selected\",tab_r2.id===ctx_r0.activeId)(\"aria-disabled\",tab_r2.disabled),core.Ab(1),core.Cc(\" \",tab_r2.title,\"\"),core.Ab(1),core.kc(\"ngTemplateOutlet\",(null==tab_r2.titleTpl?null:tab_r2.titleTpl.templateRef)||null)}}function NgbTabset_ng_template_3_div_0_ng_template_1_Template(rf,ctx){}function NgbTabset_ng_template_3_div_0_Template(rf,ctx){if(1&rf&&(core.Sb(0,\"div\",8),core.yc(1,NgbTabset_ng_template_3_div_0_ng_template_1_Template,0,0,\"ng-template\",6),core.Rb()),2&rf){const tab_r6=core.ec().$implicit,ctx_r7=core.ec();core.Db(\"tab-pane \",tab_r6.id===ctx_r7.activeId?\"active\":null,\"\"),core.mc(\"id\",\"\",tab_r6.id,\"-panel\"),core.Bb(\"aria-labelledby\",tab_r6.id),core.Ab(1),core.kc(\"ngTemplateOutlet\",(null==tab_r6.contentTpl?null:tab_r6.contentTpl.templateRef)||null)}}function NgbTabset_ng_template_3_Template(rf,ctx){if(1&rf&&core.yc(0,NgbTabset_ng_template_3_div_0_Template,2,6,\"div\",7),2&rf){const tab_r6=ctx.$implicit,ctx_r1=core.ec();core.kc(\"ngIf\",!ctx_r1.destroyOnHide||tab_r6.id===ctx_r1.activeId)}}function NgbTimepicker_button_3_Template(rf,ctx){if(1&rf){const _r9=core.Tb();core.Sb(0,\"button\",11),core.cc(\"click\",function(){core.tc(_r9);const ctx_r8=core.ec();return ctx_r8.changeHour(ctx_r8.hourStep)}),core.Ob(1,\"span\",12),core.Sb(2,\"span\",13),core.Wb(3,14),core.Rb(),core.Rb()}if(2&rf){const ctx_r0=core.ec();core.Fb(\"btn-sm\",ctx_r0.isSmallSize)(\"btn-lg\",ctx_r0.isLargeSize)(\"disabled\",ctx_r0.disabled),core.kc(\"disabled\",ctx_r0.disabled)}}function NgbTimepicker_button_5_Template(rf,ctx){if(1&rf){const _r11=core.Tb();core.Sb(0,\"button\",11),core.cc(\"click\",function(){core.tc(_r11);const ctx_r10=core.ec();return ctx_r10.changeHour(-ctx_r10.hourStep)}),core.Ob(1,\"span\",15),core.Sb(2,\"span\",13),core.Wb(3,16),core.Rb(),core.Rb()}if(2&rf){const ctx_r1=core.ec();core.Fb(\"btn-sm\",ctx_r1.isSmallSize)(\"btn-lg\",ctx_r1.isLargeSize)(\"disabled\",ctx_r1.disabled),core.kc(\"disabled\",ctx_r1.disabled)}}function NgbTimepicker_button_9_Template(rf,ctx){if(1&rf){const _r13=core.Tb();core.Sb(0,\"button\",11),core.cc(\"click\",function(){core.tc(_r13);const ctx_r12=core.ec();return ctx_r12.changeMinute(ctx_r12.minuteStep)}),core.Ob(1,\"span\",12),core.Sb(2,\"span\",13),core.Wb(3,17),core.Rb(),core.Rb()}if(2&rf){const ctx_r2=core.ec();core.Fb(\"btn-sm\",ctx_r2.isSmallSize)(\"btn-lg\",ctx_r2.isLargeSize)(\"disabled\",ctx_r2.disabled),core.kc(\"disabled\",ctx_r2.disabled)}}function NgbTimepicker_button_11_Template(rf,ctx){if(1&rf){const _r15=core.Tb();core.Sb(0,\"button\",11),core.cc(\"click\",function(){core.tc(_r15);const ctx_r14=core.ec();return ctx_r14.changeMinute(-ctx_r14.minuteStep)}),core.Ob(1,\"span\",15),core.Sb(2,\"span\",13),core.Wb(3,18),core.Rb(),core.Rb()}if(2&rf){const ctx_r3=core.ec();core.Fb(\"btn-sm\",ctx_r3.isSmallSize)(\"btn-lg\",ctx_r3.isLargeSize)(\"disabled\",ctx_r3.disabled),core.kc(\"disabled\",ctx_r3.disabled)}}function NgbTimepicker_div_12_Template(rf,ctx){1&rf&&(core.Sb(0,\"div\",5),core.Ac(1,\":\"),core.Rb())}function NgbTimepicker_div_13_button_1_Template(rf,ctx){if(1&rf){const _r19=core.Tb();core.Sb(0,\"button\",11),core.cc(\"click\",function(){core.tc(_r19);const ctx_r18=core.ec(2);return ctx_r18.changeSecond(ctx_r18.secondStep)}),core.Ob(1,\"span\",12),core.Sb(2,\"span\",13),core.Wb(3,21),core.Rb(),core.Rb()}if(2&rf){const ctx_r16=core.ec(2);core.Fb(\"btn-sm\",ctx_r16.isSmallSize)(\"btn-lg\",ctx_r16.isLargeSize)(\"disabled\",ctx_r16.disabled),core.kc(\"disabled\",ctx_r16.disabled)}}function NgbTimepicker_div_13_button_3_Template(rf,ctx){if(1&rf){const _r21=core.Tb();core.Sb(0,\"button\",11),core.cc(\"click\",function(){core.tc(_r21);const ctx_r20=core.ec(2);return ctx_r20.changeSecond(-ctx_r20.secondStep)}),core.Ob(1,\"span\",15),core.Sb(2,\"span\",13),core.Wb(3,22),core.Rb(),core.Rb()}if(2&rf){const ctx_r17=core.ec(2);core.Fb(\"btn-sm\",ctx_r17.isSmallSize)(\"btn-lg\",ctx_r17.isLargeSize)(\"disabled\",ctx_r17.disabled),core.kc(\"disabled\",ctx_r17.disabled)}}function NgbTimepicker_div_13_Template(rf,ctx){if(1&rf){const _r23=core.Tb();core.Sb(0,\"div\",19),core.yc(1,NgbTimepicker_div_13_button_1_Template,4,7,\"button\",3),core.Sb(2,\"input\",20),core.cc(\"change\",function($event){return core.tc(_r23),core.ec().updateSecond($event.target.value)})(\"input\",function($event){return core.tc(_r23),core.ec().formatInput($event.target)})(\"keydown.ArrowUp\",function($event){core.tc(_r23);const ctx_r25=core.ec();return ctx_r25.changeSecond(ctx_r25.secondStep),$event.preventDefault()})(\"keydown.ArrowDown\",function($event){core.tc(_r23);const ctx_r26=core.ec();return ctx_r26.changeSecond(-ctx_r26.secondStep),$event.preventDefault()}),core.Rb(),core.yc(3,NgbTimepicker_div_13_button_3_Template,4,7,\"button\",3),core.Rb()}if(2&rf){const ctx_r5=core.ec();core.Ab(1),core.kc(\"ngIf\",ctx_r5.spinners),core.Ab(1),core.Fb(\"form-control-sm\",ctx_r5.isSmallSize)(\"form-control-lg\",ctx_r5.isLargeSize),core.kc(\"value\",ctx_r5.formatMinSec(null==ctx_r5.model?null:ctx_r5.model.second))(\"readOnly\",ctx_r5.readonlyInputs)(\"disabled\",ctx_r5.disabled),core.Ab(1),core.kc(\"ngIf\",ctx_r5.spinners)}}function NgbTimepicker_div_14_Template(rf,ctx){1&rf&&core.Ob(0,\"div\",5)}function NgbTimepicker_div_15_ng_container_2_Template(rf,ctx){if(1&rf&&(core.Qb(0),core.Wb(1,27),core.Pb()),2&rf){const ctx_r27=core.ec(2);core.Ab(1),core.Yb(ctx_r27.i18n.getAfternoonPeriod()),core.Xb(1)}}function NgbTimepicker_div_15_ng_template_3_Template(rf,ctx){if(1&rf&&core.Wb(0,28),2&rf){const ctx_r29=core.ec(2);core.Yb(ctx_r29.i18n.getMorningPeriod()),core.Xb(0)}}function NgbTimepicker_div_15_Template(rf,ctx){if(1&rf){const _r31=core.Tb();core.Sb(0,\"div\",23),core.Sb(1,\"button\",24),core.cc(\"click\",function(){return core.tc(_r31),core.ec().toggleMeridian()}),core.yc(2,NgbTimepicker_div_15_ng_container_2_Template,2,1,\"ng-container\",25),core.yc(3,NgbTimepicker_div_15_ng_template_3_Template,1,1,\"ng-template\",null,26,core.zc),core.Rb(),core.Rb()}if(2&rf){const _r28=core.sc(4),ctx_r7=core.ec();core.Ab(1),core.Fb(\"btn-sm\",ctx_r7.isSmallSize)(\"btn-lg\",ctx_r7.isLargeSize)(\"disabled\",ctx_r7.disabled),core.kc(\"disabled\",ctx_r7.disabled),core.Ab(1),core.kc(\"ngIf\",ctx_r7.model&&ctx_r7.model.hour>=12)(\"ngIfElse\",_r28)}}function NgbHighlight_ng_template_0_span_0_Template(rf,ctx){if(1&rf&&(core.Sb(0,\"span\"),core.Ac(1),core.Rb()),2&rf){const part_r1=core.ec().$implicit,ctx_r3=core.ec();core.Cb(ctx_r3.highlightClass),core.Ab(1),core.Bc(part_r1)}}function NgbHighlight_ng_template_0_ng_template_1_Template(rf,ctx){if(1&rf&&core.Ac(0),2&rf){const part_r1=core.ec().$implicit;core.Bc(part_r1)}}function NgbHighlight_ng_template_0_Template(rf,ctx){if(1&rf&&(core.yc(0,NgbHighlight_ng_template_0_span_0_Template,2,3,\"span\",1),core.yc(1,NgbHighlight_ng_template_0_ng_template_1_Template,1,1,\"ng-template\",null,2,core.zc)),2&rf){const isOdd_r2=ctx.odd,_r4=core.sc(2);core.kc(\"ngIf\",isOdd_r2)(\"ngIfElse\",_r4)}}function NgbTypeaheadWindow_ng_template_0_Template(rf,ctx){if(1&rf&&core.Ob(0,\"ngb-highlight\",2),2&rf){const term_r4=ctx.term;core.kc(\"result\",(0,ctx.formatter)(ctx.result))(\"term\",term_r4)}}function NgbTypeaheadWindow_ng_template_2_ng_template_1_Template(rf,ctx){}const _c84=function(a0,a1,a2){return{result:a0,term:a1,formatter:a2}};function NgbTypeaheadWindow_ng_template_2_Template(rf,ctx){if(1&rf){const _r10=core.Tb();core.Sb(0,\"button\",3),core.cc(\"mouseenter\",function(){core.tc(_r10);const idx_r7=ctx.index;return core.ec().markActive(idx_r7)})(\"click\",function(){core.tc(_r10);const result_r6=ctx.$implicit;return core.ec().select(result_r6)}),core.yc(1,NgbTypeaheadWindow_ng_template_2_ng_template_1_Template,0,0,\"ng-template\",4),core.Rb()}if(2&rf){const result_r6=ctx.$implicit,idx_r7=ctx.index,ctx_r2=core.ec(),_r0=core.sc(1);core.Fb(\"active\",idx_r7===ctx_r2.activeIdx),core.kc(\"id\",ctx_r2.id+\"-\"+idx_r7),core.Ab(1),core.kc(\"ngTemplateOutlet\",ctx_r2.resultTemplate||_r0)(\"ngTemplateOutletContext\",core.qc(5,_c84,result_r6,ctx_r2.term,ctx_r2.formatter))}}function toInteger(value){return parseInt(`${value}`,10)}function ng_bootstrap_toString(value){return null!=value?`${value}`:\"\"}function getValueInRange(value,max,min=0){return Math.max(Math.min(value,max),min)}function isString(value){return\"string\"==typeof value}function isNumber(value){return!isNaN(toInteger(value))}function isInteger(value){return\"number\"==typeof value&&isFinite(value)&&Math.floor(value)===value}function isDefined(value){return null!=value}function padNumber(value){return isNumber(value)?`0${value}`.slice(-2):\"\"}function hasClassName(element,className){return element&&element.className&&element.className.split&&element.className.split(/\\s+/).indexOf(className)>=0}\"undefined\"==typeof Element||Element.prototype.closest||(Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector),Element.prototype.closest=function(s){let el=this;if(!document.documentElement.contains(el))return null;do{if(el.matches(s))return el;el=el.parentElement||el.parentNode}while(null!==el&&1===el.nodeType);return null});let ng_bootstrap_NgbAccordionModule=(()=>{let NgbAccordionModule=class{};return NgbAccordionModule.ɵfac=function(t){return new(t||NgbAccordionModule)},NgbAccordionModule.ɵmod=core.Lb({type:NgbAccordionModule}),NgbAccordionModule.ɵinj=core.Kb({imports:[[common.b]]}),NgbAccordionModule})(),ng_bootstrap_NgbAlertConfig=(()=>{let NgbAlertConfig=class{constructor(){this.dismissible=!0,this.type=\"warning\"}};return NgbAlertConfig.ɵfac=function(t){return new(t||NgbAlertConfig)},NgbAlertConfig.ɵprov=Object(core.Jb)({factory:function(){return new NgbAlertConfig},token:NgbAlertConfig,providedIn:\"root\"}),NgbAlertConfig})(),ng_bootstrap_NgbAlert=(()=>{let NgbAlert=class{constructor(config,_renderer,_element){this._renderer=_renderer,this._element=_element,this.close=new core.o,this.dismissible=config.dismissible,this.type=config.type}closeHandler(){this.close.emit()}ngOnChanges(changes){const typeChange=changes.type;typeChange&&!typeChange.firstChange&&(this._renderer.removeClass(this._element.nativeElement,`alert-${typeChange.previousValue}`),this._renderer.addClass(this._element.nativeElement,`alert-${typeChange.currentValue}`))}ngOnInit(){this._renderer.addClass(this._element.nativeElement,`alert-${this.type}`)}};return NgbAlert.ɵfac=function(t){return new(t||NgbAlert)(core.Nb(ng_bootstrap_NgbAlertConfig),core.Nb(core.G),core.Nb(core.m))},NgbAlert.ɵcmp=core.Hb({type:NgbAlert,selectors:[[\"ngb-alert\"]],hostAttrs:[\"role\",\"alert\",1,\"alert\"],hostVars:2,hostBindings:function(rf,ctx){2&rf&&core.Fb(\"alert-dismissible\",ctx.dismissible)},inputs:{dismissible:\"dismissible\",type:\"type\"},outputs:{close:\"close\"},features:[core.yb],ngContentSelectors:_c3,decls:2,vars:1,consts:function(){let i18n_1;return i18n_1=$localize`:@@ngb.alert.close␟f4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8␟7819314041543176992:Close`,[[\"type\",\"button\",\"class\",\"close\",\"aria-label\",i18n_1,3,\"click\",4,\"ngIf\"],[\"type\",\"button\",\"aria-label\",i18n_1,1,\"close\",3,\"click\"],[\"aria-hidden\",\"true\"]]},template:function(rf,ctx){1&rf&&(core.jc(),core.ic(0),core.yc(1,NgbAlert_button_1_Template,3,0,\"button\",0)),2&rf&&(core.Ab(1),core.kc(\"ngIf\",ctx.dismissible))},directives:[common.m],styles:[\"ngb-alert{display:block}\"],encapsulation:2,changeDetection:0}),NgbAlert})(),ng_bootstrap_NgbAlertModule=(()=>{let NgbAlertModule=class{};return NgbAlertModule.ɵfac=function(t){return new(t||NgbAlertModule)},NgbAlertModule.ɵmod=core.Lb({type:NgbAlertModule}),NgbAlertModule.ɵinj=core.Kb({imports:[[common.b]]}),NgbAlertModule})(),ng_bootstrap_NgbButtonLabel=(()=>{let NgbButtonLabel=class{};return NgbButtonLabel.ɵfac=function(t){return new(t||NgbButtonLabel)},NgbButtonLabel.ɵdir=core.Ib({type:NgbButtonLabel,selectors:[[\"\",\"ngbButtonLabel\",\"\"]],hostVars:8,hostBindings:function(rf,ctx){2&rf&&core.Fb(\"btn\",!0)(\"active\",ctx.active)(\"disabled\",ctx.disabled)(\"focus\",ctx.focused)}}),NgbButtonLabel})();const NGB_CHECKBOX_VALUE_ACCESSOR={provide:fesm2015_forms.i,useExisting:Object(core.V)(()=>ng_bootstrap_NgbCheckBox),multi:!0};let ng_bootstrap_NgbCheckBox=(()=>{let NgbCheckBox=class{constructor(_label,_cd){this._label=_label,this._cd=_cd,this.disabled=!1,this.valueChecked=!0,this.valueUnChecked=!1,this.onChange=_=>{},this.onTouched=()=>{}}set focused(isFocused){this._label.focused=isFocused,isFocused||this.onTouched()}onInputChange($event){const modelToPropagate=$event.target.checked?this.valueChecked:this.valueUnChecked;this.onChange(modelToPropagate),this.onTouched(),this.writeValue(modelToPropagate)}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled,this._label.disabled=isDisabled}writeValue(value){this.checked=value===this.valueChecked,this._label.active=this.checked,this._cd.markForCheck()}};return NgbCheckBox.ɵfac=function(t){return new(t||NgbCheckBox)(core.Nb(ng_bootstrap_NgbButtonLabel),core.Nb(core.i))},NgbCheckBox.ɵdir=core.Ib({type:NgbCheckBox,selectors:[[\"\",\"ngbButton\",\"\",\"type\",\"checkbox\"]],hostVars:2,hostBindings:function(rf,ctx){1&rf&&core.cc(\"change\",function($event){return ctx.onInputChange($event)})(\"focus\",function(){return ctx.focused=!0})(\"blur\",function(){return ctx.focused=!1}),2&rf&&core.Vb(\"checked\",ctx.checked)(\"disabled\",ctx.disabled)},inputs:{disabled:\"disabled\",valueChecked:\"valueChecked\",valueUnChecked:\"valueUnChecked\"},features:[core.zb([NGB_CHECKBOX_VALUE_ACCESSOR])]}),NgbCheckBox})();const NGB_RADIO_VALUE_ACCESSOR={provide:fesm2015_forms.i,useExisting:Object(core.V)(()=>ng_bootstrap_NgbRadioGroup),multi:!0};let nextId$1=0,ng_bootstrap_NgbRadioGroup=(()=>{let NgbRadioGroup=class{constructor(){this._radios=new Set,this._value=null,this.name=\"ngb-radio-\"+nextId$1++,this.onChange=_=>{},this.onTouched=()=>{}}get disabled(){return this._disabled}set disabled(isDisabled){this.setDisabledState(isDisabled)}onRadioChange(radio){this.writeValue(radio.value),this.onChange(radio.value)}onRadioValueUpdate(){this._updateRadiosValue()}register(radio){this._radios.add(radio)}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this._disabled=isDisabled,this._updateRadiosDisabled()}unregister(radio){this._radios.delete(radio)}writeValue(value){this._value=value,this._updateRadiosValue()}_updateRadiosValue(){this._radios.forEach(radio=>radio.updateValue(this._value))}_updateRadiosDisabled(){this._radios.forEach(radio=>radio.updateDisabled())}};return NgbRadioGroup.ɵfac=function(t){return new(t||NgbRadioGroup)},NgbRadioGroup.ɵdir=core.Ib({type:NgbRadioGroup,selectors:[[\"\",\"ngbRadioGroup\",\"\"]],hostAttrs:[\"role\",\"radiogroup\"],inputs:{name:\"name\"},features:[core.zb([NGB_RADIO_VALUE_ACCESSOR])]}),NgbRadioGroup})(),ng_bootstrap_NgbRadio=(()=>{let NgbRadio=class{constructor(_group,_label,_renderer,_element,_cd){this._group=_group,this._label=_label,this._renderer=_renderer,this._element=_element,this._cd=_cd,this._value=null,this._group.register(this),this.updateDisabled()}set value(value){this._value=value;const stringValue=value?value.toString():\"\";this._renderer.setProperty(this._element.nativeElement,\"value\",stringValue),this._group.onRadioValueUpdate()}set disabled(isDisabled){this._disabled=!1!==isDisabled,this.updateDisabled()}set focused(isFocused){this._label&&(this._label.focused=isFocused),isFocused||this._group.onTouched()}get checked(){return this._checked}get disabled(){return this._group.disabled||this._disabled}get value(){return this._value}get nameAttr(){return this.name||this._group.name}ngOnDestroy(){this._group.unregister(this)}onChange(){this._group.onRadioChange(this)}updateValue(value){this.value!==value&&this._cd.markForCheck(),this._checked=this.value===value,this._label.active=this._checked}updateDisabled(){this._label.disabled=this.disabled}};return NgbRadio.ɵfac=function(t){return new(t||NgbRadio)(core.Nb(ng_bootstrap_NgbRadioGroup),core.Nb(ng_bootstrap_NgbButtonLabel),core.Nb(core.G),core.Nb(core.m),core.Nb(core.i))},NgbRadio.ɵdir=core.Ib({type:NgbRadio,selectors:[[\"\",\"ngbButton\",\"\",\"type\",\"radio\"]],hostVars:3,hostBindings:function(rf,ctx){1&rf&&core.cc(\"change\",function(){return ctx.onChange()})(\"focus\",function(){return ctx.focused=!0})(\"blur\",function(){return ctx.focused=!1}),2&rf&&core.Vb(\"checked\",ctx.checked)(\"disabled\",ctx.disabled)(\"name\",ctx.nameAttr)},inputs:{value:\"value\",disabled:\"disabled\",name:\"name\"}}),NgbRadio})(),ng_bootstrap_NgbButtonsModule=(()=>{let NgbButtonsModule=class{};return NgbButtonsModule.ɵfac=function(t){return new(t||NgbButtonsModule)},NgbButtonsModule.ɵmod=core.Lb({type:NgbButtonsModule}),NgbButtonsModule.ɵinj=core.Kb({}),NgbButtonsModule})(),ng_bootstrap_NgbCarouselConfig=(()=>{let NgbCarouselConfig=class{constructor(){this.interval=5e3,this.wrap=!0,this.keyboard=!0,this.pauseOnHover=!0,this.showNavigationArrows=!0,this.showNavigationIndicators=!0}};return NgbCarouselConfig.ɵfac=function(t){return new(t||NgbCarouselConfig)},NgbCarouselConfig.ɵprov=Object(core.Jb)({factory:function(){return new NgbCarouselConfig},token:NgbCarouselConfig,providedIn:\"root\"}),NgbCarouselConfig})(),nextId$2=0,ng_bootstrap_NgbSlide=(()=>{let NgbSlide=class{constructor(tplRef){this.tplRef=tplRef,this.id=\"ngb-slide-\"+nextId$2++}};return NgbSlide.ɵfac=function(t){return new(t||NgbSlide)(core.Nb(core.N))},NgbSlide.ɵdir=core.Ib({type:NgbSlide,selectors:[[\"ng-template\",\"ngbSlide\",\"\"]],inputs:{id:\"id\"}}),NgbSlide})(),ng_bootstrap_NgbCarousel=(()=>{let NgbCarousel=class{constructor(config,_platformId,_ngZone,_cd){this._platformId=_platformId,this._ngZone=_ngZone,this._cd=_cd,this.NgbSlideEventSource=NgbSlideEventSource,this._destroy$=new Subject.a,this._interval$=new BehaviorSubject.a(0),this._mouseHover$=new BehaviorSubject.a(!1),this._pauseOnHover$=new BehaviorSubject.a(!1),this._pause$=new BehaviorSubject.a(!1),this._wrap$=new BehaviorSubject.a(!1),this.slide=new core.o,this.interval=config.interval,this.wrap=config.wrap,this.keyboard=config.keyboard,this.pauseOnHover=config.pauseOnHover,this.showNavigationArrows=config.showNavigationArrows,this.showNavigationIndicators=config.showNavigationIndicators}set interval(value){this._interval$.next(value)}get interval(){return this._interval$.value}set wrap(value){this._wrap$.next(value)}get wrap(){return this._wrap$.value}set pauseOnHover(value){this._pauseOnHover$.next(value)}get pauseOnHover(){return this._pauseOnHover$.value}mouseEnter(){this._mouseHover$.next(!0)}mouseLeave(){this._mouseHover$.next(!1)}ngAfterContentInit(){Object(common.x)(this._platformId)&&this._ngZone.runOutsideAngular(()=>{const hasNextSlide$=Object(combineLatest.a)([this.slide.pipe(Object(map.a)(slideEvent=>slideEvent.current),Object(startWith.a)(this.activeId)),this._wrap$,this.slides.changes.pipe(Object(startWith.a)(null))]).pipe(Object(map.a)(([currentSlideId,wrap])=>{const slideArr=this.slides.toArray(),currentSlideIdx=this._getSlideIdxById(currentSlideId);return wrap?slideArr.length>1:currentSlideIdx<slideArr.length-1}),distinctUntilChanged());Object(combineLatest.a)([this._pause$,this._pauseOnHover$,this._mouseHover$,this._interval$,hasNextSlide$]).pipe(Object(map.a)(([pause,pauseOnHover,mouseHover,interval,hasNextSlide])=>pause||pauseOnHover&&mouseHover||!hasNextSlide?0:interval),distinctUntilChanged(),Object(switchMap.a)(interval=>interval>0?function(dueTime=0,periodOrScheduler,scheduler){let period=-1;return isNumeric(periodOrScheduler)?period=Number(periodOrScheduler)<1?1:Number(periodOrScheduler):Object(isScheduler.a)(periodOrScheduler)&&(scheduler=periodOrScheduler),Object(isScheduler.a)(scheduler)||(scheduler=async_async),new Observable.a(subscriber=>{const due=isNumeric(dueTime)?dueTime:+dueTime-scheduler.now();return scheduler.schedule(dispatch,due,{index:0,period:period,subscriber:subscriber})})}(interval,interval):NEVER),takeUntil(this._destroy$)).subscribe(()=>this._ngZone.run(()=>this.next(NgbSlideEventSource.TIMER)))}),this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(()=>this._cd.markForCheck())}ngAfterContentChecked(){let activeSlide=this._getSlideById(this.activeId);this.activeId=activeSlide?activeSlide.id:this.slides.length?this.slides.first.id:\"\"}ngOnDestroy(){this._destroy$.next()}select(slideId,source){this._cycleToSelected(slideId,this._getSlideEventDirection(this.activeId,slideId),source)}prev(source){this._cycleToSelected(this._getPrevSlide(this.activeId),NgbSlideEventDirection.RIGHT,source)}next(source){this._cycleToSelected(this._getNextSlide(this.activeId),NgbSlideEventDirection.LEFT,source)}pause(){this._pause$.next(!0)}cycle(){this._pause$.next(!1)}_cycleToSelected(slideIdx,direction,source){let selectedSlide=this._getSlideById(slideIdx);selectedSlide&&selectedSlide.id!==this.activeId&&(this.slide.emit({prev:this.activeId,current:selectedSlide.id,direction:direction,paused:this._pause$.value,source:source}),this.activeId=selectedSlide.id),this._cd.markForCheck()}_getSlideEventDirection(currentActiveSlideId,nextActiveSlideId){return this._getSlideIdxById(currentActiveSlideId)>this._getSlideIdxById(nextActiveSlideId)?NgbSlideEventDirection.RIGHT:NgbSlideEventDirection.LEFT}_getSlideById(slideId){return this.slides.find(slide=>slide.id===slideId)||null}_getSlideIdxById(slideId){const slide=this._getSlideById(slideId);return null!=slide?this.slides.toArray().indexOf(slide):-1}_getNextSlide(currentSlideId){const slideArr=this.slides.toArray(),currentSlideIdx=this._getSlideIdxById(currentSlideId);return currentSlideIdx===slideArr.length-1?this.wrap?slideArr[0].id:slideArr[slideArr.length-1].id:slideArr[currentSlideIdx+1].id}_getPrevSlide(currentSlideId){const slideArr=this.slides.toArray(),currentSlideIdx=this._getSlideIdxById(currentSlideId);return 0===currentSlideIdx?this.wrap?slideArr[slideArr.length-1].id:slideArr[0].id:slideArr[currentSlideIdx-1].id}};return NgbCarousel.ɵfac=function(t){return new(t||NgbCarousel)(core.Nb(ng_bootstrap_NgbCarouselConfig),core.Nb(core.E),core.Nb(core.C),core.Nb(core.i))},NgbCarousel.ɵcmp=core.Hb({type:NgbCarousel,selectors:[[\"ngb-carousel\"]],contentQueries:function(rf,ctx,dirIndex){if(1&rf&&core.Gb(dirIndex,ng_bootstrap_NgbSlide,0),2&rf){let _t;core.rc(_t=core.dc())&&(ctx.slides=_t)}},hostAttrs:[\"tabIndex\",\"0\",1,\"carousel\",\"slide\"],hostVars:2,hostBindings:function(rf,ctx){1&rf&&core.cc(\"keydown.arrowLeft\",function(){return ctx.keyboard&&ctx.prev(ctx.NgbSlideEventSource.ARROW_LEFT)})(\"keydown.arrowRight\",function(){return ctx.keyboard&&ctx.next(ctx.NgbSlideEventSource.ARROW_RIGHT)})(\"mouseenter\",function(){return ctx.mouseEnter()})(\"mouseleave\",function(){return ctx.mouseLeave()}),2&rf&&core.xc(\"display\",\"block\")},inputs:{interval:\"interval\",wrap:\"wrap\",keyboard:\"keyboard\",pauseOnHover:\"pauseOnHover\",showNavigationArrows:\"showNavigationArrows\",showNavigationIndicators:\"showNavigationIndicators\",activeId:\"activeId\"},outputs:{slide:\"slide\"},exportAs:[\"ngbCarousel\"],decls:5,vars:4,consts:function(){let i18n_4,i18n_6;return i18n_4=$localize`:@@ngb.carousel.previous␟680d5c75b7fd8d37961083608b9fcdc4167b4c43␟4452427314943113135:Previous`,i18n_6=$localize`:@@ngb.carousel.next␟f732c304c7433e5a83ffcd862c3dce709a0f4982␟3885497195825665706:Next`,[[\"class\",\"carousel-indicators\",4,\"ngIf\"],[1,\"carousel-inner\"],[\"class\",\"carousel-item\",3,\"active\",4,\"ngFor\",\"ngForOf\"],[\"class\",\"carousel-control-prev\",\"role\",\"button\",3,\"click\",4,\"ngIf\"],[\"class\",\"carousel-control-next\",\"role\",\"button\",3,\"click\",4,\"ngIf\"],[1,\"carousel-indicators\"],[3,\"id\",\"active\",\"click\",4,\"ngFor\",\"ngForOf\"],[3,\"id\",\"click\"],[1,\"carousel-item\"],[3,\"ngTemplateOutlet\"],[\"role\",\"button\",1,\"carousel-control-prev\",3,\"click\"],[\"aria-hidden\",\"true\",1,\"carousel-control-prev-icon\"],[1,\"sr-only\"],i18n_4,[\"role\",\"button\",1,\"carousel-control-next\",3,\"click\"],[\"aria-hidden\",\"true\",1,\"carousel-control-next-icon\"],i18n_6]},template:function(rf,ctx){1&rf&&(core.yc(0,NgbCarousel_ol_0_Template,2,1,\"ol\",0),core.Sb(1,\"div\",1),core.yc(2,NgbCarousel_div_2_Template,2,3,\"div\",2),core.Rb(),core.yc(3,NgbCarousel_a_3_Template,4,0,\"a\",3),core.yc(4,NgbCarousel_a_4_Template,4,0,\"a\",4)),2&rf&&(core.kc(\"ngIf\",ctx.showNavigationIndicators),core.Ab(2),core.kc(\"ngForOf\",ctx.slides),core.Ab(1),core.kc(\"ngIf\",ctx.showNavigationArrows),core.Ab(1),core.kc(\"ngIf\",ctx.showNavigationArrows))},directives:[common.m,common.l,common.n],encapsulation:2,changeDetection:0}),NgbCarousel=__decorate([__param(1,Object(core.r)(core.E))],NgbCarousel),NgbCarousel})();var NgbSlideEventDirection=function(NgbSlideEventDirection){return NgbSlideEventDirection[NgbSlideEventDirection.LEFT=\"left\"]=\"LEFT\",NgbSlideEventDirection[NgbSlideEventDirection.RIGHT=\"right\"]=\"RIGHT\",NgbSlideEventDirection}({}),NgbSlideEventSource=function(NgbSlideEventSource){return NgbSlideEventSource.TIMER=\"timer\",NgbSlideEventSource.ARROW_LEFT=\"arrowLeft\",NgbSlideEventSource.ARROW_RIGHT=\"arrowRight\",NgbSlideEventSource.INDICATOR=\"indicator\",NgbSlideEventSource}({});let ng_bootstrap_NgbCarouselModule=(()=>{let NgbCarouselModule=class{};return NgbCarouselModule.ɵfac=function(t){return new(t||NgbCarouselModule)},NgbCarouselModule.ɵmod=core.Lb({type:NgbCarouselModule}),NgbCarouselModule.ɵinj=core.Kb({imports:[[common.b]]}),NgbCarouselModule})(),ng_bootstrap_NgbCollapse=(()=>{let NgbCollapse=class{constructor(){this.collapsed=!1}};return NgbCollapse.ɵfac=function(t){return new(t||NgbCollapse)},NgbCollapse.ɵdir=core.Ib({type:NgbCollapse,selectors:[[\"\",\"ngbCollapse\",\"\"]],hostVars:4,hostBindings:function(rf,ctx){2&rf&&core.Fb(\"collapse\",!0)(\"show\",!ctx.collapsed)},inputs:{collapsed:[\"ngbCollapse\",\"collapsed\"]},exportAs:[\"ngbCollapse\"]}),NgbCollapse})(),ng_bootstrap_NgbCollapseModule=(()=>{let NgbCollapseModule=class{};return NgbCollapseModule.ɵfac=function(t){return new(t||NgbCollapseModule)},NgbCollapseModule.ɵmod=core.Lb({type:NgbCollapseModule}),NgbCollapseModule.ɵinj=core.Kb({}),NgbCollapseModule})();class NgbDate{constructor(year,month,day){this.year=isInteger(year)?year:null,this.month=isInteger(month)?month:null,this.day=isInteger(day)?day:null}static from(date){return date instanceof NgbDate?date:date?new NgbDate(date.year,date.month,date.day):null}equals(other){return null!=other&&this.year===other.year&&this.month===other.month&&this.day===other.day}before(other){return!!other&&(this.year===other.year?this.month===other.month?this.day!==other.day&&this.day<other.day:this.month<other.month:this.year<other.year)}after(other){return!!other&&(this.year===other.year?this.month===other.month?this.day!==other.day&&this.day>other.day:this.month>other.month:this.year>other.year)}}function fromJSDate(jsDate){return new NgbDate(jsDate.getFullYear(),jsDate.getMonth()+1,jsDate.getDate())}function toJSDate(date){const jsDate=new Date(date.year,date.month-1,date.day,12);return isNaN(jsDate.getTime())||jsDate.setFullYear(date.year),jsDate}function NGB_DATEPICKER_CALENDAR_FACTORY(){return new ng_bootstrap_NgbCalendarGregorian}let ng_bootstrap_NgbCalendar=(()=>{let NgbCalendar=class{};return NgbCalendar.ɵfac=function(t){return new(t||NgbCalendar)},NgbCalendar.ɵprov=Object(core.Jb)({factory:NGB_DATEPICKER_CALENDAR_FACTORY,token:NgbCalendar,providedIn:\"root\"}),NgbCalendar})(),ng_bootstrap_NgbCalendarGregorian=(()=>{let NgbCalendarGregorian=class extends ng_bootstrap_NgbCalendar{getDaysPerWeek(){return 7}getMonths(){return[1,2,3,4,5,6,7,8,9,10,11,12]}getWeeksPerMonth(){return 6}getNext(date,period=\"d\",number=1){let jsDate=toJSDate(date),checkMonth=!0,expectedMonth=jsDate.getMonth();switch(period){case\"y\":jsDate.setFullYear(jsDate.getFullYear()+number);break;case\"m\":expectedMonth+=number,jsDate.setMonth(expectedMonth),expectedMonth%=12,expectedMonth<0&&(expectedMonth+=12);break;case\"d\":jsDate.setDate(jsDate.getDate()+number),checkMonth=!1;break;default:return date}return checkMonth&&jsDate.getMonth()!==expectedMonth&&jsDate.setDate(0),fromJSDate(jsDate)}getPrev(date,period=\"d\",number=1){return this.getNext(date,period,-number)}getWeekday(date){let day=toJSDate(date).getDay();return 0===day?7:day}getWeekNumber(week,firstDayOfWeek){7===firstDayOfWeek&&(firstDayOfWeek=0);const jsDate=toJSDate(week[(11-firstDayOfWeek)%7]);jsDate.setDate(jsDate.getDate()+4-(jsDate.getDay()||7));const time=jsDate.getTime();return jsDate.setMonth(0),jsDate.setDate(1),Math.floor(Math.round((time-jsDate.getTime())/864e5)/7)+1}getToday(){return fromJSDate(new Date)}isValid(date){if(!(date&&isInteger(date.year)&&isInteger(date.month)&&isInteger(date.day)))return!1;if(0===date.year)return!1;const jsDate=toJSDate(date);return!isNaN(jsDate.getTime())&&jsDate.getFullYear()===date.year&&jsDate.getMonth()+1===date.month&&jsDate.getDate()===date.day}};return NgbCalendarGregorian.ɵfac=function(t){return ɵNgbCalendarGregorian_BaseFactory(t||NgbCalendarGregorian)},NgbCalendarGregorian.ɵprov=core.Jb({token:NgbCalendarGregorian,factory:function(t){return NgbCalendarGregorian.ɵfac(t)}}),NgbCalendarGregorian})();function isChangedDate(prev,next){return!function(prev,next){return!prev&&!next||!!prev&&!!next&&prev.equals(next)}(prev,next)}function isChangedMonth(prev,next){return!(!prev&&!next||prev&&next&&prev.year===next.year&&prev.month===next.month)}function checkDateInRange(date,minDate,maxDate){return date&&minDate&&date.before(minDate)?minDate:date&&maxDate&&date.after(maxDate)?maxDate:date||null}function isDateSelectable(date,state){const{minDate:minDate,maxDate:maxDate,disabled:disabled,markDisabled:markDisabled}=state;return!(null==date||disabled||markDisabled&&markDisabled(date,{year:date.year,month:date.month})||minDate&&date.before(minDate)||maxDate&&date.after(maxDate))}let ng_bootstrap_NgbDatepickerI18n=(()=>{let NgbDatepickerI18n=class{getDayNumerals(date){return`${date.day}`}getWeekNumerals(weekNumber){return`${weekNumber}`}getYearNumerals(year){return`${year}`}};return NgbDatepickerI18n.ɵfac=function(t){return new(t||NgbDatepickerI18n)},NgbDatepickerI18n.ɵprov=Object(core.Jb)({factory:function(){return locale=Object(core.Zb)(core.x),new ng_bootstrap_NgbDatepickerI18nDefault(locale);var locale},token:NgbDatepickerI18n,providedIn:\"root\"}),NgbDatepickerI18n})(),ng_bootstrap_NgbDatepickerI18nDefault=(()=>{let NgbDatepickerI18nDefault=class extends ng_bootstrap_NgbDatepickerI18n{constructor(_locale){super(),this._locale=_locale;const weekdaysStartingOnSunday=Object(common.u)(_locale,common.e.Standalone,common.r.Short);this._weekdaysShort=weekdaysStartingOnSunday.map((day,index)=>weekdaysStartingOnSunday[(index+1)%7]),this._monthsShort=Object(common.w)(_locale,common.e.Standalone,common.r.Abbreviated),this._monthsFull=Object(common.w)(_locale,common.e.Standalone,common.r.Wide)}getWeekdayShortName(weekday){return this._weekdaysShort[weekday-1]||\"\"}getMonthShortName(month){return this._monthsShort[month-1]||\"\"}getMonthFullName(month){return this._monthsFull[month-1]||\"\"}getDayAriaLabel(date){const jsDate=new Date(date.year,date.month-1,date.day);return Object(common.t)(jsDate,\"fullDate\",this._locale)}};return NgbDatepickerI18nDefault.ɵfac=function(t){return new(t||NgbDatepickerI18nDefault)(core.Zb(core.x))},NgbDatepickerI18nDefault.ɵprov=core.Jb({token:NgbDatepickerI18nDefault,factory:function(t){return NgbDatepickerI18nDefault.ɵfac(t)}}),NgbDatepickerI18nDefault=__decorate([__param(0,Object(core.r)(core.x))],NgbDatepickerI18nDefault),NgbDatepickerI18nDefault})(),ng_bootstrap_NgbDatepickerService=(()=>{let NgbDatepickerService=class{constructor(_calendar,_i18n){this._calendar=_calendar,this._i18n=_i18n,this._VALIDATORS={dayTemplateData:dayTemplateData=>{if(this._state.dayTemplateData!==dayTemplateData)return{dayTemplateData:dayTemplateData}},displayMonths:displayMonths=>{if(isInteger(displayMonths=toInteger(displayMonths))&&displayMonths>0&&this._state.displayMonths!==displayMonths)return{displayMonths:displayMonths}},disabled:disabled=>{if(this._state.disabled!==disabled)return{disabled:disabled}},firstDayOfWeek:firstDayOfWeek=>{if(isInteger(firstDayOfWeek=toInteger(firstDayOfWeek))&&firstDayOfWeek>=0&&this._state.firstDayOfWeek!==firstDayOfWeek)return{firstDayOfWeek:firstDayOfWeek}},focusVisible:focusVisible=>{if(this._state.focusVisible!==focusVisible&&!this._state.disabled)return{focusVisible:focusVisible}},markDisabled:markDisabled=>{if(this._state.markDisabled!==markDisabled)return{markDisabled:markDisabled}},maxDate:date=>{const maxDate=this.toValidDate(date,null);if(isChangedDate(this._state.maxDate,maxDate))return{maxDate:maxDate}},minDate:date=>{const minDate=this.toValidDate(date,null);if(isChangedDate(this._state.minDate,minDate))return{minDate:minDate}},navigation:navigation=>{if(this._state.navigation!==navigation)return{navigation:navigation}},outsideDays:outsideDays=>{if(this._state.outsideDays!==outsideDays)return{outsideDays:outsideDays}}},this._model$=new Subject.a,this._dateSelect$=new Subject.a,this._state={dayTemplateData:null,markDisabled:null,maxDate:null,minDate:null,disabled:!1,displayMonths:1,firstDate:null,firstDayOfWeek:1,lastDate:null,focusDate:null,focusVisible:!1,months:[],navigation:\"select\",outsideDays:\"visible\",prevDisabled:!1,nextDisabled:!1,selectedDate:null,selectBoxes:{years:[],months:[]}}}get model$(){return this._model$.pipe(Object(filter.a)(model=>model.months.length>0))}get dateSelect$(){return this._dateSelect$.pipe(Object(filter.a)(date=>null!==date))}set(options){let patch=Object.keys(options).map(key=>this._VALIDATORS[key](options[key])).reduce((obj,part)=>Object.assign(Object.assign({},obj),part),{});Object.keys(patch).length>0&&this._nextState(patch)}focus(date){const focusedDate=this.toValidDate(date,null);null!=focusedDate&&!this._state.disabled&&isChangedDate(this._state.focusDate,focusedDate)&&this._nextState({focusDate:date})}focusSelect(){isDateSelectable(this._state.focusDate,this._state)&&this.select(this._state.focusDate,{emitEvent:!0})}open(date){const firstDate=this.toValidDate(date,this._calendar.getToday());null==firstDate||this._state.disabled||this._state.firstDate&&!isChangedMonth(this._state.firstDate,firstDate)||this._nextState({firstDate:firstDate})}select(date,options={}){const selectedDate=this.toValidDate(date,null);null==selectedDate||this._state.disabled||(isChangedDate(this._state.selectedDate,selectedDate)&&this._nextState({selectedDate:selectedDate}),options.emitEvent&&isDateSelectable(selectedDate,this._state)&&this._dateSelect$.next(selectedDate))}toValidDate(date,defaultValue){const ngbDate=NgbDate.from(date);return void 0===defaultValue&&(defaultValue=this._calendar.getToday()),this._calendar.isValid(ngbDate)?ngbDate:defaultValue}getMonth(struct){for(let month of this._state.months)if(struct.month===month.number&&struct.year===month.year)return month;throw new Error(`month ${struct.month} of year ${struct.year} not found`)}_nextState(patch){const newState=this._updateState(patch);this._patchContexts(newState),this._state=newState,this._model$.next(this._state)}_patchContexts(state){const{months:months,displayMonths:displayMonths,selectedDate:selectedDate,focusDate:focusDate,focusVisible:focusVisible,disabled:disabled,outsideDays:outsideDays}=state;state.months.forEach(month=>{month.weeks.forEach(week=>{week.days.forEach(day=>{focusDate&&(day.context.focused=focusDate.equals(day.date)&&focusVisible),day.tabindex=!disabled&&focusDate&&day.date.equals(focusDate)&&focusDate.month===month.number?0:-1,!0===disabled&&(day.context.disabled=!0),void 0!==selectedDate&&(day.context.selected=null!==selectedDate&&selectedDate.equals(day.date)),month.number!==day.date.month&&(day.hidden=\"hidden\"===outsideDays||\"collapsed\"===outsideDays||displayMonths>1&&day.date.after(months[0].firstDate)&&day.date.before(months[displayMonths-1].lastDate))})})})}_updateState(patch){const state=Object.assign({},this._state,patch);let startDate=state.firstDate;if((\"minDate\"in patch||\"maxDate\"in patch)&&(function(minDate,maxDate){if(maxDate&&minDate&&maxDate.before(minDate))throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`)}(state.minDate,state.maxDate),state.focusDate=checkDateInRange(state.focusDate,state.minDate,state.maxDate),state.firstDate=checkDateInRange(state.firstDate,state.minDate,state.maxDate),startDate=state.focusDate),\"disabled\"in patch&&(state.focusVisible=!1),\"selectedDate\"in patch&&0===this._state.months.length&&(startDate=state.selectedDate),\"focusVisible\"in patch)return state;if(\"focusDate\"in patch&&(state.focusDate=checkDateInRange(state.focusDate,state.minDate,state.maxDate),startDate=state.focusDate,0!==state.months.length&&state.focusDate&&!state.focusDate.before(state.firstDate)&&!state.focusDate.after(state.lastDate)))return state;if(\"firstDate\"in patch&&(state.firstDate=checkDateInRange(state.firstDate,state.minDate,state.maxDate),startDate=state.firstDate),startDate){const months=function(calendar,date,state,i18n,force){const{displayMonths:displayMonths,months:months}=state,monthsToReuse=months.splice(0,months.length);return Array.from({length:displayMonths},(_,i)=>{const firstDate=Object.assign(calendar.getNext(date,\"m\",i),{day:1});if(months[i]=null,!force){const reusedIndex=monthsToReuse.findIndex(month=>month.firstDate.equals(firstDate));-1!==reusedIndex&&(months[i]=monthsToReuse.splice(reusedIndex,1)[0])}return firstDate}).forEach((firstDate,i)=>{null===months[i]&&(months[i]=function(calendar,date,state,i18n,month={}){const{dayTemplateData:dayTemplateData,minDate:minDate,maxDate:maxDate,firstDayOfWeek:firstDayOfWeek,markDisabled:markDisabled,outsideDays:outsideDays}=state,calendarToday=calendar.getToday();month.firstDate=null,month.lastDate=null,month.number=date.month,month.year=date.year,month.weeks=month.weeks||[],month.weekdays=month.weekdays||[],date=function(calendar,date,firstDayOfWeek){const daysPerWeek=calendar.getDaysPerWeek(),firstMonthDate=new NgbDate(date.year,date.month,1),dayOfWeek=calendar.getWeekday(firstMonthDate)%daysPerWeek;return calendar.getPrev(firstMonthDate,\"d\",(daysPerWeek+dayOfWeek-firstDayOfWeek)%daysPerWeek)}(calendar,date,firstDayOfWeek);for(let week=0;week<calendar.getWeeksPerMonth();week++){let weekObject=month.weeks[week];weekObject||(weekObject=month.weeks[week]={number:0,days:[],collapsed:!0});const days=weekObject.days;for(let day=0;day<calendar.getDaysPerWeek();day++){0===week&&(month.weekdays[day]=calendar.getWeekday(date));const newDate=new NgbDate(date.year,date.month,date.day),nextDate=calendar.getNext(newDate),ariaLabel=i18n.getDayAriaLabel(newDate);let disabled=!!(minDate&&newDate.before(minDate)||maxDate&&newDate.after(maxDate));!disabled&&markDisabled&&(disabled=markDisabled(newDate,{month:month.number,year:month.year}));let today=newDate.equals(calendarToday),contextUserData=dayTemplateData?dayTemplateData(newDate,{month:month.number,year:month.year}):void 0;null===month.firstDate&&newDate.month===month.number&&(month.firstDate=newDate),newDate.month===month.number&&nextDate.month!==month.number&&(month.lastDate=newDate);let dayObject=days[day];dayObject||(dayObject=days[day]={}),dayObject.date=newDate,dayObject.context=Object.assign(dayObject.context||{},{$implicit:newDate,date:newDate,data:contextUserData,currentMonth:month.number,currentYear:month.year,disabled:disabled,focused:!1,selected:!1,today:today}),dayObject.tabindex=-1,dayObject.ariaLabel=ariaLabel,dayObject.hidden=!1,date=nextDate}weekObject.number=calendar.getWeekNumber(days.map(day=>day.date),firstDayOfWeek),weekObject.collapsed=\"collapsed\"===outsideDays&&days[0].date.month!==month.number&&days[days.length-1].date.month!==month.number}return month}(calendar,firstDate,state,i18n,monthsToReuse.shift()||{}))}),months}(this._calendar,startDate,state,this._i18n,\"dayTemplateData\"in patch||\"firstDayOfWeek\"in patch||\"markDisabled\"in patch||\"minDate\"in patch||\"maxDate\"in patch||\"disabled\"in patch||\"outsideDays\"in patch);state.months=months,state.firstDate=months[0].firstDate,state.lastDate=months[months.length-1].lastDate,\"selectedDate\"in patch&&!isDateSelectable(state.selectedDate,state)&&(state.selectedDate=null),\"firstDate\"in patch&&(!state.focusDate||state.focusDate.before(state.firstDate)||state.focusDate.after(state.lastDate))&&(state.focusDate=startDate);const yearChanged=!this._state.firstDate||this._state.firstDate.year!==state.firstDate.year,monthChanged=!this._state.firstDate||this._state.firstDate.month!==state.firstDate.month;\"select\"===state.navigation?((\"minDate\"in patch||\"maxDate\"in patch||0===state.selectBoxes.years.length||yearChanged)&&(state.selectBoxes.years=function(date,minDate,maxDate){if(!date)return[];const start=minDate?Math.max(minDate.year,date.year-500):date.year-10,length=(maxDate?Math.min(maxDate.year,date.year+500):date.year+10)-start+1,numbers=Array(length);for(let i=0;i<length;i++)numbers[i]=start+i;return numbers}(state.firstDate,state.minDate,state.maxDate)),(\"minDate\"in patch||\"maxDate\"in patch||0===state.selectBoxes.months.length||yearChanged)&&(state.selectBoxes.months=function(calendar,date,minDate,maxDate){if(!date)return[];let months=calendar.getMonths(date.year);if(minDate&&date.year===minDate.year){const index=months.findIndex(month=>month===minDate.month);months=months.slice(index)}if(maxDate&&date.year===maxDate.year){const index=months.findIndex(month=>month===maxDate.month);months=months.slice(0,index+1)}return months}(this._calendar,state.firstDate,state.minDate,state.maxDate))):state.selectBoxes={years:[],months:[]},\"arrows\"!==state.navigation&&\"select\"!==state.navigation||!(monthChanged||yearChanged||\"minDate\"in patch||\"maxDate\"in patch||\"disabled\"in patch)||(state.prevDisabled=state.disabled||function(calendar,date,minDate){const prevDate=Object.assign(calendar.getPrev(date,\"m\"),{day:1});return null!=minDate&&(prevDate.year===minDate.year&&prevDate.month<minDate.month||prevDate.year<minDate.year&&1===minDate.month)}(this._calendar,state.firstDate,state.minDate),state.nextDisabled=state.disabled||function(calendar,date,maxDate){const nextDate=Object.assign(calendar.getNext(date,\"m\"),{day:1});return null!=maxDate&&nextDate.after(maxDate)}(this._calendar,state.lastDate,state.maxDate))}return state}};return NgbDatepickerService.ɵfac=function(t){return new(t||NgbDatepickerService)(core.Zb(ng_bootstrap_NgbCalendar),core.Zb(ng_bootstrap_NgbDatepickerI18n))},NgbDatepickerService.ɵprov=core.Jb({token:NgbDatepickerService,factory:function(t){return NgbDatepickerService.ɵfac(t)}}),NgbDatepickerService})();var NavigationEvent=function(NavigationEvent){return NavigationEvent[NavigationEvent.PREV=0]=\"PREV\",NavigationEvent[NavigationEvent.NEXT=1]=\"NEXT\",NavigationEvent}({});let ng_bootstrap_NgbDatepickerConfig=(()=>{let NgbDatepickerConfig=class{constructor(){this.displayMonths=1,this.firstDayOfWeek=1,this.navigation=\"select\",this.outsideDays=\"visible\",this.showWeekdays=!0,this.showWeekNumbers=!1}};return NgbDatepickerConfig.ɵfac=function(t){return new(t||NgbDatepickerConfig)},NgbDatepickerConfig.ɵprov=Object(core.Jb)({factory:function(){return new NgbDatepickerConfig},token:NgbDatepickerConfig,providedIn:\"root\"}),NgbDatepickerConfig})();function NGB_DATEPICKER_DATE_ADAPTER_FACTORY(){return new ng_bootstrap_NgbDateStructAdapter}let ng_bootstrap_NgbDateAdapter=(()=>{let NgbDateAdapter=class{};return NgbDateAdapter.ɵfac=function(t){return new(t||NgbDateAdapter)},NgbDateAdapter.ɵprov=Object(core.Jb)({factory:NGB_DATEPICKER_DATE_ADAPTER_FACTORY,token:NgbDateAdapter,providedIn:\"root\"}),NgbDateAdapter})(),ng_bootstrap_NgbDateStructAdapter=(()=>{let NgbDateStructAdapter=class extends ng_bootstrap_NgbDateAdapter{fromModel(date){return date&&isInteger(date.year)&&isInteger(date.month)&&isInteger(date.day)?{year:date.year,month:date.month,day:date.day}:null}toModel(date){return date&&isInteger(date.year)&&isInteger(date.month)&&isInteger(date.day)?{year:date.year,month:date.month,day:date.day}:null}};return NgbDateStructAdapter.ɵfac=function(t){return ɵNgbDateStructAdapter_BaseFactory(t||NgbDateStructAdapter)},NgbDateStructAdapter.ɵprov=core.Jb({token:NgbDateStructAdapter,factory:function(t){return NgbDateStructAdapter.ɵfac(t)}}),NgbDateStructAdapter})();const NGB_DATEPICKER_VALUE_ACCESSOR={provide:fesm2015_forms.i,useExisting:Object(core.V)(()=>ng_bootstrap_NgbDatepicker),multi:!0};let ng_bootstrap_NgbDatepickerContent=(()=>{let NgbDatepickerContent=class{constructor(templateRef){this.templateRef=templateRef}};return NgbDatepickerContent.ɵfac=function(t){return new(t||NgbDatepickerContent)(core.Nb(core.N))},NgbDatepickerContent.ɵdir=core.Ib({type:NgbDatepickerContent,selectors:[[\"ng-template\",\"ngbDatepickerContent\",\"\"]]}),NgbDatepickerContent})(),ng_bootstrap_NgbDatepicker=(()=>{let NgbDatepicker=class{constructor(_service,_calendar,i18n,config,cd,_elementRef,_ngbDateAdapter,_ngZone){this._service=_service,this._calendar=_calendar,this.i18n=i18n,this._elementRef=_elementRef,this._ngbDateAdapter=_ngbDateAdapter,this._ngZone=_ngZone,this._controlValue=null,this._destroyed$=new Subject.a,this._publicState={},this.navigate=new core.o,this.dateSelect=new core.o,this.select=this.dateSelect,this.onChange=_=>{},this.onTouched=()=>{},[\"dayTemplate\",\"dayTemplateData\",\"displayMonths\",\"firstDayOfWeek\",\"footerTemplate\",\"markDisabled\",\"minDate\",\"maxDate\",\"navigation\",\"outsideDays\",\"showWeekdays\",\"showWeekNumbers\",\"startDate\"].forEach(input=>this[input]=config[input]),_service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(date=>{this.dateSelect.emit(date)}),_service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model=>{const newDate=model.firstDate,oldDate=this.model?this.model.firstDate:null;this._publicState={maxDate:model.maxDate,minDate:model.minDate,firstDate:model.firstDate,lastDate:model.lastDate,focusedDate:model.focusDate,months:model.months.map(viewModel=>viewModel.firstDate)};let navigationPrevented=!1;if(!newDate.equals(oldDate)&&(this.navigate.emit({current:oldDate?{year:oldDate.year,month:oldDate.month}:null,next:{year:newDate.year,month:newDate.month},preventDefault:()=>navigationPrevented=!0}),navigationPrevented&&null!==oldDate))return void this._service.open(oldDate);const newSelectedDate=model.selectedDate,newFocusedDate=model.focusDate,oldFocusedDate=this.model?this.model.focusDate:null;this.model=model,isChangedDate(newSelectedDate,this._controlValue)&&(this._controlValue=newSelectedDate,this.onTouched(),this.onChange(this._ngbDateAdapter.toModel(newSelectedDate))),isChangedDate(newFocusedDate,oldFocusedDate)&&oldFocusedDate&&model.focusVisible&&this.focus(),cd.markForCheck()})}get state(){return this._publicState}get calendar(){return this._calendar}focusDate(date){this._service.focus(NgbDate.from(date))}focusSelect(){this._service.focusSelect()}focus(){this._ngZone.onStable.asObservable().pipe(Object(take.a)(1)).subscribe(()=>{const elementToFocus=this._elementRef.nativeElement.querySelector('div.ngb-dp-day[tabindex=\"0\"]');elementToFocus&&elementToFocus.focus()})}navigateTo(date){this._service.open(NgbDate.from(date?date.day?date:Object.assign(Object.assign({},date),{day:1}):null))}ngAfterViewInit(){this._ngZone.runOutsideAngular(()=>{const focusIns$=fromEvent(this._contentEl.nativeElement,\"focusin\"),focusOuts$=fromEvent(this._contentEl.nativeElement,\"focusout\"),{nativeElement:nativeElement}=this._elementRef;Object(merge.a)(focusIns$,focusOuts$).pipe(Object(filter.a)(({target:target,relatedTarget:relatedTarget})=>!(hasClassName(target,\"ngb-dp-day\")&&hasClassName(relatedTarget,\"ngb-dp-day\")&&nativeElement.contains(target)&&nativeElement.contains(relatedTarget))),takeUntil(this._destroyed$)).subscribe(({type:type})=>this._ngZone.run(()=>this._service.set({focusVisible:\"focusin\"===type})))})}ngOnDestroy(){this._destroyed$.next()}ngOnInit(){if(void 0===this.model){const inputs={};[\"dayTemplateData\",\"displayMonths\",\"markDisabled\",\"firstDayOfWeek\",\"navigation\",\"minDate\",\"maxDate\",\"outsideDays\"].forEach(name=>inputs[name]=this[name]),this._service.set(inputs),this.navigateTo(this.startDate)}this.dayTemplate||(this.dayTemplate=this._defaultDayTemplate)}ngOnChanges(changes){const inputs={};if([\"dayTemplateData\",\"displayMonths\",\"markDisabled\",\"firstDayOfWeek\",\"navigation\",\"minDate\",\"maxDate\",\"outsideDays\"].filter(name=>name in changes).forEach(name=>inputs[name]=this[name]),this._service.set(inputs),\"startDate\"in changes){const{currentValue:currentValue,previousValue:previousValue}=changes.startDate;isChangedMonth(previousValue,currentValue)&&this.navigateTo(this.startDate)}}onDateSelect(date){this._service.focus(date),this._service.select(date,{emitEvent:!0})}onNavigateDateSelect(date){this._service.open(date)}onNavigateEvent(event){switch(event){case NavigationEvent.PREV:this._service.open(this._calendar.getPrev(this.model.firstDate,\"m\",1));break;case NavigationEvent.NEXT:this._service.open(this._calendar.getNext(this.model.firstDate,\"m\",1))}}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(disabled){this._service.set({disabled:disabled})}writeValue(value){this._controlValue=NgbDate.from(this._ngbDateAdapter.fromModel(value)),this._service.select(this._controlValue)}};return NgbDatepicker.ɵfac=function(t){return new(t||NgbDatepicker)(core.Nb(ng_bootstrap_NgbDatepickerService),core.Nb(ng_bootstrap_NgbCalendar),core.Nb(ng_bootstrap_NgbDatepickerI18n),core.Nb(ng_bootstrap_NgbDatepickerConfig),core.Nb(core.i),core.Nb(core.m),core.Nb(ng_bootstrap_NgbDateAdapter),core.Nb(core.C))},NgbDatepicker.ɵcmp=core.Hb({type:NgbDatepicker,selectors:[[\"ngb-datepicker\"]],contentQueries:function(rf,ctx,dirIndex){if(1&rf&&core.Gb(dirIndex,ng_bootstrap_NgbDatepickerContent,3),2&rf){let _t;core.rc(_t=core.dc())&&(ctx.contentTemplate=_t.first)}},viewQuery:function(rf,ctx){if(1&rf&&(core.Fc(_c8,3),core.Fc(_c9,3)),2&rf){let _t;core.rc(_t=core.dc())&&(ctx._defaultDayTemplate=_t.first),core.rc(_t=core.dc())&&(ctx._contentEl=_t.first)}},inputs:{dayTemplate:\"dayTemplate\",dayTemplateData:\"dayTemplateData\",displayMonths:\"displayMonths\",firstDayOfWeek:\"firstDayOfWeek\",footerTemplate:\"footerTemplate\",markDisabled:\"markDisabled\",maxDate:\"maxDate\",minDate:\"minDate\",navigation:\"navigation\",outsideDays:\"outsideDays\",showWeekdays:\"showWeekdays\",showWeekNumbers:\"showWeekNumbers\",startDate:\"startDate\"},outputs:{navigate:\"navigate\",dateSelect:\"dateSelect\",select:\"select\"},exportAs:[\"ngbDatepicker\"],features:[core.zb([NGB_DATEPICKER_VALUE_ACCESSOR,ng_bootstrap_NgbDatepickerService]),core.yb],decls:10,vars:5,consts:[[\"defaultDayTemplate\",\"\"],[\"defaultContentTemplate\",\"\"],[1,\"ngb-dp-header\"],[3,\"date\",\"months\",\"disabled\",\"showSelect\",\"prevDisabled\",\"nextDisabled\",\"selectBoxes\",\"navigate\",\"select\",4,\"ngIf\"],[1,\"ngb-dp-content\"],[\"content\",\"\"],[3,\"ngTemplateOutlet\"],[\"ngbDatepickerDayView\",\"\",3,\"date\",\"currentMonth\",\"selected\",\"disabled\",\"focused\"],[\"class\",\"ngb-dp-month\",4,\"ngFor\",\"ngForOf\"],[1,\"ngb-dp-month\"],[\"class\",\"ngb-dp-month-name\",4,\"ngIf\"],[3,\"month\"],[1,\"ngb-dp-month-name\"],[3,\"date\",\"months\",\"disabled\",\"showSelect\",\"prevDisabled\",\"nextDisabled\",\"selectBoxes\",\"navigate\",\"select\"]],template:function(rf,ctx){if(1&rf&&(core.yc(0,NgbDatepicker_ng_template_0_Template,1,5,\"ng-template\",null,0,core.zc),core.yc(2,NgbDatepicker_ng_template_2_Template,1,1,\"ng-template\",null,1,core.zc),core.Sb(4,\"div\",2),core.yc(5,NgbDatepicker_ngb_datepicker_navigation_5_Template,1,7,\"ngb-datepicker-navigation\",3),core.Rb(),core.Sb(6,\"div\",4,5),core.yc(8,NgbDatepicker_ng_template_8_Template,0,0,\"ng-template\",6),core.Rb(),core.yc(9,NgbDatepicker_ng_template_9_Template,0,0,\"ng-template\",6)),2&rf){const _r2=core.sc(3);core.Ab(5),core.kc(\"ngIf\",\"none\"!==ctx.navigation),core.Ab(1),core.Fb(\"ngb-dp-months\",!ctx.contentTemplate),core.Ab(2),core.kc(\"ngTemplateOutlet\",(null==ctx.contentTemplate?null:ctx.contentTemplate.templateRef)||_r2),core.Ab(1),core.kc(\"ngTemplateOutlet\",ctx.footerTemplate)}},directives:function(){return[common.m,common.n,ng_bootstrap_NgbDatepickerDayView,common.l,ng_bootstrap_NgbDatepickerMonth,ng_bootstrap_NgbDatepickerNavigation]},styles:[\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1050}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-months{display:-ms-flexbox;display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\"],encapsulation:2,changeDetection:0}),NgbDatepicker})();var Key=function(Key){return Key[Key.Tab=9]=\"Tab\",Key[Key.Enter=13]=\"Enter\",Key[Key.Escape=27]=\"Escape\",Key[Key.Space=32]=\"Space\",Key[Key.PageUp=33]=\"PageUp\",Key[Key.PageDown=34]=\"PageDown\",Key[Key.End=35]=\"End\",Key[Key.Home=36]=\"Home\",Key[Key.ArrowLeft=37]=\"ArrowLeft\",Key[Key.ArrowUp=38]=\"ArrowUp\",Key[Key.ArrowRight=39]=\"ArrowRight\",Key[Key.ArrowDown=40]=\"ArrowDown\",Key}({});let ng_bootstrap_NgbDatepickerKeyboardService=(()=>{let NgbDatepickerKeyboardService=class{processKey(event,datepicker){const{state:state,calendar:calendar}=datepicker;switch(event.which){case Key.PageUp:datepicker.focusDate(calendar.getPrev(state.focusedDate,event.shiftKey?\"y\":\"m\",1));break;case Key.PageDown:datepicker.focusDate(calendar.getNext(state.focusedDate,event.shiftKey?\"y\":\"m\",1));break;case Key.End:datepicker.focusDate(event.shiftKey?state.maxDate:state.lastDate);break;case Key.Home:datepicker.focusDate(event.shiftKey?state.minDate:state.firstDate);break;case Key.ArrowLeft:datepicker.focusDate(calendar.getPrev(state.focusedDate,\"d\",1));break;case Key.ArrowUp:datepicker.focusDate(calendar.getPrev(state.focusedDate,\"d\",calendar.getDaysPerWeek()));break;case Key.ArrowRight:datepicker.focusDate(calendar.getNext(state.focusedDate,\"d\",1));break;case Key.ArrowDown:datepicker.focusDate(calendar.getNext(state.focusedDate,\"d\",calendar.getDaysPerWeek()));break;case Key.Enter:case Key.Space:datepicker.focusSelect();break;default:return}event.preventDefault(),event.stopPropagation()}};return NgbDatepickerKeyboardService.ɵfac=function(t){return new(t||NgbDatepickerKeyboardService)},NgbDatepickerKeyboardService.ɵprov=Object(core.Jb)({factory:function(){return new NgbDatepickerKeyboardService},token:NgbDatepickerKeyboardService,providedIn:\"root\"}),NgbDatepickerKeyboardService})(),ng_bootstrap_NgbDatepickerMonth=(()=>{let NgbDatepickerMonth=class{constructor(i18n,datepicker,_keyboardService,_service){this.i18n=i18n,this.datepicker=datepicker,this._keyboardService=_keyboardService,this._service=_service}set month(month){this.viewModel=this._service.getMonth(month)}onKeyDown(event){this._keyboardService.processKey(event,this.datepicker)}doSelect(day){day.context.disabled||day.hidden||this.datepicker.onDateSelect(day.date)}};return NgbDatepickerMonth.ɵfac=function(t){return new(t||NgbDatepickerMonth)(core.Nb(ng_bootstrap_NgbDatepickerI18n),core.Nb(ng_bootstrap_NgbDatepicker),core.Nb(ng_bootstrap_NgbDatepickerKeyboardService),core.Nb(ng_bootstrap_NgbDatepickerService))},NgbDatepickerMonth.ɵcmp=core.Hb({type:NgbDatepickerMonth,selectors:[[\"ngb-datepicker-month\"]],hostAttrs:[\"role\",\"grid\"],hostBindings:function(rf,ctx){1&rf&&core.cc(\"keydown\",function($event){return ctx.onKeyDown($event)})},inputs:{month:\"month\"},decls:2,vars:2,consts:[[\"class\",\"ngb-dp-week ngb-dp-weekdays\",\"role\",\"row\",4,\"ngIf\"],[\"ngFor\",\"\",3,\"ngForOf\"],[\"role\",\"row\",1,\"ngb-dp-week\",\"ngb-dp-weekdays\"],[\"class\",\"ngb-dp-weekday ngb-dp-showweek\",4,\"ngIf\"],[\"class\",\"ngb-dp-weekday small\",\"role\",\"columnheader\",4,\"ngFor\",\"ngForOf\"],[1,\"ngb-dp-weekday\",\"ngb-dp-showweek\"],[\"role\",\"columnheader\",1,\"ngb-dp-weekday\",\"small\"],[\"class\",\"ngb-dp-week\",\"role\",\"row\",4,\"ngIf\"],[\"role\",\"row\",1,\"ngb-dp-week\"],[\"class\",\"ngb-dp-week-number small text-muted\",4,\"ngIf\"],[\"class\",\"ngb-dp-day\",\"role\",\"gridcell\",3,\"disabled\",\"tabindex\",\"hidden\",\"ngb-dp-today\",\"click\",4,\"ngFor\",\"ngForOf\"],[1,\"ngb-dp-week-number\",\"small\",\"text-muted\"],[\"role\",\"gridcell\",1,\"ngb-dp-day\",3,\"tabindex\",\"click\"],[3,\"ngIf\"],[3,\"ngTemplateOutlet\",\"ngTemplateOutletContext\"]],template:function(rf,ctx){1&rf&&(core.yc(0,NgbDatepickerMonth_div_0_Template,3,2,\"div\",0),core.yc(1,NgbDatepickerMonth_ng_template_1_Template,1,1,\"ng-template\",1)),2&rf&&(core.kc(\"ngIf\",ctx.datepicker.showWeekdays),core.Ab(1),core.kc(\"ngForOf\",ctx.viewModel.weeks))},directives:[common.m,common.l,common.n],styles:['ngb-datepicker-month{display:block}.ngb-dp-week-number,.ngb-dp-weekday{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:-ms-flexbox;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\"0\"]{z-index:1}'],encapsulation:2}),NgbDatepickerMonth})(),ng_bootstrap_NgbDatepickerNavigation=(()=>{let NgbDatepickerNavigation=class{constructor(i18n){this.i18n=i18n,this.navigation=NavigationEvent,this.months=[],this.navigate=new core.o,this.select=new core.o}onClickPrev(event){event.currentTarget.focus(),this.navigate.emit(this.navigation.PREV)}onClickNext(event){event.currentTarget.focus(),this.navigate.emit(this.navigation.NEXT)}};return NgbDatepickerNavigation.ɵfac=function(t){return new(t||NgbDatepickerNavigation)(core.Nb(ng_bootstrap_NgbDatepickerI18n))},NgbDatepickerNavigation.ɵcmp=core.Hb({type:NgbDatepickerNavigation,selectors:[[\"ngb-datepicker-navigation\"]],inputs:{months:\"months\",date:\"date\",disabled:\"disabled\",showSelect:\"showSelect\",prevDisabled:\"prevDisabled\",nextDisabled:\"nextDisabled\",selectBoxes:\"selectBoxes\"},outputs:{navigate:\"navigate\",select:\"select\"},decls:8,vars:4,consts:function(){let i18n_10,i18n_12,i18n_14,i18n_16;return i18n_10=$localize`:@@ngb.datepicker.previous-month␟c3b08b07b5ab98e7cdcf18df39355690ab7d3884␟8586908745456864217:Previous month`,i18n_12=$localize`:@@ngb.datepicker.previous-month␟c3b08b07b5ab98e7cdcf18df39355690ab7d3884␟8586908745456864217:Previous month`,i18n_14=$localize`:@@ngb.datepicker.next-month␟4bd046985cfe13040d5ef0cd881edce0968a111a␟3628374603023447227:Next month`,i18n_16=$localize`:@@ngb.datepicker.next-month␟4bd046985cfe13040d5ef0cd881edce0968a111a␟3628374603023447227:Next month`,[[1,\"ngb-dp-arrow\"],[\"type\",\"button\",\"aria-label\",i18n_10,\"title\",i18n_12,1,\"btn\",\"btn-link\",\"ngb-dp-arrow-btn\",3,\"disabled\",\"click\"],[1,\"ngb-dp-navigation-chevron\"],[\"class\",\"ngb-dp-navigation-select\",3,\"date\",\"disabled\",\"months\",\"years\",\"select\",4,\"ngIf\"],[4,\"ngIf\"],[1,\"ngb-dp-arrow\",\"right\"],[\"type\",\"button\",\"aria-label\",i18n_14,\"title\",i18n_16,1,\"btn\",\"btn-link\",\"ngb-dp-arrow-btn\",3,\"disabled\",\"click\"],[1,\"ngb-dp-navigation-select\",3,\"date\",\"disabled\",\"months\",\"years\",\"select\"],[\"ngFor\",\"\",3,\"ngForOf\"],[\"class\",\"ngb-dp-arrow\",4,\"ngIf\"],[1,\"ngb-dp-month-name\"]]},template:function(rf,ctx){1&rf&&(core.Sb(0,\"div\",0),core.Sb(1,\"button\",1),core.cc(\"click\",function($event){return ctx.onClickPrev($event)}),core.Ob(2,\"span\",2),core.Rb(),core.Rb(),core.yc(3,NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template,1,4,\"ngb-datepicker-navigation-select\",3),core.yc(4,NgbDatepickerNavigation_4_Template,1,1,void 0,4),core.Sb(5,\"div\",5),core.Sb(6,\"button\",6),core.cc(\"click\",function($event){return ctx.onClickNext($event)}),core.Ob(7,\"span\",2),core.Rb(),core.Rb()),2&rf&&(core.Ab(1),core.kc(\"disabled\",ctx.prevDisabled),core.Ab(2),core.kc(\"ngIf\",ctx.showSelect),core.Ab(1),core.kc(\"ngIf\",!ctx.showSelect),core.Ab(2),core.kc(\"disabled\",ctx.nextDisabled))},directives:function(){return[common.m,ng_bootstrap_NgbDatepickerNavigationSelect,common.l]},styles:[\"ngb-datepicker-navigation{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}.right .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{-ms-flex-pack:end;justify-content:flex-end}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:-ms-flexbox;display:flex;-ms-flex:1 1 9rem;flex:1 1 9rem}\"],encapsulation:2,changeDetection:0}),NgbDatepickerNavigation})();const isContainedIn=(element,array)=>!!array&&array.some(item=>item.contains(element)),matchesSelectorIfAny=(element,selector)=>!selector||null!=function(element,selector){return selector?void 0===element.closest?null:element.closest(selector):null}(element,selector),isMobile=\"undefined\"!=typeof navigator&&!!navigator.userAgent&&(/iPad|iPhone|iPod/.test(navigator.userAgent)||/Macintosh/.test(navigator.userAgent)&&navigator.maxTouchPoints&&navigator.maxTouchPoints>2||/Android/.test(navigator.userAgent));function ngbAutoClose(zone,document,type,close,closed$,insideElements,ignoreElements,insideSelector){var fn;type&&zone.runOutsideAngular((fn=()=>{const escapes$=fromEvent(document,\"keydown\").pipe(takeUntil(closed$),Object(filter.a)(e=>e.which===Key.Escape),Object(tap.a)(e=>e.preventDefault())),mouseDowns$=fromEvent(document,\"mousedown\").pipe(Object(map.a)(event=>{const element=event.target;return 2!==event.button&&!isContainedIn(element,ignoreElements)&&(\"inside\"===type?isContainedIn(element,insideElements)&&matchesSelectorIfAny(element,insideSelector):\"outside\"===type?!isContainedIn(element,insideElements):matchesSelectorIfAny(element,insideSelector)||!isContainedIn(element,insideElements))}),takeUntil(closed$)),closeableClicks$=fromEvent(document,\"mouseup\").pipe(withLatestFrom(mouseDowns$),Object(filter.a)(([_,shouldClose])=>shouldClose),delay_delay(0),takeUntil(closed$));(function(...observables){if(1===observables.length){if(!Object(isArray.a)(observables[0]))return observables[0];observables=observables[0]}return Object(fromArray.a)(observables,void 0).lift(new RaceOperator)})([escapes$.pipe(Object(map.a)(_=>0)),closeableClicks$.pipe(Object(map.a)(_=>1))]).subscribe(source=>zone.run(()=>close(source)))},isMobile?()=>setTimeout(()=>fn(),100):fn))}const FOCUSABLE_ELEMENTS_SELECTOR=[\"a[href]\",\"button:not([disabled])\",'input:not([disabled]):not([type=\"hidden\"])',\"select:not([disabled])\",\"textarea:not([disabled])\",\"[contenteditable]\",'[tabindex]:not([tabindex=\"-1\"])'].join(\", \");function getFocusableBoundaryElements(element){const list=Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR)).filter(el=>-1!==el.tabIndex);return[list[0],list[list.length-1]]}const ngbFocusTrap=(zone,element,stopFocusTrap$,refocusOnClick=!1)=>{zone.runOutsideAngular(()=>{const lastFocusedElement$=fromEvent(element,\"focusin\").pipe(takeUntil(stopFocusTrap$),Object(map.a)(e=>e.target));fromEvent(element,\"keydown\").pipe(takeUntil(stopFocusTrap$),Object(filter.a)(e=>e.which===Key.Tab),withLatestFrom(lastFocusedElement$)).subscribe(([tabEvent,focusedElement])=>{const[first,last]=getFocusableBoundaryElements(element);focusedElement!==first&&focusedElement!==element||!tabEvent.shiftKey||(last.focus(),tabEvent.preventDefault()),focusedElement!==last||tabEvent.shiftKey||(first.focus(),tabEvent.preventDefault())}),refocusOnClick&&fromEvent(element,\"click\").pipe(takeUntil(stopFocusTrap$),withLatestFrom(lastFocusedElement$),Object(map.a)(arr=>arr[1])).subscribe(lastFocusedElement=>lastFocusedElement.focus())})},placementSeparator=/\\s+/,positionService=new class{getAllStyles(element){return window.getComputedStyle(element)}getStyle(element,prop){return this.getAllStyles(element)[prop]}isStaticPositioned(element){return\"static\"===(this.getStyle(element,\"position\")||\"static\")}offsetParent(element){let offsetParentEl=element.offsetParent||document.documentElement;for(;offsetParentEl&&offsetParentEl!==document.documentElement&&this.isStaticPositioned(offsetParentEl);)offsetParentEl=offsetParentEl.offsetParent;return offsetParentEl||document.documentElement}position(element,round=!0){let elPosition,parentOffset={width:0,height:0,top:0,bottom:0,left:0,right:0};if(\"fixed\"===this.getStyle(element,\"position\"))elPosition=element.getBoundingClientRect(),elPosition={top:elPosition.top,bottom:elPosition.bottom,left:elPosition.left,right:elPosition.right,height:elPosition.height,width:elPosition.width};else{const offsetParentEl=this.offsetParent(element);elPosition=this.offset(element,!1),offsetParentEl!==document.documentElement&&(parentOffset=this.offset(offsetParentEl,!1)),parentOffset.top+=offsetParentEl.clientTop,parentOffset.left+=offsetParentEl.clientLeft}return elPosition.top-=parentOffset.top,elPosition.bottom-=parentOffset.top,elPosition.left-=parentOffset.left,elPosition.right-=parentOffset.left,round&&(elPosition.top=Math.round(elPosition.top),elPosition.bottom=Math.round(elPosition.bottom),elPosition.left=Math.round(elPosition.left),elPosition.right=Math.round(elPosition.right)),elPosition}offset(element,round=!0){const elBcr=element.getBoundingClientRect(),viewportOffset_top=window.pageYOffset-document.documentElement.clientTop,viewportOffset_left=window.pageXOffset-document.documentElement.clientLeft;let elOffset={height:elBcr.height||element.offsetHeight,width:elBcr.width||element.offsetWidth,top:elBcr.top+viewportOffset_top,bottom:elBcr.bottom+viewportOffset_top,left:elBcr.left+viewportOffset_left,right:elBcr.right+viewportOffset_left};return round&&(elOffset.height=Math.round(elOffset.height),elOffset.width=Math.round(elOffset.width),elOffset.top=Math.round(elOffset.top),elOffset.bottom=Math.round(elOffset.bottom),elOffset.left=Math.round(elOffset.left),elOffset.right=Math.round(elOffset.right)),elOffset}positionElements(hostElement,targetElement,placement,appendToBody){const[placementPrimary=\"top\",placementSecondary=\"center\"]=placement.split(\"-\"),hostElPosition=appendToBody?this.offset(hostElement,!1):this.position(hostElement,!1),targetElStyles=this.getAllStyles(targetElement),marginTop=parseFloat(targetElStyles.marginTop),marginBottom=parseFloat(targetElStyles.marginBottom),marginLeft=parseFloat(targetElStyles.marginLeft),marginRight=parseFloat(targetElStyles.marginRight);let topPosition=0,leftPosition=0;switch(placementPrimary){case\"top\":topPosition=hostElPosition.top-(targetElement.offsetHeight+marginTop+marginBottom);break;case\"bottom\":topPosition=hostElPosition.top+hostElPosition.height;break;case\"left\":leftPosition=hostElPosition.left-(targetElement.offsetWidth+marginLeft+marginRight);break;case\"right\":leftPosition=hostElPosition.left+hostElPosition.width}switch(placementSecondary){case\"top\":topPosition=hostElPosition.top;break;case\"bottom\":topPosition=hostElPosition.top+hostElPosition.height-targetElement.offsetHeight;break;case\"left\":leftPosition=hostElPosition.left;break;case\"right\":leftPosition=hostElPosition.left+hostElPosition.width-targetElement.offsetWidth;break;case\"center\":\"top\"===placementPrimary||\"bottom\"===placementPrimary?leftPosition=hostElPosition.left+hostElPosition.width/2-targetElement.offsetWidth/2:topPosition=hostElPosition.top+hostElPosition.height/2-targetElement.offsetHeight/2}targetElement.style.transform=`translate(${Math.round(leftPosition)}px, ${Math.round(topPosition)}px)`;const targetElBCR=targetElement.getBoundingClientRect(),html=document.documentElement,windowHeight=window.innerHeight||html.clientHeight,windowWidth=window.innerWidth||html.clientWidth;return targetElBCR.left>=0&&targetElBCR.top>=0&&targetElBCR.right<=windowWidth&&targetElBCR.bottom<=windowHeight}};function positionElements(hostElement,targetElement,placement,appendToBody,baseClass){let placementVals=Array.isArray(placement)?placement:placement.split(placementSeparator);const allowedPlacements=[\"top\",\"bottom\",\"left\",\"right\",\"top-left\",\"top-right\",\"bottom-left\",\"bottom-right\",\"left-top\",\"left-bottom\",\"right-top\",\"right-bottom\"],classList=targetElement.classList,addClassesToTarget=targetPlacement=>{const[primary,secondary]=targetPlacement.split(\"-\"),classes=[];return baseClass&&(classes.push(`${baseClass}-${primary}`),secondary&&classes.push(`${baseClass}-${primary}-${secondary}`),classes.forEach(classname=>{classList.add(classname)})),classes};baseClass&&allowedPlacements.forEach(placementToRemove=>{classList.remove(`${baseClass}-${placementToRemove}`)});let hasAuto=placementVals.findIndex(val=>\"auto\"===val);hasAuto>=0&&allowedPlacements.forEach(function(obj){null==placementVals.find(val=>-1!==val.search(\"^\"+obj))&&placementVals.splice(hasAuto++,1,obj)});const style=targetElement.style;style.position=\"absolute\",style.top=\"0\",style.left=\"0\",style[\"will-change\"]=\"transform\";let testPlacement=null,isInViewport=!1;for(testPlacement of placementVals){let addedClasses=addClassesToTarget(testPlacement);if(positionService.positionElements(hostElement,targetElement,testPlacement,appendToBody)){isInViewport=!0;break}baseClass&&addedClasses.forEach(classname=>{classList.remove(classname)})}return isInViewport||(testPlacement=placementVals[0],addClassesToTarget(testPlacement),positionService.positionElements(hostElement,targetElement,testPlacement,appendToBody)),testPlacement}function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY(){return new ng_bootstrap_NgbDateISOParserFormatter}let ng_bootstrap_NgbDateParserFormatter=(()=>{let NgbDateParserFormatter=class{};return NgbDateParserFormatter.ɵfac=function(t){return new(t||NgbDateParserFormatter)},NgbDateParserFormatter.ɵprov=Object(core.Jb)({factory:NGB_DATEPICKER_PARSER_FORMATTER_FACTORY,token:NgbDateParserFormatter,providedIn:\"root\"}),NgbDateParserFormatter})(),ng_bootstrap_NgbDateISOParserFormatter=(()=>{let NgbDateISOParserFormatter=class extends ng_bootstrap_NgbDateParserFormatter{parse(value){if(null!=value){const dateParts=value.trim().split(\"-\");if(1===dateParts.length&&isNumber(dateParts[0]))return{year:toInteger(dateParts[0]),month:null,day:null};if(2===dateParts.length&&isNumber(dateParts[0])&&isNumber(dateParts[1]))return{year:toInteger(dateParts[0]),month:toInteger(dateParts[1]),day:null};if(3===dateParts.length&&isNumber(dateParts[0])&&isNumber(dateParts[1])&&isNumber(dateParts[2]))return{year:toInteger(dateParts[0]),month:toInteger(dateParts[1]),day:toInteger(dateParts[2])}}return null}format(date){return date?`${date.year}-${isNumber(date.month)?padNumber(date.month):\"\"}-${isNumber(date.day)?padNumber(date.day):\"\"}`:\"\"}};return NgbDateISOParserFormatter.ɵfac=function(t){return ɵNgbDateISOParserFormatter_BaseFactory(t||NgbDateISOParserFormatter)},NgbDateISOParserFormatter.ɵprov=core.Jb({token:NgbDateISOParserFormatter,factory:function(t){return NgbDateISOParserFormatter.ɵfac(t)}}),NgbDateISOParserFormatter})(),ng_bootstrap_NgbInputDatepickerConfig=(()=>{let NgbInputDatepickerConfig=class extends ng_bootstrap_NgbDatepickerConfig{constructor(){super(...arguments),this.autoClose=!0,this.placement=[\"bottom-left\",\"bottom-right\",\"top-left\",\"top-right\"],this.restoreFocus=!0}};return NgbInputDatepickerConfig.ɵfac=function(t){return ɵNgbInputDatepickerConfig_BaseFactory(t||NgbInputDatepickerConfig)},NgbInputDatepickerConfig.ɵprov=Object(core.Jb)({factory:function(){return new NgbInputDatepickerConfig},token:NgbInputDatepickerConfig,providedIn:\"root\"}),NgbInputDatepickerConfig})();const NGB_DATEPICKER_VALUE_ACCESSOR$1={provide:fesm2015_forms.i,useExisting:Object(core.V)(()=>ng_bootstrap_NgbInputDatepicker),multi:!0},NGB_DATEPICKER_VALIDATOR={provide:fesm2015_forms.h,useExisting:Object(core.V)(()=>ng_bootstrap_NgbInputDatepicker),multi:!0};let ng_bootstrap_NgbInputDatepicker=(()=>{let NgbInputDatepicker=class{constructor(_parserFormatter,_elRef,_vcRef,_renderer,_cfr,_ngZone,_calendar,_dateAdapter,_document,_changeDetector,config){this._parserFormatter=_parserFormatter,this._elRef=_elRef,this._vcRef=_vcRef,this._renderer=_renderer,this._cfr=_cfr,this._ngZone=_ngZone,this._calendar=_calendar,this._dateAdapter=_dateAdapter,this._document=_document,this._changeDetector=_changeDetector,this._cRef=null,this._disabled=!1,this._elWithFocus=null,this._model=null,this.dateSelect=new core.o,this.navigate=new core.o,this.closed=new core.o,this._onChange=_=>{},this._onTouched=()=>{},this._validatorChange=()=>{},[\"autoClose\",\"container\",\"positionTarget\",\"placement\"].forEach(input=>this[input]=config[input]),this._zoneSubscription=_ngZone.onStable.subscribe(()=>this._updatePopupPosition())}get disabled(){return this._disabled}set disabled(value){this._disabled=\"\"===value||value&&\"false\"!==value,this.isOpen()&&this._cRef.instance.setDisabledState(this._disabled)}registerOnChange(fn){this._onChange=fn}registerOnTouched(fn){this._onTouched=fn}registerOnValidatorChange(fn){this._validatorChange=fn}setDisabledState(isDisabled){this.disabled=isDisabled}validate(c){const{value:value}=c;if(null!=value){const ngbDate=this._fromDateStruct(this._dateAdapter.fromModel(value));if(!ngbDate)return{ngbDate:{invalid:value}};if(this.minDate&&ngbDate.before(NgbDate.from(this.minDate)))return{ngbDate:{minDate:{minDate:this.minDate,actual:value}}};if(this.maxDate&&ngbDate.after(NgbDate.from(this.maxDate)))return{ngbDate:{maxDate:{maxDate:this.maxDate,actual:value}}}}return null}writeValue(value){this._model=this._fromDateStruct(this._dateAdapter.fromModel(value)),this._writeModelValue(this._model)}manualDateChange(value,updateView=!1){const inputValueChanged=value!==this._inputValue;inputValueChanged&&(this._inputValue=value,this._model=this._fromDateStruct(this._parserFormatter.parse(value))),!inputValueChanged&&updateView||this._onChange(this._model?this._dateAdapter.toModel(this._model):\"\"===value?null:value),updateView&&this._model&&this._writeModelValue(this._model)}isOpen(){return!!this._cRef}open(){if(!this.isOpen()){const cf=this._cfr.resolveComponentFactory(ng_bootstrap_NgbDatepicker);this._cRef=this._vcRef.createComponent(cf),this._applyPopupStyling(this._cRef.location.nativeElement),this._applyDatepickerInputs(this._cRef.instance),this._subscribeForDatepickerOutputs(this._cRef.instance),this._cRef.instance.ngOnInit(),this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model)),this._cRef.instance.registerOnChange(selectedDate=>{this.writeValue(selectedDate),this._onChange(selectedDate),this._onTouched()}),this._cRef.changeDetectorRef.detectChanges(),this._cRef.instance.setDisabledState(this.disabled),\"body\"===this.container&&this._document.querySelector(this.container).appendChild(this._cRef.location.nativeElement),this._elWithFocus=this._document.activeElement,ngbFocusTrap(this._ngZone,this._cRef.location.nativeElement,this.closed,!0),this._cRef.instance.focus(),ngbAutoClose(this._ngZone,this._document,this.autoClose,()=>this.close(),this.closed,[],[this._elRef.nativeElement,this._cRef.location.nativeElement])}}close(){if(this.isOpen()){this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView)),this._cRef=null,this.closed.emit(),this._changeDetector.markForCheck();let elementToFocus=this._elWithFocus;isString(this.restoreFocus)?elementToFocus=this._document.querySelector(this.restoreFocus):void 0!==this.restoreFocus&&(elementToFocus=this.restoreFocus),elementToFocus&&elementToFocus.focus?elementToFocus.focus():this._document.body.focus()}}toggle(){this.isOpen()?this.close():this.open()}navigateTo(date){this.isOpen()&&this._cRef.instance.navigateTo(date)}onBlur(){this._onTouched()}onFocus(){this._elWithFocus=this._elRef.nativeElement}ngOnChanges(changes){(changes.minDate||changes.maxDate)&&(this._validatorChange(),this.isOpen()&&(changes.minDate&&(this._cRef.instance.minDate=this.minDate),changes.maxDate&&(this._cRef.instance.maxDate=this.maxDate),this._cRef.instance.ngOnChanges(changes)))}ngOnDestroy(){this.close(),this._zoneSubscription.unsubscribe()}_applyDatepickerInputs(datepickerInstance){[\"dayTemplate\",\"dayTemplateData\",\"displayMonths\",\"firstDayOfWeek\",\"footerTemplate\",\"markDisabled\",\"minDate\",\"maxDate\",\"navigation\",\"outsideDays\",\"showNavigation\",\"showWeekdays\",\"showWeekNumbers\"].forEach(optionName=>{void 0!==this[optionName]&&(datepickerInstance[optionName]=this[optionName])}),datepickerInstance.startDate=this.startDate||this._model}_applyPopupStyling(nativeElement){this._renderer.addClass(nativeElement,\"dropdown-menu\"),this._renderer.addClass(nativeElement,\"show\"),\"body\"===this.container&&this._renderer.addClass(nativeElement,\"ngb-dp-body\")}_subscribeForDatepickerOutputs(datepickerInstance){datepickerInstance.navigate.subscribe(navigateEvent=>this.navigate.emit(navigateEvent)),datepickerInstance.dateSelect.subscribe(date=>{this.dateSelect.emit(date),!0!==this.autoClose&&\"inside\"!==this.autoClose||this.close()})}_writeModelValue(model){const value=this._parserFormatter.format(model);this._inputValue=value,this._renderer.setProperty(this._elRef.nativeElement,\"value\",value),this.isOpen()&&(this._cRef.instance.writeValue(this._dateAdapter.toModel(model)),this._onTouched())}_fromDateStruct(date){const ngbDate=date?new NgbDate(date.year,date.month,date.day):null;return this._calendar.isValid(ngbDate)?ngbDate:null}_updatePopupPosition(){if(!this._cRef)return;let hostElement;if(hostElement=isString(this.positionTarget)?this._document.querySelector(this.positionTarget):this.positionTarget instanceof HTMLElement?this.positionTarget:this._elRef.nativeElement,this.positionTarget&&!hostElement)throw new Error(\"ngbDatepicker could not find element declared in [positionTarget] to position against.\");positionElements(hostElement,this._cRef.location.nativeElement,this.placement,\"body\"===this.container)}};return NgbInputDatepicker.ɵfac=function(t){return new(t||NgbInputDatepicker)(core.Nb(ng_bootstrap_NgbDateParserFormatter),core.Nb(core.m),core.Nb(core.R),core.Nb(core.G),core.Nb(core.k),core.Nb(core.C),core.Nb(ng_bootstrap_NgbCalendar),core.Nb(ng_bootstrap_NgbDateAdapter),core.Nb(common.c),core.Nb(core.i),core.Nb(ng_bootstrap_NgbInputDatepickerConfig))},NgbInputDatepicker.ɵdir=core.Ib({type:NgbInputDatepicker,selectors:[[\"input\",\"ngbDatepicker\",\"\"]],hostVars:1,hostBindings:function(rf,ctx){1&rf&&core.cc(\"input\",function($event){return ctx.manualDateChange($event.target.value)})(\"change\",function($event){return ctx.manualDateChange($event.target.value,!0)})(\"focus\",function(){return ctx.onFocus()})(\"blur\",function(){return ctx.onBlur()}),2&rf&&core.Vb(\"disabled\",ctx.disabled)},inputs:{disabled:\"disabled\",autoClose:\"autoClose\",dayTemplate:\"dayTemplate\",dayTemplateData:\"dayTemplateData\",displayMonths:\"displayMonths\",firstDayOfWeek:\"firstDayOfWeek\",footerTemplate:\"footerTemplate\",markDisabled:\"markDisabled\",minDate:\"minDate\",maxDate:\"maxDate\",navigation:\"navigation\",outsideDays:\"outsideDays\",placement:\"placement\",restoreFocus:\"restoreFocus\",showWeekdays:\"showWeekdays\",showWeekNumbers:\"showWeekNumbers\",startDate:\"startDate\",container:\"container\",positionTarget:\"positionTarget\"},outputs:{dateSelect:\"dateSelect\",navigate:\"navigate\",closed:\"closed\"},exportAs:[\"ngbDatepicker\"],features:[core.zb([NGB_DATEPICKER_VALUE_ACCESSOR$1,NGB_DATEPICKER_VALIDATOR,{provide:ng_bootstrap_NgbDatepickerConfig,useExisting:ng_bootstrap_NgbInputDatepickerConfig}]),core.yb]}),NgbInputDatepicker=__decorate([__param(8,Object(core.r)(common.c))],NgbInputDatepicker),NgbInputDatepicker})(),ng_bootstrap_NgbDatepickerDayView=(()=>{let NgbDatepickerDayView=class{constructor(i18n){this.i18n=i18n}isMuted(){return!this.selected&&(this.date.month!==this.currentMonth||this.disabled)}};return NgbDatepickerDayView.ɵfac=function(t){return new(t||NgbDatepickerDayView)(core.Nb(ng_bootstrap_NgbDatepickerI18n))},NgbDatepickerDayView.ɵcmp=core.Hb({type:NgbDatepickerDayView,selectors:[[\"\",\"ngbDatepickerDayView\",\"\"]],hostAttrs:[1,\"btn-light\"],hostVars:10,hostBindings:function(rf,ctx){2&rf&&core.Fb(\"bg-primary\",ctx.selected)(\"text-white\",ctx.selected)(\"text-muted\",ctx.isMuted())(\"outside\",ctx.isMuted())(\"active\",ctx.focused)},inputs:{currentMonth:\"currentMonth\",date:\"date\",disabled:\"disabled\",focused:\"focused\",selected:\"selected\"},attrs:_c18,decls:1,vars:1,template:function(rf,ctx){1&rf&&core.Ac(0),2&rf&&core.Bc(ctx.i18n.getDayNumerals(ctx.date))},styles:[\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:0 0}[ngbDatepickerDayView].outside{opacity:.5}\"],encapsulation:2,changeDetection:0}),NgbDatepickerDayView})(),ng_bootstrap_NgbDatepickerNavigationSelect=(()=>{let NgbDatepickerNavigationSelect=class{constructor(i18n,_renderer){this.i18n=i18n,this._renderer=_renderer,this.select=new core.o,this._month=-1,this._year=-1}changeMonth(month){this.select.emit(new NgbDate(this.date.year,toInteger(month),1))}changeYear(year){this.select.emit(new NgbDate(toInteger(year),this.date.month,1))}ngAfterViewChecked(){this.date&&(this.date.month!==this._month&&(this._month=this.date.month,this._renderer.setProperty(this.monthSelect.nativeElement,\"value\",this._month)),this.date.year!==this._year&&(this._year=this.date.year,this._renderer.setProperty(this.yearSelect.nativeElement,\"value\",this._year)))}};return NgbDatepickerNavigationSelect.ɵfac=function(t){return new(t||NgbDatepickerNavigationSelect)(core.Nb(ng_bootstrap_NgbDatepickerI18n),core.Nb(core.G))},NgbDatepickerNavigationSelect.ɵcmp=core.Hb({type:NgbDatepickerNavigationSelect,selectors:[[\"ngb-datepicker-navigation-select\"]],viewQuery:function(rf,ctx){if(1&rf&&(core.Fc(_c19,3,core.m),core.Fc(_c20,3,core.m)),2&rf){let _t;core.rc(_t=core.dc())&&(ctx.monthSelect=_t.first),core.rc(_t=core.dc())&&(ctx.yearSelect=_t.first)}},inputs:{date:\"date\",disabled:\"disabled\",months:\"months\",years:\"years\"},outputs:{select:\"select\"},decls:6,vars:4,consts:function(){let i18n_21,i18n_23,i18n_25,i18n_27;return i18n_21=$localize`:@@ngb.datepicker.select-month␟1dbc84807f35518112f62e5775d1daebd3d8462b␟2253869508135064750:Select month`,i18n_23=$localize`:@@ngb.datepicker.select-month␟1dbc84807f35518112f62e5775d1daebd3d8462b␟2253869508135064750:Select month`,i18n_25=$localize`:@@ngb.datepicker.select-year␟8ceb09d002bf0c5d1cac171dfbffe1805d2b3962␟8852264961585484321:Select year`,i18n_27=$localize`:@@ngb.datepicker.select-year␟8ceb09d002bf0c5d1cac171dfbffe1805d2b3962␟8852264961585484321:Select year`,[[\"aria-label\",i18n_21,\"title\",i18n_23,1,\"custom-select\",3,\"disabled\",\"change\"],[\"month\",\"\"],[3,\"value\",4,\"ngFor\",\"ngForOf\"],[\"aria-label\",i18n_25,\"title\",i18n_27,1,\"custom-select\",3,\"disabled\",\"change\"],[\"year\",\"\"],[3,\"value\"]]},template:function(rf,ctx){1&rf&&(core.Sb(0,\"select\",0,1),core.cc(\"change\",function($event){return ctx.changeMonth($event.target.value)}),core.yc(2,NgbDatepickerNavigationSelect_option_2_Template,2,3,\"option\",2),core.Rb(),core.Sb(3,\"select\",3,4),core.cc(\"change\",function($event){return ctx.changeYear($event.target.value)}),core.yc(5,NgbDatepickerNavigationSelect_option_5_Template,2,2,\"option\",2),core.Rb()),2&rf&&(core.kc(\"disabled\",ctx.disabled),core.Ab(2),core.kc(\"ngForOf\",ctx.months),core.Ab(1),core.kc(\"disabled\",ctx.disabled),core.Ab(2),core.kc(\"ngForOf\",ctx.years))},directives:[common.l,fesm2015_forms.n,fesm2015_forms.s],styles:[\"ngb-datepicker-navigation-select>.custom-select{-ms-flex:1 1 auto;flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.custom-select:focus{z-index:1}ngb-datepicker-navigation-select>.custom-select::-ms-value{background-color:transparent!important}\"],encapsulation:2,changeDetection:0}),NgbDatepickerNavigationSelect})();new Date(1882,10,12),new Date(2174,10,25);let ng_bootstrap_NgbDatepickerModule=(()=>{let NgbDatepickerModule=class{};return NgbDatepickerModule.ɵfac=function(t){return new(t||NgbDatepickerModule)},NgbDatepickerModule.ɵmod=core.Lb({type:NgbDatepickerModule}),NgbDatepickerModule.ɵinj=core.Kb({imports:[[common.b,fesm2015_forms.f]]}),NgbDatepickerModule})(),ng_bootstrap_NgbDropdownConfig=(()=>{let NgbDropdownConfig=class{constructor(){this.autoClose=!0,this.placement=[\"bottom-left\",\"bottom-right\",\"top-left\",\"top-right\"]}};return NgbDropdownConfig.ɵfac=function(t){return new(t||NgbDropdownConfig)},NgbDropdownConfig.ɵprov=Object(core.Jb)({factory:function(){return new NgbDropdownConfig},token:NgbDropdownConfig,providedIn:\"root\"}),NgbDropdownConfig})();var NgbDropdownToggle_1;let ng_bootstrap_NgbNavbar=(()=>{let NgbNavbar=class{};return NgbNavbar.ɵfac=function(t){return new(t||NgbNavbar)},NgbNavbar.ɵdir=core.Ib({type:NgbNavbar,selectors:[[\"\",8,\"navbar\"]]}),NgbNavbar})(),ng_bootstrap_NgbDropdownItem=(()=>{let NgbDropdownItem=class{constructor(elementRef){this.elementRef=elementRef,this._disabled=!1}set disabled(value){this._disabled=\"\"===value||!0===value}get disabled(){return this._disabled}};return NgbDropdownItem.ɵfac=function(t){return new(t||NgbDropdownItem)(core.Nb(core.m))},NgbDropdownItem.ɵdir=core.Ib({type:NgbDropdownItem,selectors:[[\"\",\"ngbDropdownItem\",\"\"]],hostAttrs:[1,\"dropdown-item\"],hostVars:2,hostBindings:function(rf,ctx){2&rf&&core.Fb(\"disabled\",ctx.disabled)},inputs:{disabled:\"disabled\"}}),NgbDropdownItem})(),ng_bootstrap_NgbDropdownMenu=(()=>{let NgbDropdownMenu=class{constructor(dropdown,_elementRef){this.dropdown=dropdown,this.placement=\"bottom\",this.isOpen=!1,this.nativeElement=_elementRef.nativeElement}};return NgbDropdownMenu.ɵfac=function(t){return new(t||NgbDropdownMenu)(core.Nb(Object(core.V)(()=>ng_bootstrap_NgbDropdown)),core.Nb(core.m))},NgbDropdownMenu.ɵdir=core.Ib({type:NgbDropdownMenu,selectors:[[\"\",\"ngbDropdownMenu\",\"\"]],contentQueries:function(rf,ctx,dirIndex){if(1&rf&&core.Gb(dirIndex,ng_bootstrap_NgbDropdownItem,0),2&rf){let _t;core.rc(_t=core.dc())&&(ctx.menuItems=_t)}},hostVars:5,hostBindings:function(rf,ctx){1&rf&&core.cc(\"keydown.ArrowUp\",function($event){return ctx.dropdown.onKeyDown($event)})(\"keydown.ArrowDown\",function($event){return ctx.dropdown.onKeyDown($event)})(\"keydown.Home\",function($event){return ctx.dropdown.onKeyDown($event)})(\"keydown.End\",function($event){return ctx.dropdown.onKeyDown($event)})(\"keydown.Enter\",function($event){return ctx.dropdown.onKeyDown($event)})(\"keydown.Space\",function($event){return ctx.dropdown.onKeyDown($event)})(\"keydown.Tab\",function($event){return ctx.dropdown.onKeyDown($event)})(\"keydown.Shift.Tab\",function($event){return ctx.dropdown.onKeyDown($event)}),2&rf&&(core.Bb(\"x-placement\",ctx.placement),core.Fb(\"dropdown-menu\",!0)(\"show\",ctx.dropdown.isOpen()))}}),NgbDropdownMenu=__decorate([__param(0,Object(core.r)(Object(core.V)(()=>ng_bootstrap_NgbDropdown)))],NgbDropdownMenu),NgbDropdownMenu})(),ng_bootstrap_NgbDropdownAnchor=(()=>{let NgbDropdownAnchor=class{constructor(dropdown,_elementRef){this.dropdown=dropdown,this.nativeElement=_elementRef.nativeElement}};return NgbDropdownAnchor.ɵfac=function(t){return new(t||NgbDropdownAnchor)(core.Nb(Object(core.V)(()=>ng_bootstrap_NgbDropdown)),core.Nb(core.m))},NgbDropdownAnchor.ɵdir=core.Ib({type:NgbDropdownAnchor,selectors:[[\"\",\"ngbDropdownAnchor\",\"\"]],hostAttrs:[1,\"dropdown-toggle\"],hostVars:1,hostBindings:function(rf,ctx){2&rf&&core.Bb(\"aria-expanded\",ctx.dropdown.isOpen())}}),NgbDropdownAnchor=__decorate([__param(0,Object(core.r)(Object(core.V)(()=>ng_bootstrap_NgbDropdown)))],NgbDropdownAnchor),NgbDropdownAnchor})(),ng_bootstrap_NgbDropdownToggle=(()=>{let NgbDropdownToggle=NgbDropdownToggle_1=class extends ng_bootstrap_NgbDropdownAnchor{constructor(dropdown,elementRef){super(dropdown,elementRef)}};return NgbDropdownToggle.ɵfac=function(t){return new(t||NgbDropdownToggle)(core.Nb(Object(core.V)(()=>ng_bootstrap_NgbDropdown)),core.Nb(core.m))},NgbDropdownToggle.ɵdir=core.Ib({type:NgbDropdownToggle,selectors:[[\"\",\"ngbDropdownToggle\",\"\"]],hostAttrs:[1,\"dropdown-toggle\"],hostVars:1,hostBindings:function(rf,ctx){1&rf&&core.cc(\"click\",function(){return ctx.dropdown.toggle()})(\"keydown.ArrowUp\",function($event){return ctx.dropdown.onKeyDown($event)})(\"keydown.ArrowDown\",function($event){return ctx.dropdown.onKeyDown($event)})(\"keydown.Home\",function($event){return ctx.dropdown.onKeyDown($event)})(\"keydown.End\",function($event){return ctx.dropdown.onKeyDown($event)})(\"keydown.Tab\",function($event){return ctx.dropdown.onKeyDown($event)})(\"keydown.Shift.Tab\",function($event){return ctx.dropdown.onKeyDown($event)}),2&rf&&core.Bb(\"aria-expanded\",ctx.dropdown.isOpen())},features:[core.zb([{provide:ng_bootstrap_NgbDropdownAnchor,useExisting:Object(core.V)(()=>NgbDropdownToggle_1)}]),core.xb]}),NgbDropdownToggle=NgbDropdownToggle_1=__decorate([__param(0,Object(core.r)(Object(core.V)(()=>ng_bootstrap_NgbDropdown)))],NgbDropdownToggle),NgbDropdownToggle})(),ng_bootstrap_NgbDropdown=(()=>{let NgbDropdown=class{constructor(_changeDetector,config,_document,_ngZone,_elementRef,_renderer,ngbNavbar){this._changeDetector=_changeDetector,this._document=_document,this._ngZone=_ngZone,this._elementRef=_elementRef,this._renderer=_renderer,this._closed$=new Subject.a,this._bodyContainer=null,this._open=!1,this.openChange=new core.o,this.placement=config.placement,this.container=config.container,this.autoClose=config.autoClose,this.display=ngbNavbar?\"static\":\"dynamic\",this._zoneSubscription=_ngZone.onStable.subscribe(()=>{this._positionMenu()})}ngAfterContentInit(){this._ngZone.onStable.pipe(Object(take.a)(1)).subscribe(()=>{this._applyPlacementClasses(),this._open&&this._setCloseHandlers()})}ngOnChanges(changes){changes.container&&this._open&&this._applyContainer(this.container),changes.placement&&!changes.placement.isFirstChange&&this._applyPlacementClasses()}isOpen(){return this._open}open(){this._open||(this._open=!0,this._applyContainer(this.container),this.openChange.emit(!0),this._setCloseHandlers(),this._anchor&&this._anchor.nativeElement.focus())}_setCloseHandlers(){ngbAutoClose(this._ngZone,this._document,this.autoClose,source=>{this.close(),0===source&&this._anchor.nativeElement.focus()},this._closed$,this._menu?[this._menu.nativeElement]:[],this._anchor?[this._anchor.nativeElement]:[],\".dropdown-item,.dropdown-divider\")}close(){this._open&&(this._open=!1,this._resetContainer(),this._closed$.next(),this.openChange.emit(!1),this._changeDetector.markForCheck())}toggle(){this.isOpen()?this.close():this.open()}ngOnDestroy(){this._resetContainer(),this._closed$.next(),this._zoneSubscription.unsubscribe()}onKeyDown(event){const key=event.which,itemElements=this._getMenuElements();let position=-1,itemElement=null;const isEventFromToggle=this._isEventFromToggle(event);if(!isEventFromToggle&&itemElements.length&&itemElements.forEach((item,index)=>{item.contains(event.target)&&(itemElement=item),item===this._document.activeElement&&(position=index)}),key!==Key.Space&&key!==Key.Enter){if(key!==Key.Tab){if(isEventFromToggle||itemElement){if(this.open(),itemElements.length){switch(key){case Key.ArrowDown:position=Math.min(position+1,itemElements.length-1);break;case Key.ArrowUp:if(this._isDropup()&&-1===position){position=itemElements.length-1;break}position=Math.max(position-1,0);break;case Key.Home:position=0;break;case Key.End:position=itemElements.length-1}itemElements[position].focus()}event.preventDefault()}}else if(event.target&&this.isOpen()&&this.autoClose){if(this._anchor.nativeElement===event.target)return void(\"body\"!==this.container||event.shiftKey?event.shiftKey&&this.close():(this._renderer.setAttribute(this._menu.nativeElement,\"tabindex\",\"0\"),this._menu.nativeElement.focus(),this._renderer.removeAttribute(this._menu.nativeElement,\"tabindex\")));if(\"body\"===this.container){const focusableElements=this._menu.nativeElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);event.shiftKey&&event.target===focusableElements[0]?(this._anchor.nativeElement.focus(),event.preventDefault()):event.shiftKey||event.target!==focusableElements[focusableElements.length-1]||(this._anchor.nativeElement.focus(),this.close())}else fromEvent(event.target,\"focusout\").pipe(Object(take.a)(1)).subscribe(({relatedTarget:relatedTarget})=>{this._elementRef.nativeElement.contains(relatedTarget)||this.close()})}}else!itemElement||!0!==this.autoClose&&\"inside\"!==this.autoClose||fromEvent(itemElement,\"click\").pipe(Object(take.a)(1)).subscribe(()=>this.close())}_isDropup(){return this._elementRef.nativeElement.classList.contains(\"dropup\")}_isEventFromToggle(event){return this._anchor.nativeElement.contains(event.target)}_getMenuElements(){const menu=this._menu;return null==menu?[]:menu.menuItems.filter(item=>!item.disabled).map(item=>item.elementRef.nativeElement)}_positionMenu(){const menu=this._menu;this.isOpen()&&menu&&this._applyPlacementClasses(\"dynamic\"===this.display?positionElements(this._anchor.nativeElement,this._bodyContainer||this._menu.nativeElement,this.placement,\"body\"===this.container):this._getFirstPlacement(this.placement))}_getFirstPlacement(placement){return Array.isArray(placement)?placement[0]:placement.split(\" \")[0]}_resetContainer(){const renderer=this._renderer;if(this._menu){const dropdownMenuElement=this._menu.nativeElement;renderer.appendChild(this._elementRef.nativeElement,dropdownMenuElement),renderer.removeStyle(dropdownMenuElement,\"position\"),renderer.removeStyle(dropdownMenuElement,\"transform\")}this._bodyContainer&&(renderer.removeChild(this._document.body,this._bodyContainer),this._bodyContainer=null)}_applyContainer(container=null){if(this._resetContainer(),\"body\"===container){const renderer=this._renderer,dropdownMenuElement=this._menu.nativeElement,bodyContainer=this._bodyContainer=this._bodyContainer||renderer.createElement(\"div\");renderer.setStyle(bodyContainer,\"position\",\"absolute\"),renderer.setStyle(dropdownMenuElement,\"position\",\"static\"),renderer.setStyle(bodyContainer,\"z-index\",\"1050\"),renderer.appendChild(bodyContainer,dropdownMenuElement),renderer.appendChild(this._document.body,bodyContainer)}}_applyPlacementClasses(placement){const menu=this._menu;if(menu){placement||(placement=this._getFirstPlacement(this.placement));const renderer=this._renderer,dropdownElement=this._elementRef.nativeElement;renderer.removeClass(dropdownElement,\"dropup\"),renderer.removeClass(dropdownElement,\"dropdown\"),menu.placement=\"static\"===this.display?null:placement;const dropdownClass=-1!==placement.search(\"^top\")?\"dropup\":\"dropdown\";renderer.addClass(dropdownElement,dropdownClass);const bodyContainer=this._bodyContainer;bodyContainer&&(renderer.removeClass(bodyContainer,\"dropup\"),renderer.removeClass(bodyContainer,\"dropdown\"),renderer.addClass(bodyContainer,dropdownClass))}}};return NgbDropdown.ɵfac=function(t){return new(t||NgbDropdown)(core.Nb(core.i),core.Nb(ng_bootstrap_NgbDropdownConfig),core.Nb(common.c),core.Nb(core.C),core.Nb(core.m),core.Nb(core.G),core.Nb(ng_bootstrap_NgbNavbar,8))},NgbDropdown.ɵdir=core.Ib({type:NgbDropdown,selectors:[[\"\",\"ngbDropdown\",\"\"]],contentQueries:function(rf,ctx,dirIndex){if(1&rf&&(core.Gb(dirIndex,ng_bootstrap_NgbDropdownMenu,1),core.Gb(dirIndex,ng_bootstrap_NgbDropdownAnchor,1)),2&rf){let _t;core.rc(_t=core.dc())&&(ctx._menu=_t.first),core.rc(_t=core.dc())&&(ctx._anchor=_t.first)}},hostVars:2,hostBindings:function(rf,ctx){2&rf&&core.Fb(\"show\",ctx.isOpen())},inputs:{_open:[\"open\",\"_open\"],placement:\"placement\",container:\"container\",autoClose:\"autoClose\",display:\"display\"},outputs:{openChange:\"openChange\"},exportAs:[\"ngbDropdown\"],features:[core.yb]}),NgbDropdown=__decorate([__param(2,Object(core.r)(common.c)),__param(6,Object(core.D)())],NgbDropdown),NgbDropdown})(),ng_bootstrap_NgbDropdownModule=(()=>{let NgbDropdownModule=class{};return NgbDropdownModule.ɵfac=function(t){return new(t||NgbDropdownModule)},NgbDropdownModule.ɵmod=core.Lb({type:NgbDropdownModule}),NgbDropdownModule.ɵinj=core.Kb({}),NgbDropdownModule})(),ng_bootstrap_NgbModalConfig=(()=>{let NgbModalConfig=class{constructor(){this.backdrop=!0,this.keyboard=!0}};return NgbModalConfig.ɵfac=function(t){return new(t||NgbModalConfig)},NgbModalConfig.ɵprov=Object(core.Jb)({factory:function(){return new NgbModalConfig},token:NgbModalConfig,providedIn:\"root\"}),NgbModalConfig})();class ContentRef{constructor(nodes,viewRef,componentRef){this.nodes=nodes,this.viewRef=viewRef,this.componentRef=componentRef}}class ng_bootstrap_PopupService{constructor(_type,_injector,_viewContainerRef,_renderer,_componentFactoryResolver,_applicationRef){this._type=_type,this._injector=_injector,this._viewContainerRef=_viewContainerRef,this._renderer=_renderer,this._componentFactoryResolver=_componentFactoryResolver,this._applicationRef=_applicationRef,this._windowRef=null,this._contentRef=null}open(content,context){return this._windowRef||(this._contentRef=this._getContentRef(content,context),this._windowRef=this._viewContainerRef.createComponent(this._componentFactoryResolver.resolveComponentFactory(this._type),this._viewContainerRef.length,this._injector,this._contentRef.nodes)),this._windowRef}close(){var _a;this._windowRef&&(this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView)),this._windowRef=null,(null===(_a=this._contentRef)||void 0===_a?void 0:_a.viewRef)&&(this._applicationRef.detachView(this._contentRef.viewRef),this._contentRef.viewRef.destroy(),this._contentRef=null))}_getContentRef(content,context){if(content){if(content instanceof core.N){const viewRef=content.createEmbeddedView(context);return this._applicationRef.attachView(viewRef),new ContentRef([viewRef.rootNodes],viewRef)}return new ContentRef([[this._renderer.createText(`${content}`)]])}return new ContentRef([])}}const ng_bootstrap_noop=()=>{};let ng_bootstrap_ScrollBar=(()=>{let ScrollBar=class{constructor(_document){this._document=_document}compensate(){const width=this._getWidth();return this._isPresent(width)?this._adjustBody(width):ng_bootstrap_noop}_adjustBody(scrollbarWidth){const body=this._document.body,userSetPaddingStyle=body.style.paddingRight,actualPadding=parseFloat(window.getComputedStyle(body)[\"padding-right\"]);return body.style[\"padding-right\"]=`${actualPadding+scrollbarWidth}px`,()=>body.style[\"padding-right\"]=userSetPaddingStyle}_isPresent(scrollbarWidth){const rect=this._document.body.getBoundingClientRect();return window.innerWidth-(rect.left+rect.right)>=scrollbarWidth-.1*scrollbarWidth}_getWidth(){const measurer=this._document.createElement(\"div\");measurer.className=\"modal-scrollbar-measure\";const body=this._document.body;body.appendChild(measurer);const width=measurer.getBoundingClientRect().width-measurer.clientWidth;return body.removeChild(measurer),width}};return ScrollBar.ɵfac=function(t){return new(t||ScrollBar)(core.Zb(common.c))},ScrollBar.ɵprov=Object(core.Jb)({factory:function(){return new ScrollBar(Object(core.Zb)(common.c))},token:ScrollBar,providedIn:\"root\"}),ScrollBar=__decorate([__param(0,Object(core.r)(common.c))],ScrollBar),ScrollBar})(),ng_bootstrap_NgbModalBackdrop=(()=>{let NgbModalBackdrop=class{};return NgbModalBackdrop.ɵfac=function(t){return new(t||NgbModalBackdrop)},NgbModalBackdrop.ɵcmp=core.Hb({type:NgbModalBackdrop,selectors:[[\"ngb-modal-backdrop\"]],hostAttrs:[2,\"z-index\",\"1050\"],hostVars:2,hostBindings:function(rf,ctx){2&rf&&core.Cb(\"modal-backdrop fade show\"+(ctx.backdropClass?\" \"+ctx.backdropClass:\"\"))},inputs:{backdropClass:\"backdropClass\"},decls:0,vars:0,template:function(rf,ctx){},encapsulation:2}),NgbModalBackdrop})();class NgbActiveModal{close(result){}dismiss(reason){}}class NgbModalRef{constructor(_windowCmptRef,_contentRef,_backdropCmptRef,_beforeDismiss){this._windowCmptRef=_windowCmptRef,this._contentRef=_contentRef,this._backdropCmptRef=_backdropCmptRef,this._beforeDismiss=_beforeDismiss,_windowCmptRef.instance.dismissEvent.subscribe(reason=>{this.dismiss(reason)}),this.result=new Promise((resolve,reject)=>{this._resolve=resolve,this._reject=reject}),this.result.then(null,()=>{})}get componentInstance(){if(this._contentRef&&this._contentRef.componentRef)return this._contentRef.componentRef.instance}close(result){this._windowCmptRef&&(this._resolve(result),this._removeModalElements())}_dismiss(reason){this._reject(reason),this._removeModalElements()}dismiss(reason){if(this._windowCmptRef)if(this._beforeDismiss){const dismiss=this._beforeDismiss();dismiss&&dismiss.then?dismiss.then(result=>{!1!==result&&this._dismiss(reason)},()=>{}):!1!==dismiss&&this._dismiss(reason)}else this._dismiss(reason)}_removeModalElements(){const windowNativeEl=this._windowCmptRef.location.nativeElement;if(windowNativeEl.parentNode.removeChild(windowNativeEl),this._windowCmptRef.destroy(),this._backdropCmptRef){const backdropNativeEl=this._backdropCmptRef.location.nativeElement;backdropNativeEl.parentNode.removeChild(backdropNativeEl),this._backdropCmptRef.destroy()}this._contentRef&&this._contentRef.viewRef&&this._contentRef.viewRef.destroy(),this._windowCmptRef=null,this._backdropCmptRef=null,this._contentRef=null}}var ModalDismissReasons=function(ModalDismissReasons){return ModalDismissReasons[ModalDismissReasons.BACKDROP_CLICK=0]=\"BACKDROP_CLICK\",ModalDismissReasons[ModalDismissReasons.ESC=1]=\"ESC\",ModalDismissReasons}({});let ng_bootstrap_NgbModalWindow=(()=>{let NgbModalWindow=class{constructor(_document,_elRef,_zone){this._document=_document,this._elRef=_elRef,this._zone=_zone,this._closed$=new Subject.a,this._elWithFocus=null,this.backdrop=!0,this.keyboard=!0,this.dismissEvent=new core.o}dismiss(reason){this.dismissEvent.emit(reason)}ngOnInit(){this._elWithFocus=this._document.activeElement}ngAfterViewInit(){const{nativeElement:nativeElement}=this._elRef;if(this._zone.runOutsideAngular(()=>{fromEvent(nativeElement,\"keydown\").pipe(takeUntil(this._closed$),Object(filter.a)(e=>e.which===Key.Escape&&this.keyboard)).subscribe(event=>requestAnimationFrame(()=>{event.defaultPrevented||this._zone.run(()=>this.dismiss(ModalDismissReasons.ESC))}));let preventClose=!1;fromEvent(this._dialogEl.nativeElement,\"mousedown\").pipe(takeUntil(this._closed$),Object(tap.a)(()=>preventClose=!1),Object(switchMap.a)(()=>fromEvent(nativeElement,\"mouseup\").pipe(takeUntil(this._closed$),Object(take.a)(1))),Object(filter.a)(({target:target})=>nativeElement===target)).subscribe(()=>{preventClose=!0}),fromEvent(nativeElement,\"click\").pipe(takeUntil(this._closed$)).subscribe(({target:target})=>{!0!==this.backdrop||nativeElement!==target||preventClose||this._zone.run(()=>this.dismiss(ModalDismissReasons.BACKDROP_CLICK)),preventClose=!1})}),!nativeElement.contains(document.activeElement)){const autoFocusable=nativeElement.querySelector(\"[ngbAutofocus]\"),firstFocusable=getFocusableBoundaryElements(nativeElement)[0];(autoFocusable||firstFocusable||nativeElement).focus()}}ngOnDestroy(){const body=this._document.body,elWithFocus=this._elWithFocus;let elementToFocus;elementToFocus=elWithFocus&&elWithFocus.focus&&body.contains(elWithFocus)?elWithFocus:body,this._zone.runOutsideAngular(()=>{setTimeout(()=>elementToFocus.focus()),this._elWithFocus=null}),this._closed$.next()}};return NgbModalWindow.ɵfac=function(t){return new(t||NgbModalWindow)(core.Nb(common.c),core.Nb(core.m),core.Nb(core.C))},NgbModalWindow.ɵcmp=core.Hb({type:NgbModalWindow,selectors:[[\"ngb-modal-window\"]],viewQuery:function(rf,ctx){if(1&rf&&core.Fc(_c29,3),2&rf){let _t;core.rc(_t=core.dc())&&(ctx._dialogEl=_t.first)}},hostAttrs:[\"role\",\"dialog\",\"tabindex\",\"-1\"],hostVars:5,hostBindings:function(rf,ctx){2&rf&&(core.Bb(\"aria-modal\",!0)(\"aria-labelledby\",ctx.ariaLabelledBy)(\"aria-describedby\",ctx.ariaDescribedBy),core.Cb(\"modal fade show d-block\"+(ctx.windowClass?\" \"+ctx.windowClass:\"\")))},inputs:{backdrop:\"backdrop\",keyboard:\"keyboard\",ariaLabelledBy:\"ariaLabelledBy\",ariaDescribedBy:\"ariaDescribedBy\",centered:\"centered\",scrollable:\"scrollable\",size:\"size\",windowClass:\"windowClass\"},outputs:{dismissEvent:\"dismiss\"},ngContentSelectors:_c3,decls:4,vars:2,consts:[[\"role\",\"document\"],[\"dialog\",\"\"],[1,\"modal-content\"]],template:function(rf,ctx){1&rf&&(core.jc(),core.Sb(0,\"div\",0,1),core.Sb(2,\"div\",2),core.ic(3),core.Rb(),core.Rb()),2&rf&&core.Cb(\"modal-dialog\"+(ctx.size?\" modal-\"+ctx.size:\"\")+(ctx.centered?\" modal-dialog-centered\":\"\")+(ctx.scrollable?\" modal-dialog-scrollable\":\"\"))},styles:[\"ngb-modal-window .component-host-scrollable{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;overflow:hidden}\"],encapsulation:2}),NgbModalWindow=__decorate([__param(0,Object(core.r)(common.c))],NgbModalWindow),NgbModalWindow})(),ng_bootstrap_NgbModalStack=(()=>{let NgbModalStack=class{constructor(_applicationRef,_injector,_document,_scrollBar,_rendererFactory,_ngZone){this._applicationRef=_applicationRef,this._injector=_injector,this._document=_document,this._scrollBar=_scrollBar,this._rendererFactory=_rendererFactory,this._ngZone=_ngZone,this._activeWindowCmptHasChanged=new Subject.a,this._ariaHiddenValues=new Map,this._backdropAttributes=[\"backdropClass\"],this._modalRefs=[],this._windowAttributes=[\"ariaLabelledBy\",\"ariaDescribedBy\",\"backdrop\",\"centered\",\"keyboard\",\"scrollable\",\"size\",\"windowClass\"],this._windowCmpts=[],this._activeInstances=new core.o,this._activeWindowCmptHasChanged.subscribe(()=>{if(this._windowCmpts.length){const activeWindowCmpt=this._windowCmpts[this._windowCmpts.length-1];ngbFocusTrap(this._ngZone,activeWindowCmpt.location.nativeElement,this._activeWindowCmptHasChanged),this._revertAriaHidden(),this._setAriaHidden(activeWindowCmpt.location.nativeElement)}})}open(moduleCFR,contentInjector,content,options){const containerEl=options.container instanceof HTMLElement?options.container:isDefined(options.container)?this._document.querySelector(options.container):this._document.body,renderer=this._rendererFactory.createRenderer(null,null),revertPaddingForScrollBar=this._scrollBar.compensate(),removeBodyClass=()=>{this._modalRefs.length||(renderer.removeClass(this._document.body,\"modal-open\"),this._revertAriaHidden())};if(!containerEl)throw new Error(`The specified modal container \"${options.container||\"body\"}\" was not found in the DOM.`);const activeModal=new NgbActiveModal,contentRef=this._getContentRef(moduleCFR,options.injector||contentInjector,content,activeModal,options);let backdropCmptRef=!1!==options.backdrop?this._attachBackdrop(moduleCFR,containerEl):void 0,windowCmptRef=this._attachWindowComponent(moduleCFR,containerEl,contentRef),ngbModalRef=new NgbModalRef(windowCmptRef,contentRef,backdropCmptRef,options.beforeDismiss);return this._registerModalRef(ngbModalRef),this._registerWindowCmpt(windowCmptRef),ngbModalRef.result.then(revertPaddingForScrollBar,revertPaddingForScrollBar),ngbModalRef.result.then(removeBodyClass,removeBodyClass),activeModal.close=result=>{ngbModalRef.close(result)},activeModal.dismiss=reason=>{ngbModalRef.dismiss(reason)},this._applyWindowOptions(windowCmptRef.instance,options),1===this._modalRefs.length&&renderer.addClass(this._document.body,\"modal-open\"),backdropCmptRef&&backdropCmptRef.instance&&this._applyBackdropOptions(backdropCmptRef.instance,options),ngbModalRef}get activeInstances(){return this._activeInstances}dismissAll(reason){this._modalRefs.forEach(ngbModalRef=>ngbModalRef.dismiss(reason))}hasOpenModals(){return this._modalRefs.length>0}_attachBackdrop(moduleCFR,containerEl){let backdropCmptRef=moduleCFR.resolveComponentFactory(ng_bootstrap_NgbModalBackdrop).create(this._injector);return this._applicationRef.attachView(backdropCmptRef.hostView),containerEl.appendChild(backdropCmptRef.location.nativeElement),backdropCmptRef}_attachWindowComponent(moduleCFR,containerEl,contentRef){let windowCmptRef=moduleCFR.resolveComponentFactory(ng_bootstrap_NgbModalWindow).create(this._injector,contentRef.nodes);return this._applicationRef.attachView(windowCmptRef.hostView),containerEl.appendChild(windowCmptRef.location.nativeElement),windowCmptRef}_applyWindowOptions(windowInstance,options){this._windowAttributes.forEach(optionName=>{isDefined(options[optionName])&&(windowInstance[optionName]=options[optionName])})}_applyBackdropOptions(backdropInstance,options){this._backdropAttributes.forEach(optionName=>{isDefined(options[optionName])&&(backdropInstance[optionName]=options[optionName])})}_getContentRef(moduleCFR,contentInjector,content,activeModal,options){return content?content instanceof core.N?this._createFromTemplateRef(content,activeModal):isString(content)?this._createFromString(content):this._createFromComponent(moduleCFR,contentInjector,content,activeModal,options):new ContentRef([])}_createFromTemplateRef(content,activeModal){const viewRef=content.createEmbeddedView({$implicit:activeModal,close(result){activeModal.close(result)},dismiss(reason){activeModal.dismiss(reason)}});return this._applicationRef.attachView(viewRef),new ContentRef([viewRef.rootNodes],viewRef)}_createFromString(content){const component=this._document.createTextNode(`${content}`);return new ContentRef([[component]])}_createFromComponent(moduleCFR,contentInjector,content,context,options){const contentCmptFactory=moduleCFR.resolveComponentFactory(content),modalContentInjector=core.u.create({providers:[{provide:NgbActiveModal,useValue:context}],parent:contentInjector}),componentRef=contentCmptFactory.create(modalContentInjector),componentNativeEl=componentRef.location.nativeElement;return options.scrollable&&componentNativeEl.classList.add(\"component-host-scrollable\"),this._applicationRef.attachView(componentRef.hostView),new ContentRef([[componentNativeEl]],componentRef.hostView,componentRef)}_setAriaHidden(element){const parent=element.parentElement;parent&&element!==this._document.body&&(Array.from(parent.children).forEach(sibling=>{sibling!==element&&\"SCRIPT\"!==sibling.nodeName&&(this._ariaHiddenValues.set(sibling,sibling.getAttribute(\"aria-hidden\")),sibling.setAttribute(\"aria-hidden\",\"true\"))}),this._setAriaHidden(parent))}_revertAriaHidden(){this._ariaHiddenValues.forEach((value,element)=>{value?element.setAttribute(\"aria-hidden\",value):element.removeAttribute(\"aria-hidden\")}),this._ariaHiddenValues.clear()}_registerModalRef(ngbModalRef){const unregisterModalRef=()=>{const index=this._modalRefs.indexOf(ngbModalRef);index>-1&&(this._modalRefs.splice(index,1),this._activeInstances.emit(this._modalRefs))};this._modalRefs.push(ngbModalRef),this._activeInstances.emit(this._modalRefs),ngbModalRef.result.then(unregisterModalRef,unregisterModalRef)}_registerWindowCmpt(ngbWindowCmpt){this._windowCmpts.push(ngbWindowCmpt),this._activeWindowCmptHasChanged.next(),ngbWindowCmpt.onDestroy(()=>{const index=this._windowCmpts.indexOf(ngbWindowCmpt);index>-1&&(this._windowCmpts.splice(index,1),this._activeWindowCmptHasChanged.next())})}};return NgbModalStack.ɵfac=function(t){return new(t||NgbModalStack)(core.Zb(core.g),core.Zb(core.u),core.Zb(common.c),core.Zb(ng_bootstrap_ScrollBar),core.Zb(core.H),core.Zb(core.C))},NgbModalStack.ɵprov=Object(core.Jb)({factory:function(){return new NgbModalStack(Object(core.Zb)(core.g),Object(core.Zb)(core.q),Object(core.Zb)(common.c),Object(core.Zb)(ng_bootstrap_ScrollBar),Object(core.Zb)(core.H),Object(core.Zb)(core.C))},token:NgbModalStack,providedIn:\"root\"}),NgbModalStack=__decorate([__param(2,Object(core.r)(common.c))],NgbModalStack),NgbModalStack})(),ng_bootstrap_NgbModal=(()=>{let NgbModal=class{constructor(_moduleCFR,_injector,_modalStack,_config){this._moduleCFR=_moduleCFR,this._injector=_injector,this._modalStack=_modalStack,this._config=_config}open(content,options={}){const combinedOptions=Object.assign({},this._config,options);return this._modalStack.open(this._moduleCFR,this._injector,content,combinedOptions)}get activeInstances(){return this._modalStack.activeInstances}dismissAll(reason){this._modalStack.dismissAll(reason)}hasOpenModals(){return this._modalStack.hasOpenModals()}};return NgbModal.ɵfac=function(t){return new(t||NgbModal)(core.Zb(core.k),core.Zb(core.u),core.Zb(ng_bootstrap_NgbModalStack),core.Zb(ng_bootstrap_NgbModalConfig))},NgbModal.ɵprov=Object(core.Jb)({factory:function(){return new NgbModal(Object(core.Zb)(core.k),Object(core.Zb)(core.q),Object(core.Zb)(ng_bootstrap_NgbModalStack),Object(core.Zb)(ng_bootstrap_NgbModalConfig))},token:NgbModal,providedIn:\"root\"}),NgbModal})(),ng_bootstrap_NgbModalModule=(()=>{let NgbModalModule=class{};return NgbModalModule.ɵfac=function(t){return new(t||NgbModalModule)},NgbModalModule.ɵmod=core.Lb({type:NgbModalModule}),NgbModalModule.ɵinj=core.Kb({providers:[ng_bootstrap_NgbModal]}),NgbModalModule})(),ng_bootstrap_NgbNavModule=(()=>{let NgbNavModule=class{};return NgbNavModule.ɵfac=function(t){return new(t||NgbNavModule)},NgbNavModule.ɵmod=core.Lb({type:NgbNavModule}),NgbNavModule.ɵinj=core.Kb({imports:[[common.b]]}),NgbNavModule})(),ng_bootstrap_NgbPaginationConfig=(()=>{let NgbPaginationConfig=class{constructor(){this.disabled=!1,this.boundaryLinks=!1,this.directionLinks=!0,this.ellipses=!0,this.maxSize=0,this.pageSize=10,this.rotate=!1}};return NgbPaginationConfig.ɵfac=function(t){return new(t||NgbPaginationConfig)},NgbPaginationConfig.ɵprov=Object(core.Jb)({factory:function(){return new NgbPaginationConfig},token:NgbPaginationConfig,providedIn:\"root\"}),NgbPaginationConfig})(),ng_bootstrap_NgbPaginationEllipsis=(()=>{let NgbPaginationEllipsis=class{constructor(templateRef){this.templateRef=templateRef}};return NgbPaginationEllipsis.ɵfac=function(t){return new(t||NgbPaginationEllipsis)(core.Nb(core.N))},NgbPaginationEllipsis.ɵdir=core.Ib({type:NgbPaginationEllipsis,selectors:[[\"ng-template\",\"ngbPaginationEllipsis\",\"\"]]}),NgbPaginationEllipsis})(),ng_bootstrap_NgbPaginationFirst=(()=>{let NgbPaginationFirst=class{constructor(templateRef){this.templateRef=templateRef}};return NgbPaginationFirst.ɵfac=function(t){return new(t||NgbPaginationFirst)(core.Nb(core.N))},NgbPaginationFirst.ɵdir=core.Ib({type:NgbPaginationFirst,selectors:[[\"ng-template\",\"ngbPaginationFirst\",\"\"]]}),NgbPaginationFirst})(),ng_bootstrap_NgbPaginationLast=(()=>{let NgbPaginationLast=class{constructor(templateRef){this.templateRef=templateRef}};return NgbPaginationLast.ɵfac=function(t){return new(t||NgbPaginationLast)(core.Nb(core.N))},NgbPaginationLast.ɵdir=core.Ib({type:NgbPaginationLast,selectors:[[\"ng-template\",\"ngbPaginationLast\",\"\"]]}),NgbPaginationLast})(),ng_bootstrap_NgbPaginationNext=(()=>{let NgbPaginationNext=class{constructor(templateRef){this.templateRef=templateRef}};return NgbPaginationNext.ɵfac=function(t){return new(t||NgbPaginationNext)(core.Nb(core.N))},NgbPaginationNext.ɵdir=core.Ib({type:NgbPaginationNext,selectors:[[\"ng-template\",\"ngbPaginationNext\",\"\"]]}),NgbPaginationNext})(),ng_bootstrap_NgbPaginationNumber=(()=>{let NgbPaginationNumber=class{constructor(templateRef){this.templateRef=templateRef}};return NgbPaginationNumber.ɵfac=function(t){return new(t||NgbPaginationNumber)(core.Nb(core.N))},NgbPaginationNumber.ɵdir=core.Ib({type:NgbPaginationNumber,selectors:[[\"ng-template\",\"ngbPaginationNumber\",\"\"]]}),NgbPaginationNumber})(),ng_bootstrap_NgbPaginationPrevious=(()=>{let NgbPaginationPrevious=class{constructor(templateRef){this.templateRef=templateRef}};return NgbPaginationPrevious.ɵfac=function(t){return new(t||NgbPaginationPrevious)(core.Nb(core.N))},NgbPaginationPrevious.ɵdir=core.Ib({type:NgbPaginationPrevious,selectors:[[\"ng-template\",\"ngbPaginationPrevious\",\"\"]]}),NgbPaginationPrevious})(),ng_bootstrap_NgbPagination=(()=>{let NgbPagination=class{constructor(config){this.pageCount=0,this.pages=[],this.page=1,this.pageChange=new core.o(!0),this.disabled=config.disabled,this.boundaryLinks=config.boundaryLinks,this.directionLinks=config.directionLinks,this.ellipses=config.ellipses,this.maxSize=config.maxSize,this.pageSize=config.pageSize,this.rotate=config.rotate,this.size=config.size}hasPrevious(){return this.page>1}hasNext(){return this.page<this.pageCount}nextDisabled(){return!this.hasNext()||this.disabled}previousDisabled(){return!this.hasPrevious()||this.disabled}selectPage(pageNumber){this._updatePages(pageNumber)}ngOnChanges(changes){this._updatePages(this.page)}isEllipsis(pageNumber){return-1===pageNumber}_applyEllipses(start,end){this.ellipses&&(start>0&&(start>2?this.pages.unshift(-1):2===start&&this.pages.unshift(2),this.pages.unshift(1)),end<this.pageCount&&(end<this.pageCount-2?this.pages.push(-1):end===this.pageCount-2&&this.pages.push(this.pageCount-1),this.pages.push(this.pageCount)))}_applyRotation(){let start=0,end=this.pageCount,leftOffset=Math.floor(this.maxSize/2);return this.page<=leftOffset?end=this.maxSize:this.pageCount-this.page<leftOffset?start=this.pageCount-this.maxSize:(start=this.page-leftOffset-1,end=this.page+(this.maxSize%2==0?leftOffset-1:leftOffset)),[start,end]}_applyPagination(){let start=(Math.ceil(this.page/this.maxSize)-1)*this.maxSize;return[start,start+this.maxSize]}_setPageInRange(newPageNo){const prevPageNo=this.page;this.page=getValueInRange(newPageNo,this.pageCount,1),this.page!==prevPageNo&&isNumber(this.collectionSize)&&this.pageChange.emit(this.page)}_updatePages(newPage){this.pageCount=Math.ceil(this.collectionSize/this.pageSize),isNumber(this.pageCount)||(this.pageCount=0),this.pages.length=0;for(let i=1;i<=this.pageCount;i++)this.pages.push(i);if(this._setPageInRange(newPage),this.maxSize>0&&this.pageCount>this.maxSize){let start=0,end=this.pageCount;[start,end]=this.rotate?this._applyRotation():this._applyPagination(),this.pages=this.pages.slice(start,end),this._applyEllipses(start,end)}}};return NgbPagination.ɵfac=function(t){return new(t||NgbPagination)(core.Nb(ng_bootstrap_NgbPaginationConfig))},NgbPagination.ɵcmp=core.Hb({type:NgbPagination,selectors:[[\"ngb-pagination\"]],contentQueries:function(rf,ctx,dirIndex){if(1&rf&&(core.Gb(dirIndex,ng_bootstrap_NgbPaginationEllipsis,1),core.Gb(dirIndex,ng_bootstrap_NgbPaginationFirst,1),core.Gb(dirIndex,ng_bootstrap_NgbPaginationLast,1),core.Gb(dirIndex,ng_bootstrap_NgbPaginationNext,1),core.Gb(dirIndex,ng_bootstrap_NgbPaginationNumber,1),core.Gb(dirIndex,ng_bootstrap_NgbPaginationPrevious,1)),2&rf){let _t;core.rc(_t=core.dc())&&(ctx.tplEllipsis=_t.first),core.rc(_t=core.dc())&&(ctx.tplFirst=_t.first),core.rc(_t=core.dc())&&(ctx.tplLast=_t.first),core.rc(_t=core.dc())&&(ctx.tplNext=_t.first),core.rc(_t=core.dc())&&(ctx.tplNumber=_t.first),core.rc(_t=core.dc())&&(ctx.tplPrevious=_t.first)}},hostAttrs:[\"role\",\"navigation\"],inputs:{page:\"page\",disabled:\"disabled\",boundaryLinks:\"boundaryLinks\",directionLinks:\"directionLinks\",ellipses:\"ellipses\",maxSize:\"maxSize\",pageSize:\"pageSize\",rotate:\"rotate\",size:\"size\",collectionSize:\"collectionSize\"},outputs:{pageChange:\"pageChange\"},features:[core.yb],decls:18,vars:7,consts:function(){let i18n_32,i18n_34,i18n_36,i18n_38,i18n_40,i18n_43,i18n_48,i18n_50;return i18n_32=$localize`:@@ngb.pagination.first␟656506dfd46380956a655f919f1498d018f75ca0␟6867721956102594380:««`,i18n_34=$localize`:@@ngb.pagination.previous␟6e52b6ee77a4848d899dd21b591c6fd499e3aef3␟6479320895410098858:«`,i18n_36=$localize`:@@ngb.pagination.next␟ba9cbb4ff311464308a3627e4f1c3345d9fe6d7d␟5458177150283468089:»`,i18n_38=$localize`:@@ngb.pagination.last␟49f27a460bc97e7e00be5b37098bfa79884fc7d9␟5277020320267646988:»»`,i18n_40=$localize`:@@ngb.pagination.first-aria␟f2f852318759c6396b5d3d17031d53817d7b38cc␟2241508602425256033:First`,i18n_43=$localize`:@@ngb.pagination.previous-aria␟680d5c75b7fd8d37961083608b9fcdc4167b4c43␟4452427314943113135:Previous`,i18n_48=$localize`:@@ngb.pagination.next-aria␟f732c304c7433e5a83ffcd862c3dce709a0f4982␟3885497195825665706:Next`,i18n_50=$localize`:@@ngb.pagination.last-aria␟5c729788ba138508aca1bec050b610f7bf81db3e␟4882268002141858767:Last`,[[\"first\",\"\"],[\"previous\",\"\"],[\"next\",\"\"],[\"last\",\"\"],[\"ellipsis\",\"\"],[\"defaultNumber\",\"\"],[\"class\",\"page-item\",3,\"disabled\",4,\"ngIf\"],[\"class\",\"page-item\",3,\"active\",\"disabled\",4,\"ngFor\",\"ngForOf\"],[\"aria-hidden\",\"true\"],i18n_32,i18n_34,i18n_36,i18n_38,[\"class\",\"sr-only\",4,\"ngIf\"],[1,\"sr-only\"],[1,\"page-item\"],[\"aria-label\",i18n_40,\"href\",\"\",1,\"page-link\",3,\"click\"],[3,\"ngTemplateOutlet\",\"ngTemplateOutletContext\"],[\"aria-label\",i18n_43,\"href\",\"\",1,\"page-link\",3,\"click\"],[\"class\",\"page-link\",\"tabindex\",\"-1\",\"aria-disabled\",\"true\",4,\"ngIf\"],[\"class\",\"page-link\",\"href\",\"\",3,\"click\",4,\"ngIf\"],[\"tabindex\",\"-1\",\"aria-disabled\",\"true\",1,\"page-link\"],[\"href\",\"\",1,\"page-link\",3,\"click\"],[\"aria-label\",i18n_48,\"href\",\"\",1,\"page-link\",3,\"click\"],[\"aria-label\",i18n_50,\"href\",\"\",1,\"page-link\",3,\"click\"]]},template:function(rf,ctx){1&rf&&(core.yc(0,NgbPagination_ng_template_0_Template,2,0,\"ng-template\",null,0,core.zc),core.yc(2,NgbPagination_ng_template_2_Template,2,0,\"ng-template\",null,1,core.zc),core.yc(4,NgbPagination_ng_template_4_Template,2,0,\"ng-template\",null,2,core.zc),core.yc(6,NgbPagination_ng_template_6_Template,2,0,\"ng-template\",null,3,core.zc),core.yc(8,NgbPagination_ng_template_8_Template,1,0,\"ng-template\",null,4,core.zc),core.yc(10,NgbPagination_ng_template_10_Template,2,2,\"ng-template\",null,5,core.zc),core.Sb(12,\"ul\"),core.yc(13,NgbPagination_li_13_Template,3,9,\"li\",6),core.yc(14,NgbPagination_li_14_Template,3,8,\"li\",6),core.yc(15,NgbPagination_li_15_Template,3,7,\"li\",7),core.yc(16,NgbPagination_li_16_Template,3,9,\"li\",6),core.yc(17,NgbPagination_li_17_Template,3,9,\"li\",6),core.Rb()),2&rf&&(core.Ab(12),core.Cb(\"pagination\"+(ctx.size?\" pagination-\"+ctx.size:\"\")),core.Ab(1),core.kc(\"ngIf\",ctx.boundaryLinks),core.Ab(1),core.kc(\"ngIf\",ctx.directionLinks),core.Ab(1),core.kc(\"ngForOf\",ctx.pages),core.Ab(1),core.kc(\"ngIf\",ctx.directionLinks),core.Ab(1),core.kc(\"ngIf\",ctx.boundaryLinks))},directives:[common.m,common.l,common.n],encapsulation:2,changeDetection:0}),NgbPagination})(),ng_bootstrap_NgbPaginationModule=(()=>{let NgbPaginationModule=class{};return NgbPaginationModule.ɵfac=function(t){return new(t||NgbPaginationModule)},NgbPaginationModule.ɵmod=core.Lb({type:NgbPaginationModule}),NgbPaginationModule.ɵinj=core.Kb({imports:[[common.b]]}),NgbPaginationModule})();class Trigger{constructor(open,close){this.open=open,this.close=close,close||(this.close=open)}isManual(){return\"manual\"===this.open||\"manual\"===this.close}}const DEFAULT_ALIASES={hover:[\"mouseenter\",\"mouseleave\"],focus:[\"focusin\",\"focusout\"]},delayOrNoop=time=>time>0?delay_delay(time):a=>a;function listenToTriggers(renderer,nativeElement,triggers,isOpenedFn,openFn,closeFn,openDelay=0,closeDelay=0){const parsedTriggers=function(triggers,aliases=DEFAULT_ALIASES){const trimmedTriggers=(triggers||\"\").trim();if(0===trimmedTriggers.length)return[];const parsedTriggers=trimmedTriggers.split(/\\s+/).map(trigger=>trigger.split(\":\")).map(triggerPair=>{let alias=aliases[triggerPair[0]]||triggerPair;return new Trigger(alias[0],alias[1])}),manualTriggers=parsedTriggers.filter(triggerPair=>triggerPair.isManual());if(manualTriggers.length>1)throw\"Triggers parse error: only one manual trigger is allowed\";if(1===manualTriggers.length&&parsedTriggers.length>1)throw\"Triggers parse error: manual trigger can't be mixed with other triggers\";return parsedTriggers}(triggers);if(1===parsedTriggers.length&&parsedTriggers[0].isManual())return()=>{};const subscription=function(renderer,nativeElement,triggers,isOpenedFn){return new Observable.a(subscriber=>{const listeners=[],openFn=()=>subscriber.next(!0),closeFn=()=>subscriber.next(!1),toggleFn=()=>subscriber.next(!isOpenedFn());return triggers.forEach(trigger=>{trigger.open===trigger.close?listeners.push(renderer.listen(nativeElement,trigger.open,toggleFn)):listeners.push(renderer.listen(nativeElement,trigger.open,openFn),renderer.listen(nativeElement,trigger.close,closeFn))}),()=>{listeners.forEach(unsubscribeFn=>unsubscribeFn())}})}(renderer,nativeElement,parsedTriggers,isOpenedFn).pipe(function(openDelay,closeDelay,isOpenedFn){return input$=>{let pending=null;const filteredInput$=input$.pipe(Object(map.a)(open=>({open:open})),Object(filter.a)(event=>{const currentlyOpen=isOpenedFn();return currentlyOpen===event.open||pending&&pending.open!==currentlyOpen?(pending&&pending.open!==event.open&&(pending=null),!1):(pending=event,!0)}),Object(share.a)()),delayedOpen$=filteredInput$.pipe(Object(filter.a)(event=>event.open),delayOrNoop(openDelay)),delayedClose$=filteredInput$.pipe(Object(filter.a)(event=>!event.open),delayOrNoop(closeDelay));return Object(merge.a)(delayedOpen$,delayedClose$).pipe(Object(filter.a)(event=>event===pending&&(pending=null,event.open!==isOpenedFn())),Object(map.a)(event=>event.open))}}(openDelay,closeDelay,isOpenedFn)).subscribe(open=>open?openFn():closeFn());return()=>subscription.unsubscribe()}let ng_bootstrap_NgbPopoverConfig=(()=>{let NgbPopoverConfig=class{constructor(){this.autoClose=!0,this.placement=\"auto\",this.triggers=\"click\",this.disablePopover=!1,this.openDelay=0,this.closeDelay=0}};return NgbPopoverConfig.ɵfac=function(t){return new(t||NgbPopoverConfig)},NgbPopoverConfig.ɵprov=Object(core.Jb)({factory:function(){return new NgbPopoverConfig},token:NgbPopoverConfig,providedIn:\"root\"}),NgbPopoverConfig})(),nextId$3=0,ng_bootstrap_NgbPopoverWindow=(()=>{let NgbPopoverWindow=class{isTitleTemplate(){return this.title instanceof core.N}};return NgbPopoverWindow.ɵfac=function(t){return new(t||NgbPopoverWindow)},NgbPopoverWindow.ɵcmp=core.Hb({type:NgbPopoverWindow,selectors:[[\"ngb-popover-window\"]],hostAttrs:[\"role\",\"tooltip\"],hostVars:3,hostBindings:function(rf,ctx){2&rf&&(core.Vb(\"id\",ctx.id),core.Cb(\"popover\"+(ctx.popoverClass?\" \"+ctx.popoverClass:\"\")))},inputs:{title:\"title\",id:\"id\",popoverClass:\"popoverClass\",context:\"context\"},ngContentSelectors:_c3,decls:4,vars:1,consts:[[1,\"arrow\"],[\"class\",\"popover-header\",4,\"ngIf\"],[1,\"popover-body\"],[1,\"popover-header\"],[\"simpleTitle\",\"\"],[3,\"ngTemplateOutlet\",\"ngTemplateOutletContext\"]],template:function(rf,ctx){1&rf&&(core.jc(),core.Ob(0,\"div\",0),core.yc(1,NgbPopoverWindow_h3_1_Template,4,2,\"h3\",1),core.Sb(2,\"div\",2),core.ic(3),core.Rb()),2&rf&&(core.Ab(1),core.kc(\"ngIf\",null!=ctx.title))},directives:[common.m,common.n],styles:[\"ngb-popover-window.bs-popover-bottom>.arrow,ngb-popover-window.bs-popover-top>.arrow{left:50%;margin-left:-.5rem}ngb-popover-window.bs-popover-bottom-left>.arrow,ngb-popover-window.bs-popover-top-left>.arrow{left:2em}ngb-popover-window.bs-popover-bottom-right>.arrow,ngb-popover-window.bs-popover-top-right>.arrow{left:auto;right:2em}ngb-popover-window.bs-popover-left>.arrow,ngb-popover-window.bs-popover-right>.arrow{top:50%;margin-top:-.5rem}ngb-popover-window.bs-popover-left-top>.arrow,ngb-popover-window.bs-popover-right-top>.arrow{top:.7em}ngb-popover-window.bs-popover-left-bottom>.arrow,ngb-popover-window.bs-popover-right-bottom>.arrow{top:auto;bottom:.7em}\"],encapsulation:2,changeDetection:0}),NgbPopoverWindow})(),ng_bootstrap_NgbPopover=(()=>{let NgbPopover=class{constructor(_elementRef,_renderer,injector,componentFactoryResolver,viewContainerRef,config,_ngZone,_document,_changeDetector,applicationRef){this._elementRef=_elementRef,this._renderer=_renderer,this._ngZone=_ngZone,this._document=_document,this._changeDetector=_changeDetector,this.shown=new core.o,this.hidden=new core.o,this._ngbPopoverWindowId=\"ngb-popover-\"+nextId$3++,this._windowRef=null,this.autoClose=config.autoClose,this.placement=config.placement,this.triggers=config.triggers,this.container=config.container,this.disablePopover=config.disablePopover,this.popoverClass=config.popoverClass,this.openDelay=config.openDelay,this.closeDelay=config.closeDelay,this._popupService=new ng_bootstrap_PopupService(ng_bootstrap_NgbPopoverWindow,injector,viewContainerRef,_renderer,componentFactoryResolver,applicationRef),this._zoneSubscription=_ngZone.onStable.subscribe(()=>{this._windowRef&&positionElements(this._elementRef.nativeElement,this._windowRef.location.nativeElement,this.placement,\"body\"===this.container,\"bs-popover\")})}_isDisabled(){return!!this.disablePopover||!this.ngbPopover&&!this.popoverTitle}open(context){this._windowRef||this._isDisabled()||(this._windowRef=this._popupService.open(this.ngbPopover,context),this._windowRef.instance.title=this.popoverTitle,this._windowRef.instance.context=context,this._windowRef.instance.popoverClass=this.popoverClass,this._windowRef.instance.id=this._ngbPopoverWindowId,this._renderer.setAttribute(this._elementRef.nativeElement,\"aria-describedby\",this._ngbPopoverWindowId),\"body\"===this.container&&this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement),this._windowRef.changeDetectorRef.detectChanges(),this._windowRef.changeDetectorRef.markForCheck(),ngbAutoClose(this._ngZone,this._document,this.autoClose,()=>this.close(),this.hidden,[this._windowRef.location.nativeElement]),this.shown.emit())}close(){this._windowRef&&(this._renderer.removeAttribute(this._elementRef.nativeElement,\"aria-describedby\"),this._popupService.close(),this._windowRef=null,this.hidden.emit(),this._changeDetector.markForCheck())}toggle(){this._windowRef?this.close():this.open()}isOpen(){return null!=this._windowRef}ngOnInit(){this._unregisterListenersFn=listenToTriggers(this._renderer,this._elementRef.nativeElement,this.triggers,this.isOpen.bind(this),this.open.bind(this),this.close.bind(this),+this.openDelay,+this.closeDelay)}ngOnChanges({ngbPopover:ngbPopover,popoverTitle:popoverTitle,disablePopover:disablePopover,popoverClass:popoverClass}){popoverClass&&this.isOpen()&&(this._windowRef.instance.popoverClass=popoverClass.currentValue),(ngbPopover||popoverTitle||disablePopover)&&this._isDisabled()&&this.close()}ngOnDestroy(){this.close(),this._unregisterListenersFn&&this._unregisterListenersFn(),this._zoneSubscription.unsubscribe()}};return NgbPopover.ɵfac=function(t){return new(t||NgbPopover)(core.Nb(core.m),core.Nb(core.G),core.Nb(core.u),core.Nb(core.k),core.Nb(core.R),core.Nb(ng_bootstrap_NgbPopoverConfig),core.Nb(core.C),core.Nb(common.c),core.Nb(core.i),core.Nb(core.g))},NgbPopover.ɵdir=core.Ib({type:NgbPopover,selectors:[[\"\",\"ngbPopover\",\"\"]],inputs:{autoClose:\"autoClose\",placement:\"placement\",triggers:\"triggers\",container:\"container\",disablePopover:\"disablePopover\",popoverClass:\"popoverClass\",openDelay:\"openDelay\",closeDelay:\"closeDelay\",ngbPopover:\"ngbPopover\",popoverTitle:\"popoverTitle\"},outputs:{shown:\"shown\",hidden:\"hidden\"},exportAs:[\"ngbPopover\"],features:[core.yb]}),NgbPopover=__decorate([__param(7,Object(core.r)(common.c))],NgbPopover),NgbPopover})(),ng_bootstrap_NgbPopoverModule=(()=>{let NgbPopoverModule=class{};return NgbPopoverModule.ɵfac=function(t){return new(t||NgbPopoverModule)},NgbPopoverModule.ɵmod=core.Lb({type:NgbPopoverModule}),NgbPopoverModule.ɵinj=core.Kb({imports:[[common.b]]}),NgbPopoverModule})(),ng_bootstrap_NgbProgressbarConfig=(()=>{let NgbProgressbarConfig=class{constructor(){this.max=100,this.animated=!1,this.striped=!1,this.showValue=!1}};return NgbProgressbarConfig.ɵfac=function(t){return new(t||NgbProgressbarConfig)},NgbProgressbarConfig.ɵprov=Object(core.Jb)({factory:function(){return new NgbProgressbarConfig},token:NgbProgressbarConfig,providedIn:\"root\"}),NgbProgressbarConfig})(),ng_bootstrap_NgbProgressbar=(()=>{let NgbProgressbar=class{constructor(config){this.value=0,this.max=config.max,this.animated=config.animated,this.striped=config.striped,this.textType=config.textType,this.type=config.type,this.showValue=config.showValue,this.height=config.height}set max(max){this._max=!isNumber(max)||max<=0?100:max}get max(){return this._max}getValue(){return getValueInRange(this.value,this.max)}getPercentValue(){return 100*this.getValue()/this.max}};return NgbProgressbar.ɵfac=function(t){return new(t||NgbProgressbar)(core.Nb(ng_bootstrap_NgbProgressbarConfig))},NgbProgressbar.ɵcmp=core.Hb({type:NgbProgressbar,selectors:[[\"ngb-progressbar\"]],inputs:{value:\"value\",max:\"max\",animated:\"animated\",striped:\"striped\",textType:\"textType\",type:\"type\",showValue:\"showValue\",height:\"height\"},ngContentSelectors:_c3,decls:4,vars:13,consts:function(){let i18n_52;return i18n_52=$localize`:@@ngb.progressbar.value␟f8e9a947b9db4252c0e9905765338712f2fd032f␟3720830768741091151:${\"�0�\"}:INTERPOLATION:`,[[1,\"progress\"],[\"role\",\"progressbar\",\"aria-valuemin\",\"0\"],[4,\"ngIf\"],i18n_52]},template:function(rf,ctx){1&rf&&(core.jc(),core.Sb(0,\"div\",0),core.Sb(1,\"div\",1),core.yc(2,NgbProgressbar_span_2_Template,3,3,\"span\",2),core.ic(3),core.Rb(),core.Rb()),2&rf&&(core.xc(\"height\",ctx.height),core.Ab(1),core.Eb(\"progress-bar\",ctx.type?\" bg-\"+ctx.type:\"\",\"\",ctx.textType?\" text-\"+ctx.textType:\"\",\"\\n      \",ctx.animated?\" progress-bar-animated\":\"\",\"\",ctx.striped?\" progress-bar-striped\":\"\",\"\"),core.xc(\"width\",ctx.getPercentValue(),\"%\"),core.Bb(\"aria-valuenow\",ctx.getValue())(\"aria-valuemax\",ctx.max),core.Ab(1),core.kc(\"ngIf\",ctx.showValue))},directives:[common.m],pipes:[common.p],encapsulation:2,changeDetection:0}),NgbProgressbar})(),ng_bootstrap_NgbProgressbarModule=(()=>{let NgbProgressbarModule=class{};return NgbProgressbarModule.ɵfac=function(t){return new(t||NgbProgressbarModule)},NgbProgressbarModule.ɵmod=core.Lb({type:NgbProgressbarModule}),NgbProgressbarModule.ɵinj=core.Kb({imports:[[common.b]]}),NgbProgressbarModule})(),ng_bootstrap_NgbRatingConfig=(()=>{let NgbRatingConfig=class{constructor(){this.max=10,this.readonly=!1,this.resettable=!1}};return NgbRatingConfig.ɵfac=function(t){return new(t||NgbRatingConfig)},NgbRatingConfig.ɵprov=Object(core.Jb)({factory:function(){return new NgbRatingConfig},token:NgbRatingConfig,providedIn:\"root\"}),NgbRatingConfig})();const NGB_RATING_VALUE_ACCESSOR={provide:fesm2015_forms.i,useExisting:Object(core.V)(()=>ng_bootstrap_NgbRating),multi:!0};let ng_bootstrap_NgbRating=(()=>{let NgbRating=class{constructor(config,_changeDetectorRef){this._changeDetectorRef=_changeDetectorRef,this.contexts=[],this.disabled=!1,this.hover=new core.o,this.leave=new core.o,this.rateChange=new core.o(!0),this.onChange=_=>{},this.onTouched=()=>{},this.max=config.max,this.readonly=config.readonly}ariaValueText(){return`${this.nextRate} out of ${this.max}`}enter(value){this.readonly||this.disabled||this._updateState(value),this.hover.emit(value)}handleBlur(){this.onTouched()}handleClick(value){this.readonly||this.disabled||this.update(this.resettable&&this.rate===value?0:value)}handleKeyDown(event){switch(event.which){case Key.ArrowDown:case Key.ArrowLeft:this.update(this.rate-1);break;case Key.ArrowUp:case Key.ArrowRight:this.update(this.rate+1);break;case Key.Home:this.update(0);break;case Key.End:this.update(this.max);break;default:return}event.preventDefault()}ngOnChanges(changes){changes.rate&&this.update(this.rate)}ngOnInit(){this.contexts=Array.from({length:this.max},(v,k)=>({fill:0,index:k})),this._updateState(this.rate)}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){this.onTouched=fn}reset(){this.leave.emit(this.nextRate),this._updateState(this.rate)}setDisabledState(isDisabled){this.disabled=isDisabled}update(value,internalChange=!0){const newRate=getValueInRange(value,this.max,0);this.readonly||this.disabled||this.rate===newRate||(this.rate=newRate,this.rateChange.emit(this.rate)),internalChange&&(this.onChange(this.rate),this.onTouched()),this._updateState(this.rate)}writeValue(value){this.update(value,!1),this._changeDetectorRef.markForCheck()}_getFillValue(index){const diff=this.nextRate-index;return diff>=1?100:diff<1&&diff>0?parseInt((100*diff).toFixed(2),10):0}_updateState(nextValue){this.nextRate=nextValue,this.contexts.forEach((context,index)=>context.fill=this._getFillValue(index))}};return NgbRating.ɵfac=function(t){return new(t||NgbRating)(core.Nb(ng_bootstrap_NgbRatingConfig),core.Nb(core.i))},NgbRating.ɵcmp=core.Hb({type:NgbRating,selectors:[[\"ngb-rating\"]],contentQueries:function(rf,ctx,dirIndex){if(1&rf&&core.Gb(dirIndex,core.N,1),2&rf){let _t;core.rc(_t=core.dc())&&(ctx.starTemplateFromContent=_t.first)}},hostAttrs:[\"role\",\"slider\",\"aria-valuemin\",\"0\",1,\"d-inline-flex\"],hostVars:5,hostBindings:function(rf,ctx){1&rf&&core.cc(\"blur\",function(){return ctx.handleBlur()})(\"keydown\",function($event){return ctx.handleKeyDown($event)})(\"mouseleave\",function(){return ctx.reset()}),2&rf&&(core.Vb(\"tabindex\",ctx.disabled?-1:0),core.Bb(\"aria-valuemax\",ctx.max)(\"aria-valuenow\",ctx.nextRate)(\"aria-valuetext\",ctx.ariaValueText())(\"aria-disabled\",!!ctx.readonly||null))},inputs:{max:\"max\",readonly:\"readonly\",rate:\"rate\",resettable:\"resettable\",starTemplate:\"starTemplate\"},outputs:{hover:\"hover\",leave:\"leave\",rateChange:\"rateChange\"},features:[core.zb([NGB_RATING_VALUE_ACCESSOR]),core.yb],decls:3,vars:1,consts:[[\"t\",\"\"],[\"ngFor\",\"\",3,\"ngForOf\"],[1,\"sr-only\"],[3,\"mouseenter\",\"click\"],[3,\"ngTemplateOutlet\",\"ngTemplateOutletContext\"]],template:function(rf,ctx){1&rf&&(core.yc(0,NgbRating_ng_template_0_Template,1,1,\"ng-template\",null,0,core.zc),core.yc(2,NgbRating_ng_template_2_Template,4,5,\"ng-template\",1)),2&rf&&(core.Ab(2),core.kc(\"ngForOf\",ctx.contexts))},directives:[common.l,common.n],encapsulation:2,changeDetection:0}),NgbRating})(),ng_bootstrap_NgbRatingModule=(()=>{let NgbRatingModule=class{};return NgbRatingModule.ɵfac=function(t){return new(t||NgbRatingModule)},NgbRatingModule.ɵmod=core.Lb({type:NgbRatingModule}),NgbRatingModule.ɵinj=core.Kb({imports:[[common.b]]}),NgbRatingModule})(),ng_bootstrap_NgbTabsetConfig=(()=>{let NgbTabsetConfig=class{constructor(){this.justify=\"start\",this.orientation=\"horizontal\",this.type=\"tabs\"}};return NgbTabsetConfig.ɵfac=function(t){return new(t||NgbTabsetConfig)},NgbTabsetConfig.ɵprov=Object(core.Jb)({factory:function(){return new NgbTabsetConfig},token:NgbTabsetConfig,providedIn:\"root\"}),NgbTabsetConfig})(),nextId$4=0,ng_bootstrap_NgbTabTitle=(()=>{let NgbTabTitle=class{constructor(templateRef){this.templateRef=templateRef}};return NgbTabTitle.ɵfac=function(t){return new(t||NgbTabTitle)(core.Nb(core.N))},NgbTabTitle.ɵdir=core.Ib({type:NgbTabTitle,selectors:[[\"ng-template\",\"ngbTabTitle\",\"\"]]}),NgbTabTitle})(),ng_bootstrap_NgbTabContent=(()=>{let NgbTabContent=class{constructor(templateRef){this.templateRef=templateRef}};return NgbTabContent.ɵfac=function(t){return new(t||NgbTabContent)(core.Nb(core.N))},NgbTabContent.ɵdir=core.Ib({type:NgbTabContent,selectors:[[\"ng-template\",\"ngbTabContent\",\"\"]]}),NgbTabContent})(),ng_bootstrap_NgbTab=(()=>{let NgbTab=class{constructor(){this.id=\"ngb-tab-\"+nextId$4++,this.disabled=!1}ngAfterContentChecked(){this.titleTpl=this.titleTpls.first,this.contentTpl=this.contentTpls.first}};return NgbTab.ɵfac=function(t){return new(t||NgbTab)},NgbTab.ɵdir=core.Ib({type:NgbTab,selectors:[[\"ngb-tab\"]],contentQueries:function(rf,ctx,dirIndex){if(1&rf&&(core.Gb(dirIndex,ng_bootstrap_NgbTabTitle,0),core.Gb(dirIndex,ng_bootstrap_NgbTabContent,0)),2&rf){let _t;core.rc(_t=core.dc())&&(ctx.titleTpls=_t),core.rc(_t=core.dc())&&(ctx.contentTpls=_t)}},inputs:{id:\"id\",disabled:\"disabled\",title:\"title\"}}),NgbTab})(),ng_bootstrap_NgbTabset=(()=>{let NgbTabset=class{constructor(config){this.destroyOnHide=!0,this.tabChange=new core.o,this.type=config.type,this.justify=config.justify,this.orientation=config.orientation}set justify(className){this.justifyClass=\"fill\"===className||\"justified\"===className?`nav-${className}`:`justify-content-${className}`}select(tabId){let selectedTab=this._getTabById(tabId);if(selectedTab&&!selectedTab.disabled&&this.activeId!==selectedTab.id){let defaultPrevented=!1;this.tabChange.emit({activeId:this.activeId,nextId:selectedTab.id,preventDefault:()=>{defaultPrevented=!0}}),defaultPrevented||(this.activeId=selectedTab.id)}}ngAfterContentChecked(){let activeTab=this._getTabById(this.activeId);this.activeId=activeTab?activeTab.id:this.tabs.length?this.tabs.first.id:null}_getTabById(id){let tabsWithId=this.tabs.filter(tab=>tab.id===id);return tabsWithId.length?tabsWithId[0]:null}};return NgbTabset.ɵfac=function(t){return new(t||NgbTabset)(core.Nb(ng_bootstrap_NgbTabsetConfig))},NgbTabset.ɵcmp=core.Hb({type:NgbTabset,selectors:[[\"ngb-tabset\"]],contentQueries:function(rf,ctx,dirIndex){if(1&rf&&core.Gb(dirIndex,ng_bootstrap_NgbTab,0),2&rf){let _t;core.rc(_t=core.dc())&&(ctx.tabs=_t)}},inputs:{destroyOnHide:\"destroyOnHide\",type:\"type\",justify:\"justify\",orientation:\"orientation\",activeId:\"activeId\"},outputs:{tabChange:\"tabChange\"},exportAs:[\"ngbTabset\"],decls:4,vars:4,consts:[[\"role\",\"tablist\"],[\"class\",\"nav-item\",4,\"ngFor\",\"ngForOf\"],[1,\"tab-content\"],[\"ngFor\",\"\",3,\"ngForOf\"],[1,\"nav-item\"],[\"href\",\"\",\"role\",\"tab\",1,\"nav-link\",3,\"id\",\"click\"],[3,\"ngTemplateOutlet\"],[\"role\",\"tabpanel\",3,\"class\",\"id\",4,\"ngIf\"],[\"role\",\"tabpanel\",3,\"id\"]],template:function(rf,ctx){1&rf&&(core.Sb(0,\"ul\",0),core.yc(1,NgbTabset_li_1_Template,4,11,\"li\",1),core.Rb(),core.Sb(2,\"div\",2),core.yc(3,NgbTabset_ng_template_3_Template,1,1,\"ng-template\",3),core.Rb()),2&rf&&(core.Cb(\"nav nav-\"+ctx.type+(\"horizontal\"==ctx.orientation?\" \"+ctx.justifyClass:\" flex-column\")),core.Ab(1),core.kc(\"ngForOf\",ctx.tabs),core.Ab(2),core.kc(\"ngForOf\",ctx.tabs))},directives:[common.l,common.n,common.m],encapsulation:2}),NgbTabset})(),ng_bootstrap_NgbTabsetModule=(()=>{let NgbTabsetModule=class{};return NgbTabsetModule.ɵfac=function(t){return new(t||NgbTabsetModule)},NgbTabsetModule.ɵmod=core.Lb({type:NgbTabsetModule}),NgbTabsetModule.ɵinj=core.Kb({imports:[[common.b]]}),NgbTabsetModule})();class NgbTime{constructor(hour,minute,second){this.hour=toInteger(hour),this.minute=toInteger(minute),this.second=toInteger(second)}changeHour(step=1){this.updateHour((isNaN(this.hour)?0:this.hour)+step)}updateHour(hour){this.hour=isNumber(hour)?(hour<0?24+hour:hour)%24:NaN}changeMinute(step=1){this.updateMinute((isNaN(this.minute)?0:this.minute)+step)}updateMinute(minute){isNumber(minute)?(this.minute=minute%60<0?60+minute%60:minute%60,this.changeHour(Math.floor(minute/60))):this.minute=NaN}changeSecond(step=1){this.updateSecond((isNaN(this.second)?0:this.second)+step)}updateSecond(second){isNumber(second)?(this.second=second<0?60+second%60:second%60,this.changeMinute(Math.floor(second/60))):this.second=NaN}isValid(checkSecs=!0){return isNumber(this.hour)&&isNumber(this.minute)&&(!checkSecs||isNumber(this.second))}toString(){return`${this.hour||0}:${this.minute||0}:${this.second||0}`}}let ng_bootstrap_NgbTimepickerConfig=(()=>{let NgbTimepickerConfig=class{constructor(){this.meridian=!1,this.spinners=!0,this.seconds=!1,this.hourStep=1,this.minuteStep=1,this.secondStep=1,this.disabled=!1,this.readonlyInputs=!1,this.size=\"medium\"}};return NgbTimepickerConfig.ɵfac=function(t){return new(t||NgbTimepickerConfig)},NgbTimepickerConfig.ɵprov=Object(core.Jb)({factory:function(){return new NgbTimepickerConfig},token:NgbTimepickerConfig,providedIn:\"root\"}),NgbTimepickerConfig})();function NGB_DATEPICKER_TIME_ADAPTER_FACTORY(){return new ng_bootstrap_NgbTimeStructAdapter}let ng_bootstrap_NgbTimeAdapter=(()=>{let NgbTimeAdapter=class{};return NgbTimeAdapter.ɵfac=function(t){return new(t||NgbTimeAdapter)},NgbTimeAdapter.ɵprov=Object(core.Jb)({factory:NGB_DATEPICKER_TIME_ADAPTER_FACTORY,token:NgbTimeAdapter,providedIn:\"root\"}),NgbTimeAdapter})(),ng_bootstrap_NgbTimeStructAdapter=(()=>{let NgbTimeStructAdapter=class extends ng_bootstrap_NgbTimeAdapter{fromModel(time){return time&&isInteger(time.hour)&&isInteger(time.minute)?{hour:time.hour,minute:time.minute,second:isInteger(time.second)?time.second:null}:null}toModel(time){return time&&isInteger(time.hour)&&isInteger(time.minute)?{hour:time.hour,minute:time.minute,second:isInteger(time.second)?time.second:null}:null}};return NgbTimeStructAdapter.ɵfac=function(t){return ɵNgbTimeStructAdapter_BaseFactory(t||NgbTimeStructAdapter)},NgbTimeStructAdapter.ɵprov=core.Jb({token:NgbTimeStructAdapter,factory:function(t){return NgbTimeStructAdapter.ɵfac(t)}}),NgbTimeStructAdapter})(),ng_bootstrap_NgbTimepickerI18n=(()=>{let NgbTimepickerI18n=class{};return NgbTimepickerI18n.ɵfac=function(t){return new(t||NgbTimepickerI18n)},NgbTimepickerI18n.ɵprov=Object(core.Jb)({factory:function(){return locale=Object(core.Zb)(core.x),new ng_bootstrap_NgbTimepickerI18nDefault(locale);var locale},token:NgbTimepickerI18n,providedIn:\"root\"}),NgbTimepickerI18n})(),ng_bootstrap_NgbTimepickerI18nDefault=(()=>{let NgbTimepickerI18nDefault=class extends ng_bootstrap_NgbTimepickerI18n{constructor(locale){super(),this._periods=Object(common.v)(locale,common.e.Standalone,common.r.Narrow)}getMorningPeriod(){return this._periods[0]}getAfternoonPeriod(){return this._periods[1]}};return NgbTimepickerI18nDefault.ɵfac=function(t){return new(t||NgbTimepickerI18nDefault)(core.Zb(core.x))},NgbTimepickerI18nDefault.ɵprov=core.Jb({token:NgbTimepickerI18nDefault,factory:function(t){return NgbTimepickerI18nDefault.ɵfac(t)}}),NgbTimepickerI18nDefault=__decorate([__param(0,Object(core.r)(core.x))],NgbTimepickerI18nDefault),NgbTimepickerI18nDefault})();const FILTER_REGEX=/[^0-9]/g,NGB_TIMEPICKER_VALUE_ACCESSOR={provide:fesm2015_forms.i,useExisting:Object(core.V)(()=>ng_bootstrap_NgbTimepicker),multi:!0};let ng_bootstrap_NgbTimepicker=(()=>{let NgbTimepicker=class{constructor(_config,_ngbTimeAdapter,_cd,i18n){this._config=_config,this._ngbTimeAdapter=_ngbTimeAdapter,this._cd=_cd,this.i18n=i18n,this.onChange=_=>{},this.onTouched=()=>{},this.meridian=_config.meridian,this.spinners=_config.spinners,this.seconds=_config.seconds,this.hourStep=_config.hourStep,this.minuteStep=_config.minuteStep,this.secondStep=_config.secondStep,this.disabled=_config.disabled,this.readonlyInputs=_config.readonlyInputs,this.size=_config.size}set hourStep(step){this._hourStep=isInteger(step)?step:this._config.hourStep}get hourStep(){return this._hourStep}set minuteStep(step){this._minuteStep=isInteger(step)?step:this._config.minuteStep}get minuteStep(){return this._minuteStep}set secondStep(step){this._secondStep=isInteger(step)?step:this._config.secondStep}get secondStep(){return this._secondStep}writeValue(value){const structValue=this._ngbTimeAdapter.fromModel(value);this.model=structValue?new NgbTime(structValue.hour,structValue.minute,structValue.second):new NgbTime,this.seconds||structValue&&isNumber(structValue.second)||(this.model.second=0),this._cd.markForCheck()}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled}changeHour(step){this.model.changeHour(step),this.propagateModelChange()}changeMinute(step){this.model.changeMinute(step),this.propagateModelChange()}changeSecond(step){this.model.changeSecond(step),this.propagateModelChange()}updateHour(newVal){const isPM=this.model.hour>=12,enteredHour=toInteger(newVal);this.model.updateHour(this.meridian&&(isPM&&enteredHour<12||!isPM&&12===enteredHour)?enteredHour+12:enteredHour),this.propagateModelChange()}updateMinute(newVal){this.model.updateMinute(toInteger(newVal)),this.propagateModelChange()}updateSecond(newVal){this.model.updateSecond(toInteger(newVal)),this.propagateModelChange()}toggleMeridian(){this.meridian&&this.changeHour(12)}formatInput(input){input.value=input.value.replace(FILTER_REGEX,\"\")}formatHour(value){return isNumber(value)?padNumber(this.meridian?value%12==0?12:value%12:value%24):padNumber(NaN)}formatMinSec(value){return padNumber(isNumber(value)?value:NaN)}get isSmallSize(){return\"small\"===this.size}get isLargeSize(){return\"large\"===this.size}ngOnChanges(changes){changes.seconds&&!this.seconds&&this.model&&!isNumber(this.model.second)&&(this.model.second=0,this.propagateModelChange(!1))}propagateModelChange(touched=!0){touched&&this.onTouched(),this.model.isValid(this.seconds)?this.onChange(this._ngbTimeAdapter.toModel({hour:this.model.hour,minute:this.model.minute,second:this.model.second})):this.onChange(this._ngbTimeAdapter.toModel(null))}};return NgbTimepicker.ɵfac=function(t){return new(t||NgbTimepicker)(core.Nb(ng_bootstrap_NgbTimepickerConfig),core.Nb(ng_bootstrap_NgbTimeAdapter),core.Nb(core.i),core.Nb(ng_bootstrap_NgbTimepickerI18n))},NgbTimepicker.ɵcmp=core.Hb({type:NgbTimepicker,selectors:[[\"ngb-timepicker\"]],inputs:{meridian:\"meridian\",spinners:\"spinners\",seconds:\"seconds\",hourStep:\"hourStep\",minuteStep:\"minuteStep\",secondStep:\"secondStep\",readonlyInputs:\"readonlyInputs\",size:\"size\"},features:[core.zb([NGB_TIMEPICKER_VALUE_ACCESSOR]),core.yb],decls:16,vars:25,consts:function(){let i18n_54,i18n_56,i18n_58,i18n_60,i18n_62,i18n_64,i18n_66,i18n_68,i18n_70,i18n_72,i18n_74,i18n_76,i18n_78,i18n_80;return i18n_54=$localize`:@@ngb.timepicker.HH␟ce676ab1d6d98f85c836381cf100a4a91ef95a1f␟4043638465245303811:HH`,i18n_56=$localize`:@@ngb.timepicker.hours␟3bbce5fef7e1151da052a4e529453edb340e3912␟8070396816726827304:Hours`,i18n_58=$localize`:@@ngb.timepicker.MM␟72c8edf6a50068a05bde70991e36b1e881f4ca54␟1647282246509919852:MM`,i18n_60=$localize`:@@ngb.timepicker.minutes␟41e62daa962947c0d23ded0981975d1bddf0bf38␟5531237363767747080:Minutes`,i18n_62=$localize`:@@ngb.timepicker.increment-hours␟cb74bc1d625a6c1742f0d7d47306cf495780c218␟5939278348542933629:Increment hours`,i18n_64=$localize`:@@ngb.timepicker.decrement-hours␟147c7a19429da7d999e247d22e33fee370b1691b␟3651829882940481818:Decrement hours`,i18n_66=$localize`:@@ngb.timepicker.increment-minutes␟f5a4a3bc05e053f6732475d0e74875ec01c3a348␟180147720391025024:Increment minutes`,i18n_68=$localize`:@@ngb.timepicker.decrement-minutes␟c1a6899e529c096da5b660385d4e77fe1f7ad271␟7447789825403243588:Decrement minutes`,i18n_70=$localize`:@@ngb.timepicker.SS␟ebe38d36a40a2383c5fefa9b4608ffbda08bd4a3␟3628127143071124194:SS`,i18n_72=$localize`:@@ngb.timepicker.seconds␟4f2ed9e71a7c981db3e50ae2fedb28aff2ec4e6c␟8874012390997067175:Seconds`,i18n_74=$localize`:@@ngb.timepicker.increment-seconds␟912322ecee7d659d04dcf494a70e22e49d334b26␟5364772110539092174:Increment seconds`,i18n_76=$localize`:@@ngb.timepicker.decrement-seconds␟5db47ac104294243a70eb9124fbea9d0004ddf69␟753633511487974857:Decrement seconds`,i18n_78=$localize`:@@ngb.timepicker.PM␟8d6e691e10306c1b34c6b26805151aaea320ef7f␟3564199131264287502:${\"�0�\"}:INTERPOLATION:`,i18n_80=$localize`:@@ngb.timepicker.AM␟69a1f176a93998876952adac57c3bc3863b6105e␟4592818992509942761:${\"�0�\"}:INTERPOLATION:`,[[3,\"disabled\"],[1,\"ngb-tp\"],[1,\"ngb-tp-input-container\",\"ngb-tp-hour\"],[\"tabindex\",\"-1\",\"type\",\"button\",\"class\",\"btn btn-link\",3,\"btn-sm\",\"btn-lg\",\"disabled\",\"click\",4,\"ngIf\"],[\"type\",\"text\",\"maxlength\",\"2\",\"inputmode\",\"numeric\",\"placeholder\",i18n_54,\"aria-label\",i18n_56,1,\"ngb-tp-input\",\"form-control\",3,\"value\",\"readOnly\",\"disabled\",\"change\",\"input\",\"keydown.ArrowUp\",\"keydown.ArrowDown\"],[1,\"ngb-tp-spacer\"],[1,\"ngb-tp-input-container\",\"ngb-tp-minute\"],[\"type\",\"text\",\"maxlength\",\"2\",\"inputmode\",\"numeric\",\"placeholder\",i18n_58,\"aria-label\",i18n_60,1,\"ngb-tp-input\",\"form-control\",3,\"value\",\"readOnly\",\"disabled\",\"change\",\"input\",\"keydown.ArrowUp\",\"keydown.ArrowDown\"],[\"class\",\"ngb-tp-spacer\",4,\"ngIf\"],[\"class\",\"ngb-tp-input-container ngb-tp-second\",4,\"ngIf\"],[\"class\",\"ngb-tp-meridian\",4,\"ngIf\"],[\"tabindex\",\"-1\",\"type\",\"button\",1,\"btn\",\"btn-link\",3,\"disabled\",\"click\"],[1,\"chevron\",\"ngb-tp-chevron\"],[1,\"sr-only\"],i18n_62,[1,\"chevron\",\"ngb-tp-chevron\",\"bottom\"],i18n_64,i18n_66,i18n_68,[1,\"ngb-tp-input-container\",\"ngb-tp-second\"],[\"type\",\"text\",\"maxlength\",\"2\",\"inputmode\",\"numeric\",\"placeholder\",i18n_70,\"aria-label\",i18n_72,1,\"ngb-tp-input\",\"form-control\",3,\"value\",\"readOnly\",\"disabled\",\"change\",\"input\",\"keydown.ArrowUp\",\"keydown.ArrowDown\"],i18n_74,i18n_76,[1,\"ngb-tp-meridian\"],[\"type\",\"button\",1,\"btn\",\"btn-outline-primary\",3,\"disabled\",\"click\"],[4,\"ngIf\",\"ngIfElse\"],[\"am\",\"\"],i18n_78,i18n_80]},template:function(rf,ctx){1&rf&&(core.Sb(0,\"fieldset\",0),core.Sb(1,\"div\",1),core.Sb(2,\"div\",2),core.yc(3,NgbTimepicker_button_3_Template,4,7,\"button\",3),core.Sb(4,\"input\",4),core.cc(\"change\",function($event){return ctx.updateHour($event.target.value)})(\"input\",function($event){return ctx.formatInput($event.target)})(\"keydown.ArrowUp\",function($event){return ctx.changeHour(ctx.hourStep),$event.preventDefault()})(\"keydown.ArrowDown\",function($event){return ctx.changeHour(-ctx.hourStep),$event.preventDefault()}),core.Rb(),core.yc(5,NgbTimepicker_button_5_Template,4,7,\"button\",3),core.Rb(),core.Sb(6,\"div\",5),core.Ac(7,\":\"),core.Rb(),core.Sb(8,\"div\",6),core.yc(9,NgbTimepicker_button_9_Template,4,7,\"button\",3),core.Sb(10,\"input\",7),core.cc(\"change\",function($event){return ctx.updateMinute($event.target.value)})(\"input\",function($event){return ctx.formatInput($event.target)})(\"keydown.ArrowUp\",function($event){return ctx.changeMinute(ctx.minuteStep),$event.preventDefault()})(\"keydown.ArrowDown\",function($event){return ctx.changeMinute(-ctx.minuteStep),$event.preventDefault()}),core.Rb(),core.yc(11,NgbTimepicker_button_11_Template,4,7,\"button\",3),core.Rb(),core.yc(12,NgbTimepicker_div_12_Template,2,0,\"div\",8),core.yc(13,NgbTimepicker_div_13_Template,4,9,\"div\",9),core.yc(14,NgbTimepicker_div_14_Template,1,0,\"div\",8),core.yc(15,NgbTimepicker_div_15_Template,5,9,\"div\",10),core.Rb(),core.Rb()),2&rf&&(core.Fb(\"disabled\",ctx.disabled),core.kc(\"disabled\",ctx.disabled),core.Ab(3),core.kc(\"ngIf\",ctx.spinners),core.Ab(1),core.Fb(\"form-control-sm\",ctx.isSmallSize)(\"form-control-lg\",ctx.isLargeSize),core.kc(\"value\",ctx.formatHour(null==ctx.model?null:ctx.model.hour))(\"readOnly\",ctx.readonlyInputs)(\"disabled\",ctx.disabled),core.Ab(1),core.kc(\"ngIf\",ctx.spinners),core.Ab(4),core.kc(\"ngIf\",ctx.spinners),core.Ab(1),core.Fb(\"form-control-sm\",ctx.isSmallSize)(\"form-control-lg\",ctx.isLargeSize),core.kc(\"value\",ctx.formatMinSec(null==ctx.model?null:ctx.model.minute))(\"readOnly\",ctx.readonlyInputs)(\"disabled\",ctx.disabled),core.Ab(1),core.kc(\"ngIf\",ctx.spinners),core.Ab(1),core.kc(\"ngIf\",ctx.seconds),core.Ab(1),core.kc(\"ngIf\",ctx.seconds),core.Ab(1),core.kc(\"ngIf\",ctx.meridian),core.Ab(1),core.kc(\"ngIf\",ctx.meridian))},directives:[common.m],styles:['ngb-timepicker{font-size:1rem}.ngb-tp{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron::before{border-style:solid;border-width:.29em .29em 0 0;content:\"\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;-webkit-transform:rotate(135deg);transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}'],encapsulation:2}),NgbTimepicker})(),ng_bootstrap_NgbTimepickerModule=(()=>{let NgbTimepickerModule=class{};return NgbTimepickerModule.ɵfac=function(t){return new(t||NgbTimepickerModule)},NgbTimepickerModule.ɵmod=core.Lb({type:NgbTimepickerModule}),NgbTimepickerModule.ɵinj=core.Kb({imports:[[common.b]]}),NgbTimepickerModule})(),ng_bootstrap_NgbToastModule=(()=>{let NgbToastModule=class{};return NgbToastModule.ɵfac=function(t){return new(t||NgbToastModule)},NgbToastModule.ɵmod=core.Lb({type:NgbToastModule}),NgbToastModule.ɵinj=core.Kb({imports:[[common.b]]}),NgbToastModule})(),ng_bootstrap_NgbTooltipConfig=(()=>{let NgbTooltipConfig=class{constructor(){this.autoClose=!0,this.placement=\"auto\",this.triggers=\"hover focus\",this.disableTooltip=!1,this.openDelay=0,this.closeDelay=0}};return NgbTooltipConfig.ɵfac=function(t){return new(t||NgbTooltipConfig)},NgbTooltipConfig.ɵprov=Object(core.Jb)({factory:function(){return new NgbTooltipConfig},token:NgbTooltipConfig,providedIn:\"root\"}),NgbTooltipConfig})(),nextId$5=0,ng_bootstrap_NgbTooltipWindow=(()=>{let NgbTooltipWindow=class{};return NgbTooltipWindow.ɵfac=function(t){return new(t||NgbTooltipWindow)},NgbTooltipWindow.ɵcmp=core.Hb({type:NgbTooltipWindow,selectors:[[\"ngb-tooltip-window\"]],hostAttrs:[\"role\",\"tooltip\"],hostVars:3,hostBindings:function(rf,ctx){2&rf&&(core.Vb(\"id\",ctx.id),core.Cb(\"tooltip show\"+(ctx.tooltipClass?\" \"+ctx.tooltipClass:\"\")))},inputs:{id:\"id\",tooltipClass:\"tooltipClass\"},ngContentSelectors:_c3,decls:3,vars:0,consts:[[1,\"arrow\"],[1,\"tooltip-inner\"]],template:function(rf,ctx){1&rf&&(core.jc(),core.Ob(0,\"div\",0),core.Sb(1,\"div\",1),core.ic(2),core.Rb())},styles:[\"ngb-tooltip-window.bs-tooltip-bottom .arrow,ngb-tooltip-window.bs-tooltip-top .arrow{left:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-bottom-left .arrow,ngb-tooltip-window.bs-tooltip-top-left .arrow{left:1em}ngb-tooltip-window.bs-tooltip-bottom-right .arrow,ngb-tooltip-window.bs-tooltip-top-right .arrow{left:auto;right:.8rem}ngb-tooltip-window.bs-tooltip-left .arrow,ngb-tooltip-window.bs-tooltip-right .arrow{top:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-left-top .arrow,ngb-tooltip-window.bs-tooltip-right-top .arrow{top:.4rem}ngb-tooltip-window.bs-tooltip-left-bottom .arrow,ngb-tooltip-window.bs-tooltip-right-bottom .arrow{top:auto;bottom:.4rem}\"],encapsulation:2,changeDetection:0}),NgbTooltipWindow})(),ng_bootstrap_NgbTooltip=(()=>{let NgbTooltip=class{constructor(_elementRef,_renderer,injector,componentFactoryResolver,viewContainerRef,config,_ngZone,_document,_changeDetector,applicationRef){this._elementRef=_elementRef,this._renderer=_renderer,this._ngZone=_ngZone,this._document=_document,this._changeDetector=_changeDetector,this.shown=new core.o,this.hidden=new core.o,this._ngbTooltipWindowId=\"ngb-tooltip-\"+nextId$5++,this._windowRef=null,this.autoClose=config.autoClose,this.placement=config.placement,this.triggers=config.triggers,this.container=config.container,this.disableTooltip=config.disableTooltip,this.tooltipClass=config.tooltipClass,this.openDelay=config.openDelay,this.closeDelay=config.closeDelay,this._popupService=new ng_bootstrap_PopupService(ng_bootstrap_NgbTooltipWindow,injector,viewContainerRef,_renderer,componentFactoryResolver,applicationRef),this._zoneSubscription=_ngZone.onStable.subscribe(()=>{this._windowRef&&positionElements(this._elementRef.nativeElement,this._windowRef.location.nativeElement,this.placement,\"body\"===this.container,\"bs-tooltip\")})}set ngbTooltip(value){this._ngbTooltip=value,!value&&this._windowRef&&this.close()}get ngbTooltip(){return this._ngbTooltip}open(context){this._windowRef||!this._ngbTooltip||this.disableTooltip||(this._windowRef=this._popupService.open(this._ngbTooltip,context),this._windowRef.instance.tooltipClass=this.tooltipClass,this._windowRef.instance.id=this._ngbTooltipWindowId,this._renderer.setAttribute(this._elementRef.nativeElement,\"aria-describedby\",this._ngbTooltipWindowId),\"body\"===this.container&&this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement),this._windowRef.changeDetectorRef.detectChanges(),this._windowRef.changeDetectorRef.markForCheck(),ngbAutoClose(this._ngZone,this._document,this.autoClose,()=>this.close(),this.hidden,[this._windowRef.location.nativeElement]),this.shown.emit())}close(){null!=this._windowRef&&(this._renderer.removeAttribute(this._elementRef.nativeElement,\"aria-describedby\"),this._popupService.close(),this._windowRef=null,this.hidden.emit(),this._changeDetector.markForCheck())}toggle(){this._windowRef?this.close():this.open()}isOpen(){return null!=this._windowRef}ngOnInit(){this._unregisterListenersFn=listenToTriggers(this._renderer,this._elementRef.nativeElement,this.triggers,this.isOpen.bind(this),this.open.bind(this),this.close.bind(this),+this.openDelay,+this.closeDelay)}ngOnChanges({tooltipClass:tooltipClass}){tooltipClass&&this.isOpen()&&(this._windowRef.instance.tooltipClass=tooltipClass.currentValue)}ngOnDestroy(){this.close(),this._unregisterListenersFn&&this._unregisterListenersFn(),this._zoneSubscription.unsubscribe()}};return NgbTooltip.ɵfac=function(t){return new(t||NgbTooltip)(core.Nb(core.m),core.Nb(core.G),core.Nb(core.u),core.Nb(core.k),core.Nb(core.R),core.Nb(ng_bootstrap_NgbTooltipConfig),core.Nb(core.C),core.Nb(common.c),core.Nb(core.i),core.Nb(core.g))},NgbTooltip.ɵdir=core.Ib({type:NgbTooltip,selectors:[[\"\",\"ngbTooltip\",\"\"]],inputs:{autoClose:\"autoClose\",placement:\"placement\",triggers:\"triggers\",container:\"container\",disableTooltip:\"disableTooltip\",tooltipClass:\"tooltipClass\",openDelay:\"openDelay\",closeDelay:\"closeDelay\",ngbTooltip:\"ngbTooltip\"},outputs:{shown:\"shown\",hidden:\"hidden\"},exportAs:[\"ngbTooltip\"],features:[core.yb]}),NgbTooltip=__decorate([__param(7,Object(core.r)(common.c))],NgbTooltip),NgbTooltip})(),ng_bootstrap_NgbTooltipModule=(()=>{let NgbTooltipModule=class{};return NgbTooltipModule.ɵfac=function(t){return new(t||NgbTooltipModule)},NgbTooltipModule.ɵmod=core.Lb({type:NgbTooltipModule}),NgbTooltipModule.ɵinj=core.Kb({}),NgbTooltipModule})(),ng_bootstrap_NgbHighlight=(()=>{let NgbHighlight=class{constructor(){this.highlightClass=\"ngb-highlight\"}ngOnChanges(changes){const result=ng_bootstrap_toString(this.result),escapedTerms=(Array.isArray(this.term)?this.term:[this.term]).map(term=>ng_bootstrap_toString(term).replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g,\"\\\\$&\")).filter(term=>term);this.parts=escapedTerms.length?result.split(new RegExp(`(${escapedTerms.join(\"|\")})`,\"gmi\")):[result]}};return NgbHighlight.ɵfac=function(t){return new(t||NgbHighlight)},NgbHighlight.ɵcmp=core.Hb({type:NgbHighlight,selectors:[[\"ngb-highlight\"]],inputs:{highlightClass:\"highlightClass\",result:\"result\",term:\"term\"},features:[core.yb],decls:1,vars:1,consts:[[\"ngFor\",\"\",3,\"ngForOf\"],[3,\"class\",4,\"ngIf\",\"ngIfElse\"],[\"even\",\"\"]],template:function(rf,ctx){1&rf&&core.yc(0,NgbHighlight_ng_template_0_Template,3,2,\"ng-template\",0),2&rf&&core.kc(\"ngForOf\",ctx.parts)},directives:[common.l,common.m],styles:[\".ngb-highlight{font-weight:700}\"],encapsulation:2,changeDetection:0}),NgbHighlight})(),ng_bootstrap_NgbTypeaheadWindow=(()=>{let NgbTypeaheadWindow=class{constructor(){this.activeIdx=0,this.focusFirst=!0,this.formatter=ng_bootstrap_toString,this.selectEvent=new core.o,this.activeChangeEvent=new core.o}hasActive(){return this.activeIdx>-1&&this.activeIdx<this.results.length}getActive(){return this.results[this.activeIdx]}markActive(activeIdx){this.activeIdx=activeIdx,this._activeChanged()}next(){this.activeIdx===this.results.length-1?this.activeIdx=this.focusFirst?(this.activeIdx+1)%this.results.length:-1:this.activeIdx++,this._activeChanged()}prev(){this.activeIdx<0?this.activeIdx=this.results.length-1:0===this.activeIdx?this.activeIdx=this.focusFirst?this.results.length-1:-1:this.activeIdx--,this._activeChanged()}resetActive(){this.activeIdx=this.focusFirst?0:-1,this._activeChanged()}select(item){this.selectEvent.emit(item)}ngOnInit(){this.resetActive()}_activeChanged(){this.activeChangeEvent.emit(this.activeIdx>=0?this.id+\"-\"+this.activeIdx:void 0)}};return NgbTypeaheadWindow.ɵfac=function(t){return new(t||NgbTypeaheadWindow)},NgbTypeaheadWindow.ɵcmp=core.Hb({type:NgbTypeaheadWindow,selectors:[[\"ngb-typeahead-window\"]],hostAttrs:[\"role\",\"listbox\",1,\"dropdown-menu\",\"show\"],hostVars:1,hostBindings:function(rf,ctx){1&rf&&core.cc(\"mousedown\",function($event){return $event.preventDefault()}),2&rf&&core.Vb(\"id\",ctx.id)},inputs:{focusFirst:\"focusFirst\",formatter:\"formatter\",id:\"id\",results:\"results\",term:\"term\",resultTemplate:\"resultTemplate\"},outputs:{selectEvent:\"select\",activeChangeEvent:\"activeChange\"},exportAs:[\"ngbTypeaheadWindow\"],decls:3,vars:1,consts:[[\"rt\",\"\"],[\"ngFor\",\"\",3,\"ngForOf\"],[3,\"result\",\"term\"],[\"type\",\"button\",\"role\",\"option\",1,\"dropdown-item\",3,\"id\",\"mouseenter\",\"click\"],[3,\"ngTemplateOutlet\",\"ngTemplateOutletContext\"]],template:function(rf,ctx){1&rf&&(core.yc(0,NgbTypeaheadWindow_ng_template_0_Template,1,2,\"ng-template\",null,0,core.zc),core.yc(2,NgbTypeaheadWindow_ng_template_2_Template,2,9,\"ng-template\",1)),2&rf&&(core.Ab(2),core.kc(\"ngForOf\",ctx.results))},directives:[common.l,ng_bootstrap_NgbHighlight,common.n],encapsulation:2}),NgbTypeaheadWindow})();const ARIA_LIVE_DELAY=new core.t(\"live announcer delay\",{providedIn:\"root\",factory:function(){return 100}});function getLiveElement(document,lazyCreate=!1){let element=document.body.querySelector(\"#ngb-live\");return null==element&&lazyCreate&&(element=document.createElement(\"div\"),element.setAttribute(\"id\",\"ngb-live\"),element.setAttribute(\"aria-live\",\"polite\"),element.setAttribute(\"aria-atomic\",\"true\"),element.classList.add(\"sr-only\"),document.body.appendChild(element)),element}let ng_bootstrap_Live=(()=>{let Live=class{constructor(_document,_delay){this._document=_document,this._delay=_delay}ngOnDestroy(){const element=getLiveElement(this._document);element&&element.parentElement.removeChild(element)}say(message){const element=getLiveElement(this._document,!0),delay=this._delay;if(null!=element){element.textContent=\"\";const setText=()=>element.textContent=message;null===delay?setText():setTimeout(setText,delay)}}};return Live.ɵfac=function(t){return new(t||Live)(core.Zb(common.c),core.Zb(ARIA_LIVE_DELAY))},Live.ɵprov=Object(core.Jb)({factory:function(){return new Live(Object(core.Zb)(common.c),Object(core.Zb)(ARIA_LIVE_DELAY))},token:Live,providedIn:\"root\"}),Live=__decorate([__param(0,Object(core.r)(common.c)),__param(1,Object(core.r)(ARIA_LIVE_DELAY))],Live),Live})(),ng_bootstrap_NgbTypeaheadConfig=(()=>{let NgbTypeaheadConfig=class{constructor(){this.editable=!0,this.focusFirst=!0,this.showHint=!1,this.placement=[\"bottom-left\",\"bottom-right\",\"top-left\",\"top-right\"]}};return NgbTypeaheadConfig.ɵfac=function(t){return new(t||NgbTypeaheadConfig)},NgbTypeaheadConfig.ɵprov=Object(core.Jb)({factory:function(){return new NgbTypeaheadConfig},token:NgbTypeaheadConfig,providedIn:\"root\"}),NgbTypeaheadConfig})();const NGB_TYPEAHEAD_VALUE_ACCESSOR={provide:fesm2015_forms.i,useExisting:Object(core.V)(()=>ng_bootstrap_NgbTypeahead),multi:!0};let nextWindowId=0,ng_bootstrap_NgbTypeahead=(()=>{let NgbTypeahead=class{constructor(_elementRef,viewContainerRef,_renderer,injector,componentFactoryResolver,config,ngZone,_live,_document,_ngZone,_changeDetector,applicationRef){this._elementRef=_elementRef,this._renderer=_renderer,this._live=_live,this._document=_document,this._ngZone=_ngZone,this._changeDetector=_changeDetector,this._subscription=null,this._closed$=new Subject.a,this._inputValueBackup=null,this._windowRef=null,this.autocomplete=\"off\",this.placement=\"bottom-left\",this.selectItem=new core.o,this.activeDescendant=null,this.popupId=\"ngb-typeahead-\"+nextWindowId++,this._onTouched=()=>{},this._onChange=_=>{},this.container=config.container,this.editable=config.editable,this.focusFirst=config.focusFirst,this.showHint=config.showHint,this.placement=config.placement,this._valueChanges=fromEvent(_elementRef.nativeElement,\"input\").pipe(Object(map.a)($event=>$event.target.value)),this._resubscribeTypeahead=new BehaviorSubject.a(null),this._popupService=new ng_bootstrap_PopupService(ng_bootstrap_NgbTypeaheadWindow,injector,viewContainerRef,_renderer,componentFactoryResolver,applicationRef),this._zoneSubscription=ngZone.onStable.subscribe(()=>{this.isPopupOpen()&&positionElements(this._elementRef.nativeElement,this._windowRef.location.nativeElement,this.placement,\"body\"===this.container)})}ngOnInit(){const results$=this._valueChanges.pipe(Object(tap.a)(value=>{this._inputValueBackup=this.showHint?value:null,this._onChange(this.editable?value:void 0)})).pipe(this.ngbTypeahead),userInput$=this._resubscribeTypeahead.pipe(Object(switchMap.a)(()=>results$));this._subscription=this._subscribeToUserInput(userInput$)}ngOnDestroy(){this._closePopup(),this._unsubscribeFromUserInput(),this._zoneSubscription.unsubscribe()}registerOnChange(fn){this._onChange=fn}registerOnTouched(fn){this._onTouched=fn}writeValue(value){this._writeInputValue(this._formatItemForInput(value)),this.showHint&&(this._inputValueBackup=value)}setDisabledState(isDisabled){this._renderer.setProperty(this._elementRef.nativeElement,\"disabled\",isDisabled)}dismissPopup(){this.isPopupOpen()&&(this._resubscribeTypeahead.next(null),this._closePopup(),this.showHint&&null!==this._inputValueBackup&&this._writeInputValue(this._inputValueBackup),this._changeDetector.markForCheck())}isPopupOpen(){return null!=this._windowRef}handleBlur(){this._resubscribeTypeahead.next(null),this._onTouched()}handleKeyDown(event){if(this.isPopupOpen())switch(event.which){case Key.ArrowDown:event.preventDefault(),this._windowRef.instance.next(),this._showHint();break;case Key.ArrowUp:event.preventDefault(),this._windowRef.instance.prev(),this._showHint();break;case Key.Enter:case Key.Tab:const result=this._windowRef.instance.getActive();isDefined(result)&&(event.preventDefault(),event.stopPropagation(),this._selectResult(result)),this._closePopup()}}_openPopup(){this.isPopupOpen()||(this._inputValueBackup=this._elementRef.nativeElement.value,this._windowRef=this._popupService.open(),this._windowRef.instance.id=this.popupId,this._windowRef.instance.selectEvent.subscribe(result=>this._selectResultClosePopup(result)),this._windowRef.instance.activeChangeEvent.subscribe(activeId=>this.activeDescendant=activeId),\"body\"===this.container&&this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement),this._changeDetector.markForCheck(),ngbAutoClose(this._ngZone,this._document,\"outside\",()=>this.dismissPopup(),this._closed$,[this._elementRef.nativeElement,this._windowRef.location.nativeElement]))}_closePopup(){this._closed$.next(),this._popupService.close(),this._windowRef=null,this.activeDescendant=null}_selectResult(result){let defaultPrevented=!1;this.selectItem.emit({item:result,preventDefault:()=>{defaultPrevented=!0}}),this._resubscribeTypeahead.next(null),defaultPrevented||(this.writeValue(result),this._onChange(result))}_selectResultClosePopup(result){this._selectResult(result),this._closePopup()}_showHint(){var _a;if(this.showHint&&(null===(_a=this._windowRef)||void 0===_a?void 0:_a.instance.hasActive())&&null!=this._inputValueBackup){const userInputLowerCase=this._inputValueBackup.toLowerCase(),formattedVal=this._formatItemForInput(this._windowRef.instance.getActive());userInputLowerCase===formattedVal.substr(0,this._inputValueBackup.length).toLowerCase()?(this._writeInputValue(this._inputValueBackup+formattedVal.substr(this._inputValueBackup.length)),this._elementRef.nativeElement.setSelectionRange.apply(this._elementRef.nativeElement,[this._inputValueBackup.length,formattedVal.length])):this._writeInputValue(formattedVal)}}_formatItemForInput(item){return null!=item&&this.inputFormatter?this.inputFormatter(item):ng_bootstrap_toString(item)}_writeInputValue(value){this._renderer.setProperty(this._elementRef.nativeElement,\"value\",ng_bootstrap_toString(value))}_subscribeToUserInput(userInput$){return userInput$.subscribe(results=>{results&&0!==results.length?(this._openPopup(),this._windowRef.instance.focusFirst=this.focusFirst,this._windowRef.instance.results=results,this._windowRef.instance.term=this._elementRef.nativeElement.value,this.resultFormatter&&(this._windowRef.instance.formatter=this.resultFormatter),this.resultTemplate&&(this._windowRef.instance.resultTemplate=this.resultTemplate),this._windowRef.instance.resetActive(),this._windowRef.changeDetectorRef.detectChanges(),this._showHint()):this._closePopup();const count=results?results.length:0;this._live.say(0===count?\"No results available\":`${count} result${1===count?\"\":\"s\"} available`)})}_unsubscribeFromUserInput(){this._subscription&&this._subscription.unsubscribe(),this._subscription=null}};return NgbTypeahead.ɵfac=function(t){return new(t||NgbTypeahead)(core.Nb(core.m),core.Nb(core.R),core.Nb(core.G),core.Nb(core.u),core.Nb(core.k),core.Nb(ng_bootstrap_NgbTypeaheadConfig),core.Nb(core.C),core.Nb(ng_bootstrap_Live),core.Nb(common.c),core.Nb(core.C),core.Nb(core.i),core.Nb(core.g))},NgbTypeahead.ɵdir=core.Ib({type:NgbTypeahead,selectors:[[\"input\",\"ngbTypeahead\",\"\"]],hostAttrs:[\"autocapitalize\",\"off\",\"autocorrect\",\"off\",\"role\",\"combobox\",\"aria-multiline\",\"false\"],hostVars:7,hostBindings:function(rf,ctx){1&rf&&core.cc(\"blur\",function(){return ctx.handleBlur()})(\"keydown\",function($event){return ctx.handleKeyDown($event)}),2&rf&&(core.Vb(\"autocomplete\",ctx.autocomplete),core.Bb(\"aria-autocomplete\",ctx.showHint?\"both\":\"list\")(\"aria-activedescendant\",ctx.activeDescendant)(\"aria-owns\",ctx.isPopupOpen()?ctx.popupId:null)(\"aria-expanded\",ctx.isPopupOpen()),core.Fb(\"open\",ctx.isPopupOpen()))},inputs:{autocomplete:\"autocomplete\",placement:\"placement\",container:\"container\",editable:\"editable\",focusFirst:\"focusFirst\",showHint:\"showHint\",inputFormatter:\"inputFormatter\",ngbTypeahead:\"ngbTypeahead\",resultFormatter:\"resultFormatter\",resultTemplate:\"resultTemplate\"},outputs:{selectItem:\"selectItem\"},exportAs:[\"ngbTypeahead\"],features:[core.zb([NGB_TYPEAHEAD_VALUE_ACCESSOR])]}),NgbTypeahead=__decorate([__param(8,Object(core.r)(common.c))],NgbTypeahead),NgbTypeahead})(),ng_bootstrap_NgbTypeaheadModule=(()=>{let NgbTypeaheadModule=class{};return NgbTypeaheadModule.ɵfac=function(t){return new(t||NgbTypeaheadModule)},NgbTypeaheadModule.ɵmod=core.Lb({type:NgbTypeaheadModule}),NgbTypeaheadModule.ɵinj=core.Kb({imports:[[common.b]]}),NgbTypeaheadModule})();const NGB_MODULES=[ng_bootstrap_NgbAccordionModule,ng_bootstrap_NgbAlertModule,ng_bootstrap_NgbButtonsModule,ng_bootstrap_NgbCarouselModule,ng_bootstrap_NgbCollapseModule,ng_bootstrap_NgbDatepickerModule,ng_bootstrap_NgbDropdownModule,ng_bootstrap_NgbModalModule,ng_bootstrap_NgbNavModule,ng_bootstrap_NgbPaginationModule,ng_bootstrap_NgbPopoverModule,ng_bootstrap_NgbProgressbarModule,ng_bootstrap_NgbRatingModule,ng_bootstrap_NgbTimepickerModule,ng_bootstrap_NgbToastModule,ng_bootstrap_NgbTooltipModule,ng_bootstrap_NgbTypeaheadModule,ng_bootstrap_NgbTabsetModule];let ng_bootstrap_NgbModule=(()=>{let NgbModule=class{};return NgbModule.ɵfac=function(t){return new(t||NgbModule)},NgbModule.ɵmod=core.Lb({type:NgbModule}),NgbModule.ɵinj=core.Kb({imports:[NGB_MODULES,ng_bootstrap_NgbAccordionModule,ng_bootstrap_NgbAlertModule,ng_bootstrap_NgbButtonsModule,ng_bootstrap_NgbCarouselModule,ng_bootstrap_NgbCollapseModule,ng_bootstrap_NgbDatepickerModule,ng_bootstrap_NgbDropdownModule,ng_bootstrap_NgbModalModule,ng_bootstrap_NgbNavModule,ng_bootstrap_NgbPaginationModule,ng_bootstrap_NgbPopoverModule,ng_bootstrap_NgbProgressbarModule,ng_bootstrap_NgbRatingModule,ng_bootstrap_NgbTimepickerModule,ng_bootstrap_NgbToastModule,ng_bootstrap_NgbTooltipModule,ng_bootstrap_NgbTypeaheadModule,ng_bootstrap_NgbTabsetModule]}),NgbModule})();const ɵNgbCalendarGregorian_BaseFactory=core.Ub(ng_bootstrap_NgbCalendarGregorian),ɵNgbDateStructAdapter_BaseFactory=core.Ub(ng_bootstrap_NgbDateStructAdapter),ɵNgbDateISOParserFormatter_BaseFactory=core.Ub(ng_bootstrap_NgbDateISOParserFormatter),ɵNgbInputDatepickerConfig_BaseFactory=core.Ub(ng_bootstrap_NgbInputDatepickerConfig),ɵNgbTimeStructAdapter_BaseFactory=core.Ub(ng_bootstrap_NgbTimeStructAdapter)},\"3Pt+\":function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return CheckboxControlValueAccessor}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return DefaultValueAccessor}),__webpack_require__.d(__webpack_exports__,\"c\",function(){return FormBuilder}),__webpack_require__.d(__webpack_exports__,\"d\",function(){return FormControlName}),__webpack_require__.d(__webpack_exports__,\"e\",function(){return FormGroupDirective}),__webpack_require__.d(__webpack_exports__,\"f\",function(){return FormsModule}),__webpack_require__.d(__webpack_exports__,\"g\",function(){return MaxLengthValidator}),__webpack_require__.d(__webpack_exports__,\"h\",function(){return NG_VALIDATORS}),__webpack_require__.d(__webpack_exports__,\"i\",function(){return NG_VALUE_ACCESSOR}),__webpack_require__.d(__webpack_exports__,\"j\",function(){return NgControlStatus}),__webpack_require__.d(__webpack_exports__,\"k\",function(){return NgControlStatusGroup}),__webpack_require__.d(__webpack_exports__,\"l\",function(){return NgForm}),__webpack_require__.d(__webpack_exports__,\"m\",function(){return NgModel}),__webpack_require__.d(__webpack_exports__,\"n\",function(){return NgSelectOption}),__webpack_require__.d(__webpack_exports__,\"o\",function(){return NumberValueAccessor}),__webpack_require__.d(__webpack_exports__,\"p\",function(){return ReactiveFormsModule}),__webpack_require__.d(__webpack_exports__,\"q\",function(){return SelectControlValueAccessor}),__webpack_require__.d(__webpack_exports__,\"r\",function(){return ɵNgNoValidate}),__webpack_require__.d(__webpack_exports__,\"s\",function(){return ɵNgSelectMultipleOption});var _angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(\"fXoL\"),_angular_common__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(\"ofXK\"),rxjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(\"Cfvw\"),rxjs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(\"cp0P\"),rxjs_operators__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(\"lJxs\");class BuiltInControlValueAccessor{}const NG_VALUE_ACCESSOR=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.t(\"NgValueAccessor\"),CHECKBOX_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.V)(()=>CheckboxControlValueAccessor),multi:!0};let CheckboxControlValueAccessor=(()=>{class CheckboxControlValueAccessor extends BuiltInControlValueAccessor{constructor(_renderer,_elementRef){super(),this._renderer=_renderer,this._elementRef=_elementRef,this.onChange=_=>{},this.onTouched=()=>{}}writeValue(value){this._renderer.setProperty(this._elementRef.nativeElement,\"checked\",value)}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this._renderer.setProperty(this._elementRef.nativeElement,\"disabled\",isDisabled)}}return CheckboxControlValueAccessor.ɵfac=function(t){return new(t||CheckboxControlValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.G),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.m))},CheckboxControlValueAccessor.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ib({type:CheckboxControlValueAccessor,selectors:[[\"input\",\"type\",\"checkbox\",\"formControlName\",\"\"],[\"input\",\"type\",\"checkbox\",\"formControl\",\"\"],[\"input\",\"type\",\"checkbox\",\"ngModel\",\"\"]],hostBindings:function(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__.cc(\"change\",function($event){return ctx.onChange($event.target.checked)})(\"blur\",function(){return ctx.onTouched()})},features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__.zb([CHECKBOX_VALUE_ACCESSOR]),_angular_core__WEBPACK_IMPORTED_MODULE_0__.xb]}),CheckboxControlValueAccessor})();const DEFAULT_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.V)(()=>DefaultValueAccessor),multi:!0},COMPOSITION_BUFFER_MODE=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.t(\"CompositionEventMode\");let DefaultValueAccessor=(()=>{class DefaultValueAccessor{constructor(_renderer,_elementRef,_compositionMode){this._renderer=_renderer,this._elementRef=_elementRef,this._compositionMode=_compositionMode,this.onChange=_=>{},this.onTouched=()=>{},this._composing=!1,null==this._compositionMode&&(this._compositionMode=!function(){const userAgent=Object(_angular_common__WEBPACK_IMPORTED_MODULE_1__.A)()?Object(_angular_common__WEBPACK_IMPORTED_MODULE_1__.A)().getUserAgent():\"\";return/android (\\d+)/.test(userAgent.toLowerCase())}())}writeValue(value){this._renderer.setProperty(this._elementRef.nativeElement,\"value\",null==value?\"\":value)}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this._renderer.setProperty(this._elementRef.nativeElement,\"disabled\",isDisabled)}_handleInput(value){(!this._compositionMode||this._compositionMode&&!this._composing)&&this.onChange(value)}_compositionStart(){this._composing=!0}_compositionEnd(value){this._composing=!1,this._compositionMode&&this.onChange(value)}}return DefaultValueAccessor.ɵfac=function(t){return new(t||DefaultValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.G),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.m),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(COMPOSITION_BUFFER_MODE,8))},DefaultValueAccessor.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ib({type:DefaultValueAccessor,selectors:[[\"input\",\"formControlName\",\"\",3,\"type\",\"checkbox\"],[\"textarea\",\"formControlName\",\"\"],[\"input\",\"formControl\",\"\",3,\"type\",\"checkbox\"],[\"textarea\",\"formControl\",\"\"],[\"input\",\"ngModel\",\"\",3,\"type\",\"checkbox\"],[\"textarea\",\"ngModel\",\"\"],[\"\",\"ngDefaultControl\",\"\"]],hostBindings:function(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__.cc(\"input\",function($event){return ctx._handleInput($event.target.value)})(\"blur\",function(){return ctx.onTouched()})(\"compositionstart\",function(){return ctx._compositionStart()})(\"compositionend\",function($event){return ctx._compositionEnd($event.target.value)})},features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__.zb([DEFAULT_VALUE_ACCESSOR])]}),DefaultValueAccessor})();const NG_VALIDATORS=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.t(\"NgValidators\"),NG_ASYNC_VALIDATORS=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.t(\"NgAsyncValidators\");function nullValidator(control){return null}function isPresent(o){return null!=o}function toObservable(r){const obs=Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.rb)(r)?Object(rxjs__WEBPACK_IMPORTED_MODULE_2__.a)(r):r;return Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.qb)(obs),obs}function mergeErrors(arrayOfErrors){let res={};return arrayOfErrors.forEach(errors=>{res=null!=errors?Object.assign(Object.assign({},res),errors):res}),0===Object.keys(res).length?null:res}function executeValidators(control,validators){return validators.map(validator=>validator(control))}function normalizeValidators(validators){return validators.map(validator=>function(validator){return!validator.validate}(validator)?validator:c=>validator.validate(c))}function composeValidators(validators){return null!=validators?function(validators){if(!validators)return null;const presentValidators=validators.filter(isPresent);return 0==presentValidators.length?null:function(control){return mergeErrors(executeValidators(control,presentValidators))}}(normalizeValidators(validators)):null}function composeAsyncValidators(validators){return null!=validators?function(validators){if(!validators)return null;const presentValidators=validators.filter(isPresent);return 0==presentValidators.length?null:function(control){const observables=executeValidators(control,presentValidators).map(toObservable);return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__.a)(observables).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.a)(mergeErrors))}}(normalizeValidators(validators)):null}function mergeValidators(controlValidators,dirValidator){return null===controlValidators?[dirValidator]:Array.isArray(controlValidators)?[...controlValidators,dirValidator]:[controlValidators,dirValidator]}function getControlValidators(control){return control._rawValidators}function getControlAsyncValidators(control){return control._rawAsyncValidators}let AbstractControlDirective=(()=>{class AbstractControlDirective{constructor(){this._rawValidators=[],this._rawAsyncValidators=[],this._onDestroyCallbacks=[]}get value(){return this.control?this.control.value:null}get valid(){return this.control?this.control.valid:null}get invalid(){return this.control?this.control.invalid:null}get pending(){return this.control?this.control.pending:null}get disabled(){return this.control?this.control.disabled:null}get enabled(){return this.control?this.control.enabled:null}get errors(){return this.control?this.control.errors:null}get pristine(){return this.control?this.control.pristine:null}get dirty(){return this.control?this.control.dirty:null}get touched(){return this.control?this.control.touched:null}get status(){return this.control?this.control.status:null}get untouched(){return this.control?this.control.untouched:null}get statusChanges(){return this.control?this.control.statusChanges:null}get valueChanges(){return this.control?this.control.valueChanges:null}get path(){return null}_setValidators(validators){this._rawValidators=validators||[],this._composedValidatorFn=composeValidators(this._rawValidators)}_setAsyncValidators(validators){this._rawAsyncValidators=validators||[],this._composedAsyncValidatorFn=composeAsyncValidators(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn||null}get asyncValidator(){return this._composedAsyncValidatorFn||null}_registerOnDestroy(fn){this._onDestroyCallbacks.push(fn)}_invokeOnDestroyCallbacks(){this._onDestroyCallbacks.forEach(fn=>fn()),this._onDestroyCallbacks=[]}reset(value){this.control&&this.control.reset(value)}hasError(errorCode,path){return!!this.control&&this.control.hasError(errorCode,path)}getError(errorCode,path){return this.control?this.control.getError(errorCode,path):null}}return AbstractControlDirective.ɵfac=function(t){return new(t||AbstractControlDirective)},AbstractControlDirective.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ib({type:AbstractControlDirective}),AbstractControlDirective})(),ControlContainer=(()=>{class ControlContainer extends AbstractControlDirective{get formDirective(){return null}get path(){return null}}return ControlContainer.ɵfac=function(t){return ɵControlContainer_BaseFactory(t||ControlContainer)},ControlContainer.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ib({type:ControlContainer,features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__.xb]}),ControlContainer})();const ɵControlContainer_BaseFactory=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ub(ControlContainer);class NgControl extends AbstractControlDirective{constructor(){super(...arguments),this._parent=null,this.name=null,this.valueAccessor=null}}class AbstractControlStatus{constructor(cd){this._cd=cd}is(status){var _a,_b;return!!(null===(_b=null===(_a=this._cd)||void 0===_a?void 0:_a.control)||void 0===_b?void 0:_b[status])}}let NgControlStatus=(()=>{class NgControlStatus extends AbstractControlStatus{constructor(cd){super(cd)}}return NgControlStatus.ɵfac=function(t){return new(t||NgControlStatus)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(NgControl,2))},NgControlStatus.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ib({type:NgControlStatus,selectors:[[\"\",\"formControlName\",\"\"],[\"\",\"ngModel\",\"\"],[\"\",\"formControl\",\"\"]],hostVars:14,hostBindings:function(rf,ctx){2&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__.Fb(\"ng-untouched\",ctx.is(\"untouched\"))(\"ng-touched\",ctx.is(\"touched\"))(\"ng-pristine\",ctx.is(\"pristine\"))(\"ng-dirty\",ctx.is(\"dirty\"))(\"ng-valid\",ctx.is(\"valid\"))(\"ng-invalid\",ctx.is(\"invalid\"))(\"ng-pending\",ctx.is(\"pending\"))},features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__.xb]}),NgControlStatus})(),NgControlStatusGroup=(()=>{class NgControlStatusGroup extends AbstractControlStatus{constructor(cd){super(cd)}}return NgControlStatusGroup.ɵfac=function(t){return new(t||NgControlStatusGroup)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(ControlContainer,10))},NgControlStatusGroup.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ib({type:NgControlStatusGroup,selectors:[[\"\",\"formGroupName\",\"\"],[\"\",\"formArrayName\",\"\"],[\"\",\"ngModelGroup\",\"\"],[\"\",\"formGroup\",\"\"],[\"form\",3,\"ngNoForm\",\"\"],[\"\",\"ngForm\",\"\"]],hostVars:14,hostBindings:function(rf,ctx){2&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__.Fb(\"ng-untouched\",ctx.is(\"untouched\"))(\"ng-touched\",ctx.is(\"touched\"))(\"ng-pristine\",ctx.is(\"pristine\"))(\"ng-dirty\",ctx.is(\"dirty\"))(\"ng-valid\",ctx.is(\"valid\"))(\"ng-invalid\",ctx.is(\"invalid\"))(\"ng-pending\",ctx.is(\"pending\"))},features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__.xb]}),NgControlStatusGroup})();function controlPath(name,parent){return[...parent.path,name]}function setUpControl(control,dir){setUpValidators(control,dir,!0),dir.valueAccessor.writeValue(control.value),function(control,dir){dir.valueAccessor.registerOnChange(newValue=>{control._pendingValue=newValue,control._pendingChange=!0,control._pendingDirty=!0,\"change\"===control.updateOn&&updateControl(control,dir)})}(control,dir),function(control,dir){const onChange=(newValue,emitModelEvent)=>{dir.valueAccessor.writeValue(newValue),emitModelEvent&&dir.viewToModelUpdate(newValue)};control.registerOnChange(onChange),dir._registerOnDestroy(()=>{control._unregisterOnChange(onChange)})}(control,dir),function(control,dir){dir.valueAccessor.registerOnTouched(()=>{control._pendingTouched=!0,\"blur\"===control.updateOn&&control._pendingChange&&updateControl(control,dir),\"submit\"!==control.updateOn&&control.markAsTouched()})}(control,dir),function(control,dir){if(dir.valueAccessor.setDisabledState){const onDisabledChange=isDisabled=>{dir.valueAccessor.setDisabledState(isDisabled)};control.registerOnDisabledChange(onDisabledChange),dir._registerOnDestroy(()=>{control._unregisterOnDisabledChange(onDisabledChange)})}}(control,dir)}function cleanUpControl(control,dir,validateControlPresenceOnChange=!0){const noop=()=>{};dir.valueAccessor&&(dir.valueAccessor.registerOnChange(noop),dir.valueAccessor.registerOnTouched(noop)),cleanUpValidators(control,dir,!0),control&&(dir._invokeOnDestroyCallbacks(),control._registerOnCollectionChange(()=>{}))}function registerOnValidatorChange(validators,onChange){validators.forEach(validator=>{validator.registerOnValidatorChange&&validator.registerOnValidatorChange(onChange)})}function setUpValidators(control,dir,handleOnValidatorChange){const validators=getControlValidators(control);null!==dir.validator?control.setValidators(mergeValidators(validators,dir.validator)):\"function\"==typeof validators&&control.setValidators([validators]);const asyncValidators=getControlAsyncValidators(control);if(null!==dir.asyncValidator?control.setAsyncValidators(mergeValidators(asyncValidators,dir.asyncValidator)):\"function\"==typeof asyncValidators&&control.setAsyncValidators([asyncValidators]),handleOnValidatorChange){const onValidatorChange=()=>control.updateValueAndValidity();registerOnValidatorChange(dir._rawValidators,onValidatorChange),registerOnValidatorChange(dir._rawAsyncValidators,onValidatorChange)}}function cleanUpValidators(control,dir,handleOnValidatorChange){let isControlUpdated=!1;if(null!==control){if(null!==dir.validator){const validators=getControlValidators(control);if(Array.isArray(validators)&&validators.length>0){const updatedValidators=validators.filter(validator=>validator!==dir.validator);updatedValidators.length!==validators.length&&(isControlUpdated=!0,control.setValidators(updatedValidators))}}if(null!==dir.asyncValidator){const asyncValidators=getControlAsyncValidators(control);if(Array.isArray(asyncValidators)&&asyncValidators.length>0){const updatedAsyncValidators=asyncValidators.filter(asyncValidator=>asyncValidator!==dir.asyncValidator);updatedAsyncValidators.length!==asyncValidators.length&&(isControlUpdated=!0,control.setAsyncValidators(updatedAsyncValidators))}}}if(handleOnValidatorChange){const noop=()=>{};registerOnValidatorChange(dir._rawValidators,noop),registerOnValidatorChange(dir._rawAsyncValidators,noop)}return isControlUpdated}function updateControl(control,dir){control._pendingDirty&&control.markAsDirty(),control.setValue(control._pendingValue,{emitModelToViewChange:!1}),dir.viewToModelUpdate(control._pendingValue),control._pendingChange=!1}function setUpFormContainer(control,dir){setUpValidators(control,dir,!1)}function isPropertyUpdated(changes,viewModel){if(!changes.hasOwnProperty(\"model\"))return!1;const change=changes.model;return!!change.isFirstChange()||!Object.is(viewModel,change.currentValue)}function syncPendingControls(form,directives){form._syncPendingControls(),directives.forEach(dir=>{const control=dir.control;\"submit\"===control.updateOn&&control._pendingChange&&(dir.viewToModelUpdate(control._pendingValue),control._pendingChange=!1)})}function selectValueAccessor(dir,valueAccessors){if(!valueAccessors)return null;let defaultAccessor,builtinAccessor,customAccessor;return Array.isArray(valueAccessors),valueAccessors.forEach(v=>{v.constructor===DefaultValueAccessor?defaultAccessor=v:Object.getPrototypeOf(v.constructor)===BuiltInControlValueAccessor?builtinAccessor=v:customAccessor=v}),customAccessor||builtinAccessor||defaultAccessor||null}function removeListItem(list,el){const index=list.indexOf(el);index>-1&&list.splice(index,1)}function pickValidators(validatorOrOpts){return(isOptionsObj(validatorOrOpts)?validatorOrOpts.validators:validatorOrOpts)||null}function coerceToValidator(validator){return Array.isArray(validator)?composeValidators(validator):validator||null}function pickAsyncValidators(asyncValidator,validatorOrOpts){return(isOptionsObj(validatorOrOpts)?validatorOrOpts.asyncValidators:asyncValidator)||null}function coerceToAsyncValidator(asyncValidator){return Array.isArray(asyncValidator)?composeAsyncValidators(asyncValidator):asyncValidator||null}function isOptionsObj(validatorOrOpts){return null!=validatorOrOpts&&!Array.isArray(validatorOrOpts)&&\"object\"==typeof validatorOrOpts}class AbstractControl{constructor(validators,asyncValidators){this._hasOwnPendingAsyncValidator=!1,this._onCollectionChange=()=>{},this._parent=null,this.pristine=!0,this.touched=!1,this._onDisabledChange=[],this._rawValidators=validators,this._rawAsyncValidators=asyncValidators,this._composedValidatorFn=coerceToValidator(this._rawValidators),this._composedAsyncValidatorFn=coerceToAsyncValidator(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn}set validator(validatorFn){this._rawValidators=this._composedValidatorFn=validatorFn}get asyncValidator(){return this._composedAsyncValidatorFn}set asyncValidator(asyncValidatorFn){this._rawAsyncValidators=this._composedAsyncValidatorFn=asyncValidatorFn}get parent(){return this._parent}get valid(){return\"VALID\"===this.status}get invalid(){return\"INVALID\"===this.status}get pending(){return\"PENDING\"==this.status}get disabled(){return\"DISABLED\"===this.status}get enabled(){return\"DISABLED\"!==this.status}get dirty(){return!this.pristine}get untouched(){return!this.touched}get updateOn(){return this._updateOn?this._updateOn:this.parent?this.parent.updateOn:\"change\"}setValidators(newValidator){this._rawValidators=newValidator,this._composedValidatorFn=coerceToValidator(newValidator)}setAsyncValidators(newValidator){this._rawAsyncValidators=newValidator,this._composedAsyncValidatorFn=coerceToAsyncValidator(newValidator)}clearValidators(){this.validator=null}clearAsyncValidators(){this.asyncValidator=null}markAsTouched(opts={}){this.touched=!0,this._parent&&!opts.onlySelf&&this._parent.markAsTouched(opts)}markAllAsTouched(){this.markAsTouched({onlySelf:!0}),this._forEachChild(control=>control.markAllAsTouched())}markAsUntouched(opts={}){this.touched=!1,this._pendingTouched=!1,this._forEachChild(control=>{control.markAsUntouched({onlySelf:!0})}),this._parent&&!opts.onlySelf&&this._parent._updateTouched(opts)}markAsDirty(opts={}){this.pristine=!1,this._parent&&!opts.onlySelf&&this._parent.markAsDirty(opts)}markAsPristine(opts={}){this.pristine=!0,this._pendingDirty=!1,this._forEachChild(control=>{control.markAsPristine({onlySelf:!0})}),this._parent&&!opts.onlySelf&&this._parent._updatePristine(opts)}markAsPending(opts={}){this.status=\"PENDING\",!1!==opts.emitEvent&&this.statusChanges.emit(this.status),this._parent&&!opts.onlySelf&&this._parent.markAsPending(opts)}disable(opts={}){const skipPristineCheck=this._parentMarkedDirty(opts.onlySelf);this.status=\"DISABLED\",this.errors=null,this._forEachChild(control=>{control.disable(Object.assign(Object.assign({},opts),{onlySelf:!0}))}),this._updateValue(),!1!==opts.emitEvent&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._updateAncestors(Object.assign(Object.assign({},opts),{skipPristineCheck:skipPristineCheck})),this._onDisabledChange.forEach(changeFn=>changeFn(!0))}enable(opts={}){const skipPristineCheck=this._parentMarkedDirty(opts.onlySelf);this.status=\"VALID\",this._forEachChild(control=>{control.enable(Object.assign(Object.assign({},opts),{onlySelf:!0}))}),this.updateValueAndValidity({onlySelf:!0,emitEvent:opts.emitEvent}),this._updateAncestors(Object.assign(Object.assign({},opts),{skipPristineCheck:skipPristineCheck})),this._onDisabledChange.forEach(changeFn=>changeFn(!1))}_updateAncestors(opts){this._parent&&!opts.onlySelf&&(this._parent.updateValueAndValidity(opts),opts.skipPristineCheck||this._parent._updatePristine(),this._parent._updateTouched())}setParent(parent){this._parent=parent}updateValueAndValidity(opts={}){this._setInitialStatus(),this._updateValue(),this.enabled&&(this._cancelExistingSubscription(),this.errors=this._runValidator(),this.status=this._calculateStatus(),\"VALID\"!==this.status&&\"PENDING\"!==this.status||this._runAsyncValidator(opts.emitEvent)),!1!==opts.emitEvent&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._parent&&!opts.onlySelf&&this._parent.updateValueAndValidity(opts)}_updateTreeValidity(opts={emitEvent:!0}){this._forEachChild(ctrl=>ctrl._updateTreeValidity(opts)),this.updateValueAndValidity({onlySelf:!0,emitEvent:opts.emitEvent})}_setInitialStatus(){this.status=this._allControlsDisabled()?\"DISABLED\":\"VALID\"}_runValidator(){return this.validator?this.validator(this):null}_runAsyncValidator(emitEvent){if(this.asyncValidator){this.status=\"PENDING\",this._hasOwnPendingAsyncValidator=!0;const obs=toObservable(this.asyncValidator(this));this._asyncValidationSubscription=obs.subscribe(errors=>{this._hasOwnPendingAsyncValidator=!1,this.setErrors(errors,{emitEvent:emitEvent})})}}_cancelExistingSubscription(){this._asyncValidationSubscription&&(this._asyncValidationSubscription.unsubscribe(),this._hasOwnPendingAsyncValidator=!1)}setErrors(errors,opts={}){this.errors=errors,this._updateControlsErrors(!1!==opts.emitEvent)}get(path){return function(control,path,delimiter){if(null==path)return null;if(Array.isArray(path)||(path=path.split(\".\")),Array.isArray(path)&&0===path.length)return null;let controlToFind=control;return path.forEach(name=>{controlToFind=controlToFind instanceof FormGroup?controlToFind.controls.hasOwnProperty(name)?controlToFind.controls[name]:null:controlToFind instanceof FormArray&&controlToFind.at(name)||null}),controlToFind}(this,path)}getError(errorCode,path){const control=path?this.get(path):this;return control&&control.errors?control.errors[errorCode]:null}hasError(errorCode,path){return!!this.getError(errorCode,path)}get root(){let x=this;for(;x._parent;)x=x._parent;return x}_updateControlsErrors(emitEvent){this.status=this._calculateStatus(),emitEvent&&this.statusChanges.emit(this.status),this._parent&&this._parent._updateControlsErrors(emitEvent)}_initObservables(){this.valueChanges=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.o,this.statusChanges=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.o}_calculateStatus(){return this._allControlsDisabled()?\"DISABLED\":this.errors?\"INVALID\":this._hasOwnPendingAsyncValidator||this._anyControlsHaveStatus(\"PENDING\")?\"PENDING\":this._anyControlsHaveStatus(\"INVALID\")?\"INVALID\":\"VALID\"}_anyControlsHaveStatus(status){return this._anyControls(control=>control.status===status)}_anyControlsDirty(){return this._anyControls(control=>control.dirty)}_anyControlsTouched(){return this._anyControls(control=>control.touched)}_updatePristine(opts={}){this.pristine=!this._anyControlsDirty(),this._parent&&!opts.onlySelf&&this._parent._updatePristine(opts)}_updateTouched(opts={}){this.touched=this._anyControlsTouched(),this._parent&&!opts.onlySelf&&this._parent._updateTouched(opts)}_isBoxedValue(formState){return\"object\"==typeof formState&&null!==formState&&2===Object.keys(formState).length&&\"value\"in formState&&\"disabled\"in formState}_registerOnCollectionChange(fn){this._onCollectionChange=fn}_setUpdateStrategy(opts){isOptionsObj(opts)&&null!=opts.updateOn&&(this._updateOn=opts.updateOn)}_parentMarkedDirty(onlySelf){return!onlySelf&&!(!this._parent||!this._parent.dirty)&&!this._parent._anyControlsDirty()}}class FormControl extends AbstractControl{constructor(formState=null,validatorOrOpts,asyncValidator){super(pickValidators(validatorOrOpts),pickAsyncValidators(asyncValidator,validatorOrOpts)),this._onChange=[],this._applyFormState(formState),this._setUpdateStrategy(validatorOrOpts),this._initObservables(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!asyncValidator})}setValue(value,options={}){this.value=this._pendingValue=value,this._onChange.length&&!1!==options.emitModelToViewChange&&this._onChange.forEach(changeFn=>changeFn(this.value,!1!==options.emitViewToModelChange)),this.updateValueAndValidity(options)}patchValue(value,options={}){this.setValue(value,options)}reset(formState=null,options={}){this._applyFormState(formState),this.markAsPristine(options),this.markAsUntouched(options),this.setValue(this.value,options),this._pendingChange=!1}_updateValue(){}_anyControls(condition){return!1}_allControlsDisabled(){return this.disabled}registerOnChange(fn){this._onChange.push(fn)}_unregisterOnChange(fn){removeListItem(this._onChange,fn)}registerOnDisabledChange(fn){this._onDisabledChange.push(fn)}_unregisterOnDisabledChange(fn){removeListItem(this._onDisabledChange,fn)}_forEachChild(cb){}_syncPendingControls(){return!(\"submit\"!==this.updateOn||(this._pendingDirty&&this.markAsDirty(),this._pendingTouched&&this.markAsTouched(),!this._pendingChange)||(this.setValue(this._pendingValue,{onlySelf:!0,emitModelToViewChange:!1}),0))}_applyFormState(formState){this._isBoxedValue(formState)?(this.value=this._pendingValue=formState.value,formState.disabled?this.disable({onlySelf:!0,emitEvent:!1}):this.enable({onlySelf:!0,emitEvent:!1})):this.value=this._pendingValue=formState}}class FormGroup extends AbstractControl{constructor(controls,validatorOrOpts,asyncValidator){super(pickValidators(validatorOrOpts),pickAsyncValidators(asyncValidator,validatorOrOpts)),this.controls=controls,this._initObservables(),this._setUpdateStrategy(validatorOrOpts),this._setUpControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!asyncValidator})}registerControl(name,control){return this.controls[name]?this.controls[name]:(this.controls[name]=control,control.setParent(this),control._registerOnCollectionChange(this._onCollectionChange),control)}addControl(name,control){this.registerControl(name,control),this.updateValueAndValidity(),this._onCollectionChange()}removeControl(name){this.controls[name]&&this.controls[name]._registerOnCollectionChange(()=>{}),delete this.controls[name],this.updateValueAndValidity(),this._onCollectionChange()}setControl(name,control){this.controls[name]&&this.controls[name]._registerOnCollectionChange(()=>{}),delete this.controls[name],control&&this.registerControl(name,control),this.updateValueAndValidity(),this._onCollectionChange()}contains(controlName){return this.controls.hasOwnProperty(controlName)&&this.controls[controlName].enabled}setValue(value,options={}){this._checkAllValuesPresent(value),Object.keys(value).forEach(name=>{this._throwIfControlMissing(name),this.controls[name].setValue(value[name],{onlySelf:!0,emitEvent:options.emitEvent})}),this.updateValueAndValidity(options)}patchValue(value,options={}){null!=value&&(Object.keys(value).forEach(name=>{this.controls[name]&&this.controls[name].patchValue(value[name],{onlySelf:!0,emitEvent:options.emitEvent})}),this.updateValueAndValidity(options))}reset(value={},options={}){this._forEachChild((control,name)=>{control.reset(value[name],{onlySelf:!0,emitEvent:options.emitEvent})}),this._updatePristine(options),this._updateTouched(options),this.updateValueAndValidity(options)}getRawValue(){return this._reduceChildren({},(acc,control,name)=>(acc[name]=control instanceof FormControl?control.value:control.getRawValue(),acc))}_syncPendingControls(){let subtreeUpdated=this._reduceChildren(!1,(updated,child)=>!!child._syncPendingControls()||updated);return subtreeUpdated&&this.updateValueAndValidity({onlySelf:!0}),subtreeUpdated}_throwIfControlMissing(name){if(!Object.keys(this.controls).length)throw new Error(\"\\n        There are no form controls registered with this group yet. If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");if(!this.controls[name])throw new Error(`Cannot find form control with name: ${name}.`)}_forEachChild(cb){Object.keys(this.controls).forEach(key=>{const control=this.controls[key];control&&cb(control,key)})}_setUpControls(){this._forEachChild(control=>{control.setParent(this),control._registerOnCollectionChange(this._onCollectionChange)})}_updateValue(){this.value=this._reduceValue()}_anyControls(condition){for(const controlName of Object.keys(this.controls)){const control=this.controls[controlName];if(this.contains(controlName)&&condition(control))return!0}return!1}_reduceValue(){return this._reduceChildren({},(acc,control,name)=>((control.enabled||this.disabled)&&(acc[name]=control.value),acc))}_reduceChildren(initValue,fn){let res=initValue;return this._forEachChild((control,name)=>{res=fn(res,control,name)}),res}_allControlsDisabled(){for(const controlName of Object.keys(this.controls))if(this.controls[controlName].enabled)return!1;return Object.keys(this.controls).length>0||this.disabled}_checkAllValuesPresent(value){this._forEachChild((control,name)=>{if(void 0===value[name])throw new Error(`Must supply a value for form control with name: '${name}'.`)})}}class FormArray extends AbstractControl{constructor(controls,validatorOrOpts,asyncValidator){super(pickValidators(validatorOrOpts),pickAsyncValidators(asyncValidator,validatorOrOpts)),this.controls=controls,this._initObservables(),this._setUpdateStrategy(validatorOrOpts),this._setUpControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!asyncValidator})}at(index){return this.controls[index]}push(control){this.controls.push(control),this._registerControl(control),this.updateValueAndValidity(),this._onCollectionChange()}insert(index,control){this.controls.splice(index,0,control),this._registerControl(control),this.updateValueAndValidity()}removeAt(index){this.controls[index]&&this.controls[index]._registerOnCollectionChange(()=>{}),this.controls.splice(index,1),this.updateValueAndValidity()}setControl(index,control){this.controls[index]&&this.controls[index]._registerOnCollectionChange(()=>{}),this.controls.splice(index,1),control&&(this.controls.splice(index,0,control),this._registerControl(control)),this.updateValueAndValidity(),this._onCollectionChange()}get length(){return this.controls.length}setValue(value,options={}){this._checkAllValuesPresent(value),value.forEach((newValue,index)=>{this._throwIfControlMissing(index),this.at(index).setValue(newValue,{onlySelf:!0,emitEvent:options.emitEvent})}),this.updateValueAndValidity(options)}patchValue(value,options={}){null!=value&&(value.forEach((newValue,index)=>{this.at(index)&&this.at(index).patchValue(newValue,{onlySelf:!0,emitEvent:options.emitEvent})}),this.updateValueAndValidity(options))}reset(value=[],options={}){this._forEachChild((control,index)=>{control.reset(value[index],{onlySelf:!0,emitEvent:options.emitEvent})}),this._updatePristine(options),this._updateTouched(options),this.updateValueAndValidity(options)}getRawValue(){return this.controls.map(control=>control instanceof FormControl?control.value:control.getRawValue())}clear(){this.controls.length<1||(this._forEachChild(control=>control._registerOnCollectionChange(()=>{})),this.controls.splice(0),this.updateValueAndValidity())}_syncPendingControls(){let subtreeUpdated=this.controls.reduce((updated,child)=>!!child._syncPendingControls()||updated,!1);return subtreeUpdated&&this.updateValueAndValidity({onlySelf:!0}),subtreeUpdated}_throwIfControlMissing(index){if(!this.controls.length)throw new Error(\"\\n        There are no form controls registered with this array yet. If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");if(!this.at(index))throw new Error(`Cannot find form control at index ${index}`)}_forEachChild(cb){this.controls.forEach((control,index)=>{cb(control,index)})}_updateValue(){this.value=this.controls.filter(control=>control.enabled||this.disabled).map(control=>control.value)}_anyControls(condition){return this.controls.some(control=>control.enabled&&condition(control))}_setUpControls(){this._forEachChild(control=>this._registerControl(control))}_checkAllValuesPresent(value){this._forEachChild((control,i)=>{if(void 0===value[i])throw new Error(`Must supply a value for form control at index: ${i}.`)})}_allControlsDisabled(){for(const control of this.controls)if(control.enabled)return!1;return this.controls.length>0||this.disabled}_registerControl(control){control.setParent(this),control._registerOnCollectionChange(this._onCollectionChange)}}const formDirectiveProvider={provide:ControlContainer,useExisting:Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.V)(()=>NgForm)},resolvedPromise=(()=>Promise.resolve(null))();let NgForm=(()=>{class NgForm extends ControlContainer{constructor(validators,asyncValidators){super(),this.submitted=!1,this._directives=[],this.ngSubmit=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.o,this.form=new FormGroup({},composeValidators(validators),composeAsyncValidators(asyncValidators))}ngAfterViewInit(){this._setUpdateStrategy()}get formDirective(){return this}get control(){return this.form}get path(){return[]}get controls(){return this.form.controls}addControl(dir){resolvedPromise.then(()=>{const container=this._findContainer(dir.path);dir.control=container.registerControl(dir.name,dir.control),setUpControl(dir.control,dir),dir.control.updateValueAndValidity({emitEvent:!1}),this._directives.push(dir)})}getControl(dir){return this.form.get(dir.path)}removeControl(dir){resolvedPromise.then(()=>{const container=this._findContainer(dir.path);container&&container.removeControl(dir.name),removeListItem(this._directives,dir)})}addFormGroup(dir){resolvedPromise.then(()=>{const container=this._findContainer(dir.path),group=new FormGroup({});setUpFormContainer(group,dir),container.registerControl(dir.name,group),group.updateValueAndValidity({emitEvent:!1})})}removeFormGroup(dir){resolvedPromise.then(()=>{const container=this._findContainer(dir.path);container&&container.removeControl(dir.name)})}getFormGroup(dir){return this.form.get(dir.path)}updateModel(dir,value){resolvedPromise.then(()=>{this.form.get(dir.path).setValue(value)})}setValue(value){this.control.setValue(value)}onSubmit($event){return this.submitted=!0,syncPendingControls(this.form,this._directives),this.ngSubmit.emit($event),!1}onReset(){this.resetForm()}resetForm(value){this.form.reset(value),this.submitted=!1}_setUpdateStrategy(){this.options&&null!=this.options.updateOn&&(this.form._updateOn=this.options.updateOn)}_findContainer(path){return path.pop(),path.length?this.form.get(path):this.form}}return NgForm.ɵfac=function(t){return new(t||NgForm)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(NG_VALIDATORS,10),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(NG_ASYNC_VALIDATORS,10))},NgForm.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ib({type:NgForm,selectors:[[\"form\",3,\"ngNoForm\",\"\",3,\"formGroup\",\"\"],[\"ng-form\"],[\"\",\"ngForm\",\"\"]],hostBindings:function(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__.cc(\"submit\",function($event){return ctx.onSubmit($event)})(\"reset\",function(){return ctx.onReset()})},inputs:{options:[\"ngFormOptions\",\"options\"]},outputs:{ngSubmit:\"ngSubmit\"},exportAs:[\"ngForm\"],features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__.zb([formDirectiveProvider]),_angular_core__WEBPACK_IMPORTED_MODULE_0__.xb]}),NgForm})();const formControlBinding={provide:NgControl,useExisting:Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.V)(()=>NgModel)},resolvedPromise$1=(()=>Promise.resolve(null))();let NgModel=(()=>{class NgModel extends NgControl{constructor(parent,validators,asyncValidators,valueAccessors){super(),this.control=new FormControl,this._registered=!1,this.update=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.o,this._parent=parent,this._setValidators(validators),this._setAsyncValidators(asyncValidators),this.valueAccessor=selectValueAccessor(0,valueAccessors)}ngOnChanges(changes){this._checkForErrors(),this._registered||this._setUpControl(),\"isDisabled\"in changes&&this._updateDisabled(changes),isPropertyUpdated(changes,this.viewModel)&&(this._updateValue(this.model),this.viewModel=this.model)}ngOnDestroy(){this.formDirective&&this.formDirective.removeControl(this)}get path(){return this._parent?controlPath(this.name,this._parent):[this.name]}get formDirective(){return this._parent?this._parent.formDirective:null}viewToModelUpdate(newValue){this.viewModel=newValue,this.update.emit(newValue)}_setUpControl(){this._setUpdateStrategy(),this._isStandalone()?this._setUpStandalone():this.formDirective.addControl(this),this._registered=!0}_setUpdateStrategy(){this.options&&null!=this.options.updateOn&&(this.control._updateOn=this.options.updateOn)}_isStandalone(){return!this._parent||!(!this.options||!this.options.standalone)}_setUpStandalone(){setUpControl(this.control,this),this.control.updateValueAndValidity({emitEvent:!1})}_checkForErrors(){this._isStandalone()||this._checkParentType(),this._checkName()}_checkParentType(){}_checkName(){this.options&&this.options.name&&(this.name=this.options.name),this._isStandalone()}_updateValue(value){resolvedPromise$1.then(()=>{this.control.setValue(value,{emitViewToModelChange:!1})})}_updateDisabled(changes){const disabledValue=changes.isDisabled.currentValue,isDisabled=\"\"===disabledValue||disabledValue&&\"false\"!==disabledValue;resolvedPromise$1.then(()=>{isDisabled&&!this.control.disabled?this.control.disable():!isDisabled&&this.control.disabled&&this.control.enable()})}}return NgModel.ɵfac=function(t){return new(t||NgModel)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(ControlContainer,9),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(NG_VALIDATORS,10),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(NG_ASYNC_VALIDATORS,10),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(NG_VALUE_ACCESSOR,10))},NgModel.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ib({type:NgModel,selectors:[[\"\",\"ngModel\",\"\",3,\"formControlName\",\"\",3,\"formControl\",\"\"]],inputs:{name:\"name\",isDisabled:[\"disabled\",\"isDisabled\"],model:[\"ngModel\",\"model\"],options:[\"ngModelOptions\",\"options\"]},outputs:{update:\"ngModelChange\"},exportAs:[\"ngModel\"],features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__.zb([formControlBinding]),_angular_core__WEBPACK_IMPORTED_MODULE_0__.xb,_angular_core__WEBPACK_IMPORTED_MODULE_0__.yb]}),NgModel})(),ɵNgNoValidate=(()=>{class ɵNgNoValidate{}return ɵNgNoValidate.ɵfac=function(t){return new(t||ɵNgNoValidate)},ɵNgNoValidate.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ib({type:ɵNgNoValidate,selectors:[[\"form\",3,\"ngNoForm\",\"\",3,\"ngNativeValidate\",\"\"]],hostAttrs:[\"novalidate\",\"\"]}),ɵNgNoValidate})();const NUMBER_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.V)(()=>NumberValueAccessor),multi:!0};let NumberValueAccessor=(()=>{class NumberValueAccessor extends BuiltInControlValueAccessor{constructor(_renderer,_elementRef){super(),this._renderer=_renderer,this._elementRef=_elementRef,this.onChange=_=>{},this.onTouched=()=>{}}writeValue(value){this._renderer.setProperty(this._elementRef.nativeElement,\"value\",null==value?\"\":value)}registerOnChange(fn){this.onChange=value=>{fn(\"\"==value?null:parseFloat(value))}}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this._renderer.setProperty(this._elementRef.nativeElement,\"disabled\",isDisabled)}}return NumberValueAccessor.ɵfac=function(t){return new(t||NumberValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.G),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.m))},NumberValueAccessor.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ib({type:NumberValueAccessor,selectors:[[\"input\",\"type\",\"number\",\"formControlName\",\"\"],[\"input\",\"type\",\"number\",\"formControl\",\"\"],[\"input\",\"type\",\"number\",\"ngModel\",\"\"]],hostBindings:function(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__.cc(\"input\",function($event){return ctx.onChange($event.target.value)})(\"blur\",function(){return ctx.onTouched()})},features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__.zb([NUMBER_VALUE_ACCESSOR]),_angular_core__WEBPACK_IMPORTED_MODULE_0__.xb]}),NumberValueAccessor})(),RadioControlRegistryModule=(()=>{class RadioControlRegistryModule{}return RadioControlRegistryModule.ɵfac=function(t){return new(t||RadioControlRegistryModule)},RadioControlRegistryModule.ɵmod=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Lb({type:RadioControlRegistryModule}),RadioControlRegistryModule.ɵinj=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Kb({}),RadioControlRegistryModule})();const NG_MODEL_WITH_FORM_CONTROL_WARNING=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.t(\"NgModelWithFormControlWarning\"),formDirectiveProvider$1={provide:ControlContainer,useExisting:Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.V)(()=>FormGroupDirective)};let FormGroupDirective=(()=>{class FormGroupDirective extends ControlContainer{constructor(validators,asyncValidators){super(),this.validators=validators,this.asyncValidators=asyncValidators,this.submitted=!1,this._onCollectionChange=()=>this._updateDomValue(),this.directives=[],this.form=null,this.ngSubmit=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.o,this._setValidators(validators),this._setAsyncValidators(asyncValidators)}ngOnChanges(changes){this._checkFormPresent(),changes.hasOwnProperty(\"form\")&&(this._updateValidators(),this._updateDomValue(),this._updateRegistrations(),this._oldForm=this.form)}ngOnDestroy(){this.form&&(cleanUpValidators(this.form,this,!1),this.form._onCollectionChange===this._onCollectionChange&&this.form._registerOnCollectionChange(()=>{}))}get formDirective(){return this}get control(){return this.form}get path(){return[]}addControl(dir){const ctrl=this.form.get(dir.path);return setUpControl(ctrl,dir),ctrl.updateValueAndValidity({emitEvent:!1}),this.directives.push(dir),ctrl}getControl(dir){return this.form.get(dir.path)}removeControl(dir){cleanUpControl(dir.control||null,dir,!1),removeListItem(this.directives,dir)}addFormGroup(dir){this._setUpFormContainer(dir)}removeFormGroup(dir){this._cleanUpFormContainer(dir)}getFormGroup(dir){return this.form.get(dir.path)}addFormArray(dir){this._setUpFormContainer(dir)}removeFormArray(dir){this._cleanUpFormContainer(dir)}getFormArray(dir){return this.form.get(dir.path)}updateModel(dir,value){this.form.get(dir.path).setValue(value)}onSubmit($event){return this.submitted=!0,syncPendingControls(this.form,this.directives),this.ngSubmit.emit($event),!1}onReset(){this.resetForm()}resetForm(value){this.form.reset(value),this.submitted=!1}_updateDomValue(){this.directives.forEach(dir=>{const oldCtrl=dir.control,newCtrl=this.form.get(dir.path);oldCtrl!==newCtrl&&(cleanUpControl(oldCtrl||null,dir),newCtrl instanceof FormControl&&(setUpControl(newCtrl,dir),dir.control=newCtrl))}),this.form._updateTreeValidity({emitEvent:!1})}_setUpFormContainer(dir){const ctrl=this.form.get(dir.path);setUpFormContainer(ctrl,dir),ctrl.updateValueAndValidity({emitEvent:!1})}_cleanUpFormContainer(dir){if(this.form){const ctrl=this.form.get(dir.path);ctrl&&function(control,dir){return cleanUpValidators(control,dir,!1)}(ctrl,dir)&&ctrl.updateValueAndValidity({emitEvent:!1})}}_updateRegistrations(){this.form._registerOnCollectionChange(this._onCollectionChange),this._oldForm&&this._oldForm._registerOnCollectionChange(()=>{})}_updateValidators(){setUpValidators(this.form,this,!1),this._oldForm&&cleanUpValidators(this._oldForm,this,!1)}_checkFormPresent(){}}return FormGroupDirective.ɵfac=function(t){return new(t||FormGroupDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(NG_VALIDATORS,10),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(NG_ASYNC_VALIDATORS,10))},FormGroupDirective.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ib({type:FormGroupDirective,selectors:[[\"\",\"formGroup\",\"\"]],hostBindings:function(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__.cc(\"submit\",function($event){return ctx.onSubmit($event)})(\"reset\",function(){return ctx.onReset()})},inputs:{form:[\"formGroup\",\"form\"]},outputs:{ngSubmit:\"ngSubmit\"},exportAs:[\"ngForm\"],features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__.zb([formDirectiveProvider$1]),_angular_core__WEBPACK_IMPORTED_MODULE_0__.xb,_angular_core__WEBPACK_IMPORTED_MODULE_0__.yb]}),FormGroupDirective})();const controlNameBinding={provide:NgControl,useExisting:Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.V)(()=>FormControlName)};let FormControlName=(()=>{class FormControlName extends NgControl{constructor(parent,validators,asyncValidators,valueAccessors,_ngModelWarningConfig){super(),this._ngModelWarningConfig=_ngModelWarningConfig,this._added=!1,this.update=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.o,this._ngModelWarningSent=!1,this._parent=parent,this._setValidators(validators),this._setAsyncValidators(asyncValidators),this.valueAccessor=selectValueAccessor(0,valueAccessors)}set isDisabled(isDisabled){}ngOnChanges(changes){this._added||this._setUpControl(),isPropertyUpdated(changes,this.viewModel)&&(this.viewModel=this.model,this.formDirective.updateModel(this,this.model))}ngOnDestroy(){this.formDirective&&this.formDirective.removeControl(this)}viewToModelUpdate(newValue){this.viewModel=newValue,this.update.emit(newValue)}get path(){return controlPath(null==this.name?this.name:this.name.toString(),this._parent)}get formDirective(){return this._parent?this._parent.formDirective:null}_checkParentType(){}_setUpControl(){this._checkParentType(),this.control=this.formDirective.addControl(this),this.control.disabled&&this.valueAccessor.setDisabledState&&this.valueAccessor.setDisabledState(!0),this._added=!0}}return FormControlName.ɵfac=function(t){return new(t||FormControlName)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(ControlContainer,13),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(NG_VALIDATORS,10),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(NG_ASYNC_VALIDATORS,10),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(NG_VALUE_ACCESSOR,10),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(NG_MODEL_WITH_FORM_CONTROL_WARNING,8))},FormControlName.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ib({type:FormControlName,selectors:[[\"\",\"formControlName\",\"\"]],inputs:{isDisabled:[\"disabled\",\"isDisabled\"],name:[\"formControlName\",\"name\"],model:[\"ngModel\",\"model\"]},outputs:{update:\"ngModelChange\"},features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__.zb([controlNameBinding]),_angular_core__WEBPACK_IMPORTED_MODULE_0__.xb,_angular_core__WEBPACK_IMPORTED_MODULE_0__.yb]}),FormControlName._ngModelWarningSentOnce=!1,FormControlName})();const SELECT_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.V)(()=>SelectControlValueAccessor),multi:!0};function _buildValueString(id,value){return null==id?`${value}`:(value&&\"object\"==typeof value&&(value=\"Object\"),`${id}: ${value}`.slice(0,50))}let SelectControlValueAccessor=(()=>{class SelectControlValueAccessor extends BuiltInControlValueAccessor{constructor(_renderer,_elementRef){super(),this._renderer=_renderer,this._elementRef=_elementRef,this._optionMap=new Map,this._idCounter=0,this.onChange=_=>{},this.onTouched=()=>{},this._compareWith=Object.is}set compareWith(fn){this._compareWith=fn}writeValue(value){this.value=value;const id=this._getOptionId(value);null==id&&this._renderer.setProperty(this._elementRef.nativeElement,\"selectedIndex\",-1);const valueString=_buildValueString(id,value);this._renderer.setProperty(this._elementRef.nativeElement,\"value\",valueString)}registerOnChange(fn){this.onChange=valueString=>{this.value=this._getOptionValue(valueString),fn(this.value)}}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this._renderer.setProperty(this._elementRef.nativeElement,\"disabled\",isDisabled)}_registerOption(){return(this._idCounter++).toString()}_getOptionId(value){for(const id of Array.from(this._optionMap.keys()))if(this._compareWith(this._optionMap.get(id),value))return id;return null}_getOptionValue(valueString){const id=function(valueString){return valueString.split(\":\")[0]}(valueString);return this._optionMap.has(id)?this._optionMap.get(id):valueString}}return SelectControlValueAccessor.ɵfac=function(t){return new(t||SelectControlValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.G),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.m))},SelectControlValueAccessor.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ib({type:SelectControlValueAccessor,selectors:[[\"select\",\"formControlName\",\"\",3,\"multiple\",\"\"],[\"select\",\"formControl\",\"\",3,\"multiple\",\"\"],[\"select\",\"ngModel\",\"\",3,\"multiple\",\"\"]],hostBindings:function(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__.cc(\"change\",function($event){return ctx.onChange($event.target.value)})(\"blur\",function(){return ctx.onTouched()})},inputs:{compareWith:\"compareWith\"},features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__.zb([SELECT_VALUE_ACCESSOR]),_angular_core__WEBPACK_IMPORTED_MODULE_0__.xb]}),SelectControlValueAccessor})(),NgSelectOption=(()=>{class NgSelectOption{constructor(_element,_renderer,_select){this._element=_element,this._renderer=_renderer,this._select=_select,this._select&&(this.id=this._select._registerOption())}set ngValue(value){null!=this._select&&(this._select._optionMap.set(this.id,value),this._setElementValue(_buildValueString(this.id,value)),this._select.writeValue(this._select.value))}set value(value){this._setElementValue(value),this._select&&this._select.writeValue(this._select.value)}_setElementValue(value){this._renderer.setProperty(this._element.nativeElement,\"value\",value)}ngOnDestroy(){this._select&&(this._select._optionMap.delete(this.id),this._select.writeValue(this._select.value))}}return NgSelectOption.ɵfac=function(t){return new(t||NgSelectOption)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.m),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.G),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(SelectControlValueAccessor,9))},NgSelectOption.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ib({type:NgSelectOption,selectors:[[\"option\"]],inputs:{ngValue:\"ngValue\",value:\"value\"}}),NgSelectOption})();const SELECT_MULTIPLE_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.V)(()=>SelectMultipleControlValueAccessor),multi:!0};function _buildValueString$1(id,value){return null==id?`${value}`:(\"string\"==typeof value&&(value=`'${value}'`),value&&\"object\"==typeof value&&(value=\"Object\"),`${id}: ${value}`.slice(0,50))}let SelectMultipleControlValueAccessor=(()=>{class SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor{constructor(_renderer,_elementRef){super(),this._renderer=_renderer,this._elementRef=_elementRef,this._optionMap=new Map,this._idCounter=0,this.onChange=_=>{},this.onTouched=()=>{},this._compareWith=Object.is}set compareWith(fn){this._compareWith=fn}writeValue(value){let optionSelectedStateSetter;if(this.value=value,Array.isArray(value)){const ids=value.map(v=>this._getOptionId(v));optionSelectedStateSetter=(opt,o)=>{opt._setSelected(ids.indexOf(o.toString())>-1)}}else optionSelectedStateSetter=(opt,o)=>{opt._setSelected(!1)};this._optionMap.forEach(optionSelectedStateSetter)}registerOnChange(fn){this.onChange=_=>{const selected=[];if(void 0!==_.selectedOptions){const options=_.selectedOptions;for(let i=0;i<options.length;i++){const opt=options.item(i),val=this._getOptionValue(opt.value);selected.push(val)}}else{const options=_.options;for(let i=0;i<options.length;i++){const opt=options.item(i);if(opt.selected){const val=this._getOptionValue(opt.value);selected.push(val)}}}this.value=selected,fn(selected)}}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this._renderer.setProperty(this._elementRef.nativeElement,\"disabled\",isDisabled)}_registerOption(value){const id=(this._idCounter++).toString();return this._optionMap.set(id,value),id}_getOptionId(value){for(const id of Array.from(this._optionMap.keys()))if(this._compareWith(this._optionMap.get(id)._value,value))return id;return null}_getOptionValue(valueString){const id=function(valueString){return valueString.split(\":\")[0]}(valueString);return this._optionMap.has(id)?this._optionMap.get(id)._value:valueString}}return SelectMultipleControlValueAccessor.ɵfac=function(t){return new(t||SelectMultipleControlValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.G),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.m))},SelectMultipleControlValueAccessor.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ib({type:SelectMultipleControlValueAccessor,selectors:[[\"select\",\"multiple\",\"\",\"formControlName\",\"\"],[\"select\",\"multiple\",\"\",\"formControl\",\"\"],[\"select\",\"multiple\",\"\",\"ngModel\",\"\"]],hostBindings:function(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__.cc(\"change\",function($event){return ctx.onChange($event.target)})(\"blur\",function(){return ctx.onTouched()})},inputs:{compareWith:\"compareWith\"},features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__.zb([SELECT_MULTIPLE_VALUE_ACCESSOR]),_angular_core__WEBPACK_IMPORTED_MODULE_0__.xb]}),SelectMultipleControlValueAccessor})(),ɵNgSelectMultipleOption=(()=>{class ɵNgSelectMultipleOption{constructor(_element,_renderer,_select){this._element=_element,this._renderer=_renderer,this._select=_select,this._select&&(this.id=this._select._registerOption(this))}set ngValue(value){null!=this._select&&(this._value=value,this._setElementValue(_buildValueString$1(this.id,value)),this._select.writeValue(this._select.value))}set value(value){this._select?(this._value=value,this._setElementValue(_buildValueString$1(this.id,value)),this._select.writeValue(this._select.value)):this._setElementValue(value)}_setElementValue(value){this._renderer.setProperty(this._element.nativeElement,\"value\",value)}_setSelected(selected){this._renderer.setProperty(this._element.nativeElement,\"selected\",selected)}ngOnDestroy(){this._select&&(this._select._optionMap.delete(this.id),this._select.writeValue(this._select.value))}}return ɵNgSelectMultipleOption.ɵfac=function(t){return new(t||ɵNgSelectMultipleOption)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.m),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(_angular_core__WEBPACK_IMPORTED_MODULE_0__.G),_angular_core__WEBPACK_IMPORTED_MODULE_0__.Nb(SelectMultipleControlValueAccessor,9))},ɵNgSelectMultipleOption.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ib({type:ɵNgSelectMultipleOption,selectors:[[\"option\"]],inputs:{ngValue:\"ngValue\",value:\"value\"}}),ɵNgSelectMultipleOption})();const MAX_LENGTH_VALIDATOR={provide:NG_VALIDATORS,useExisting:Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.V)(()=>MaxLengthValidator),multi:!0};let MaxLengthValidator=(()=>{class MaxLengthValidator{constructor(){this._validator=nullValidator}ngOnChanges(changes){\"maxlength\"in changes&&(this._createValidator(),this._onChange&&this._onChange())}validate(control){return null!=this.maxlength?this._validator(control):null}registerOnValidatorChange(fn){this._onChange=fn}_createValidator(){var maxLength;this._validator=(maxLength=\"number\"==typeof this.maxlength?this.maxlength:parseInt(this.maxlength,10),control=>{return null!=(value=control.value)&&\"number\"==typeof value.length&&control.value.length>maxLength?{maxlength:{requiredLength:maxLength,actualLength:control.value.length}}:null;var value})}}return MaxLengthValidator.ɵfac=function(t){return new(t||MaxLengthValidator)},MaxLengthValidator.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Ib({type:MaxLengthValidator,selectors:[[\"\",\"maxlength\",\"\",\"formControlName\",\"\"],[\"\",\"maxlength\",\"\",\"formControl\",\"\"],[\"\",\"maxlength\",\"\",\"ngModel\",\"\"]],hostVars:1,hostBindings:function(rf,ctx){2&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_0__.Bb(\"maxlength\",ctx.maxlength?ctx.maxlength:null)},inputs:{maxlength:\"maxlength\"},features:[_angular_core__WEBPACK_IMPORTED_MODULE_0__.zb([MAX_LENGTH_VALIDATOR]),_angular_core__WEBPACK_IMPORTED_MODULE_0__.yb]}),MaxLengthValidator})(),ɵInternalFormsSharedModule=(()=>{class ɵInternalFormsSharedModule{}return ɵInternalFormsSharedModule.ɵfac=function(t){return new(t||ɵInternalFormsSharedModule)},ɵInternalFormsSharedModule.ɵmod=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Lb({type:ɵInternalFormsSharedModule}),ɵInternalFormsSharedModule.ɵinj=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Kb({imports:[[RadioControlRegistryModule]]}),ɵInternalFormsSharedModule})(),FormsModule=(()=>{class FormsModule{}return FormsModule.ɵfac=function(t){return new(t||FormsModule)},FormsModule.ɵmod=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Lb({type:FormsModule}),FormsModule.ɵinj=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Kb({imports:[ɵInternalFormsSharedModule]}),FormsModule})(),ReactiveFormsModule=(()=>{class ReactiveFormsModule{static withConfig(opts){return{ngModule:ReactiveFormsModule,providers:[{provide:NG_MODEL_WITH_FORM_CONTROL_WARNING,useValue:opts.warnOnNgModelWithFormControl}]}}}return ReactiveFormsModule.ɵfac=function(t){return new(t||ReactiveFormsModule)},ReactiveFormsModule.ɵmod=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Lb({type:ReactiveFormsModule}),ReactiveFormsModule.ɵinj=_angular_core__WEBPACK_IMPORTED_MODULE_0__.Kb({imports:[ɵInternalFormsSharedModule]}),ReactiveFormsModule})(),FormBuilder=(()=>{class FormBuilder{group(controlsConfig,options=null){const controls=this._reduceControls(controlsConfig);let updateOn,validators=null,asyncValidators=null;return null!=options&&(function(options){return void 0!==options.asyncValidators||void 0!==options.validators||void 0!==options.updateOn}(options)?(validators=null!=options.validators?options.validators:null,asyncValidators=null!=options.asyncValidators?options.asyncValidators:null,updateOn=null!=options.updateOn?options.updateOn:void 0):(validators=null!=options.validator?options.validator:null,asyncValidators=null!=options.asyncValidator?options.asyncValidator:null)),new FormGroup(controls,{asyncValidators:asyncValidators,updateOn:updateOn,validators:validators})}control(formState,validatorOrOpts,asyncValidator){return new FormControl(formState,validatorOrOpts,asyncValidator)}array(controlsConfig,validatorOrOpts,asyncValidator){const controls=controlsConfig.map(c=>this._createControl(c));return new FormArray(controls,validatorOrOpts,asyncValidator)}_reduceControls(controlsConfig){const controls={};return Object.keys(controlsConfig).forEach(controlName=>{controls[controlName]=this._createControl(controlsConfig[controlName])}),controls}_createControl(controlConfig){return controlConfig instanceof FormControl||controlConfig instanceof FormGroup||controlConfig instanceof FormArray?controlConfig:Array.isArray(controlConfig)?this.control(controlConfig[0],controlConfig.length>1?controlConfig[1]:null,controlConfig.length>2?controlConfig[2]:null):this.control(controlConfig)}}return FormBuilder.ɵfac=function(t){return new(t||FormBuilder)},FormBuilder.ɵprov=Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Jb)({factory:function(){return new FormBuilder},token:FormBuilder,providedIn:ReactiveFormsModule}),FormBuilder})()}}]);","name":"2-es2015.98396a3536c12b95d46d.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[2],{\n\n/***/ \"1kSV\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* binding */ ModalDismissReasons; });\n__webpack_require__.d(__webpack_exports__, \"b\", function() { return /* binding */ ng_bootstrap_NgbAlert; });\n__webpack_require__.d(__webpack_exports__, \"c\", function() { return /* binding */ ng_bootstrap_NgbAlertModule; });\n__webpack_require__.d(__webpack_exports__, \"d\", function() { return /* binding */ ng_bootstrap_NgbButtonLabel; });\n__webpack_require__.d(__webpack_exports__, \"e\", function() { return /* binding */ ng_bootstrap_NgbCarousel; });\n__webpack_require__.d(__webpack_exports__, \"f\", function() { return /* binding */ ng_bootstrap_NgbCarouselModule; });\n__webpack_require__.d(__webpack_exports__, \"g\", function() { return /* binding */ ng_bootstrap_NgbCollapse; });\n__webpack_require__.d(__webpack_exports__, \"h\", function() { return /* binding */ ng_bootstrap_NgbDropdown; });\n__webpack_require__.d(__webpack_exports__, \"i\", function() { return /* binding */ ng_bootstrap_NgbDropdownMenu; });\n__webpack_require__.d(__webpack_exports__, \"j\", function() { return /* binding */ ng_bootstrap_NgbDropdownModule; });\n__webpack_require__.d(__webpack_exports__, \"k\", function() { return /* binding */ ng_bootstrap_NgbDropdownToggle; });\n__webpack_require__.d(__webpack_exports__, \"l\", function() { return /* binding */ ng_bootstrap_NgbInputDatepicker; });\n__webpack_require__.d(__webpack_exports__, \"m\", function() { return /* binding */ ng_bootstrap_NgbModal; });\n__webpack_require__.d(__webpack_exports__, \"n\", function() { return /* binding */ ng_bootstrap_NgbModule; });\n__webpack_require__.d(__webpack_exports__, \"o\", function() { return /* binding */ ng_bootstrap_NgbNavbar; });\n__webpack_require__.d(__webpack_exports__, \"p\", function() { return /* binding */ ng_bootstrap_NgbPagination; });\n__webpack_require__.d(__webpack_exports__, \"q\", function() { return /* binding */ ng_bootstrap_NgbPopover; });\n__webpack_require__.d(__webpack_exports__, \"r\", function() { return /* binding */ ng_bootstrap_NgbProgressbar; });\n__webpack_require__.d(__webpack_exports__, \"s\", function() { return /* binding */ ng_bootstrap_NgbRadio; });\n__webpack_require__.d(__webpack_exports__, \"t\", function() { return /* binding */ ng_bootstrap_NgbRadioGroup; });\n__webpack_require__.d(__webpack_exports__, \"u\", function() { return /* binding */ ng_bootstrap_NgbRating; });\n__webpack_require__.d(__webpack_exports__, \"v\", function() { return /* binding */ ng_bootstrap_NgbSlide; });\n__webpack_require__.d(__webpack_exports__, \"w\", function() { return /* binding */ ng_bootstrap_NgbTab; });\n__webpack_require__.d(__webpack_exports__, \"x\", function() { return /* binding */ ng_bootstrap_NgbTabContent; });\n__webpack_require__.d(__webpack_exports__, \"y\", function() { return /* binding */ ng_bootstrap_NgbTabTitle; });\n__webpack_require__.d(__webpack_exports__, \"z\", function() { return /* binding */ ng_bootstrap_NgbTabset; });\n__webpack_require__.d(__webpack_exports__, \"A\", function() { return /* binding */ ng_bootstrap_NgbTimepicker; });\n__webpack_require__.d(__webpack_exports__, \"B\", function() { return /* binding */ ng_bootstrap_NgbTooltip; });\n\n// UNUSED EXPORTS: NgbAccordion, NgbAccordionConfig, NgbAccordionModule, NgbActiveModal, NgbAlertConfig, NgbButtonsModule, NgbCalendar, NgbCalendarGregorian, NgbCalendarHebrew, NgbCalendarIslamicCivil, NgbCalendarIslamicUmalqura, NgbCalendarPersian, NgbCarouselConfig, NgbCheckBox, NgbCollapseModule, NgbDate, NgbDateAdapter, NgbDateNativeAdapter, NgbDateNativeUTCAdapter, NgbDateParserFormatter, NgbDatepicker, NgbDatepickerConfig, NgbDatepickerContent, NgbDatepickerI18n, NgbDatepickerI18nHebrew, NgbDatepickerKeyboardService, NgbDatepickerModule, NgbDatepickerMonth, NgbDropdownAnchor, NgbDropdownConfig, NgbDropdownItem, NgbHighlight, NgbInputDatepickerConfig, NgbModalConfig, NgbModalModule, NgbModalRef, NgbNav, NgbNavConfig, NgbNavContent, NgbNavItem, NgbNavLink, NgbNavModule, NgbNavOutlet, NgbPaginationConfig, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationModule, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious, NgbPanel, NgbPanelContent, NgbPanelHeader, NgbPanelTitle, NgbPanelToggle, NgbPopoverConfig, NgbPopoverModule, NgbProgressbarConfig, NgbProgressbarModule, NgbRatingConfig, NgbRatingModule, NgbSlideEventDirection, NgbSlideEventSource, NgbTabsetConfig, NgbTabsetModule, NgbTimeAdapter, NgbTimepickerConfig, NgbTimepickerI18n, NgbTimepickerModule, NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule, NgbTooltipConfig, NgbTooltipModule, NgbTypeahead, NgbTypeaheadConfig, NgbTypeaheadModule, ɵa, ɵb, ɵba, ɵbb, ɵbc, ɵc, ɵd, ɵe, ɵf, ɵg, ɵh, ɵi, ɵj, ɵk, ɵl, ɵm, ɵn, ɵo, ɵp, ɵq, ɵr, ɵs, ɵt, ɵu, ɵv, ɵw, ɵx, ɵy, ɵz\n\n// CONCATENATED MODULE: ./node_modules/tslib/tslib.es6.js\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise */\n\nvar extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n    return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n    if (typeof b !== \"function\" && b !== null)\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    }\n    return __assign.apply(this, arguments);\n}\n\nfunction __rest(s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n}\n\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nfunction __param(paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nfunction __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\n\nfunction __generator(thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n}\n\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\n\nfunction __exportStar(m, o) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nfunction __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nfunction __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n}\n\n/** @deprecated */\nfunction __spread() {\n    for (var ar = [], i = 0; i < arguments.length; i++)\n        ar = ar.concat(__read(arguments[i]));\n    return ar;\n}\n\n/** @deprecated */\nfunction __spreadArrays() {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n}\n\nfunction __spreadArray(to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n}\n\nfunction __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nfunction __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\n}\n\nfunction __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nfunction __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n};\n\nfunction __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n}\n\nfunction __importDefault(mod) {\n    return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js\nvar core = __webpack_require__(\"fXoL\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js\nvar common = __webpack_require__(\"ofXK\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js\nvar fesm2015_forms = __webpack_require__(\"3Pt+\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/Subject.js\nvar Subject = __webpack_require__(\"XNiG\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js\nvar BehaviorSubject = __webpack_require__(\"2Vo4\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/combineLatest.js\nvar combineLatest = __webpack_require__(\"itXk\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/Observable.js + 3 modules\nvar Observable = __webpack_require__(\"HDdC\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/scheduler/AsyncAction.js + 1 modules\nvar AsyncAction = __webpack_require__(\"3N8a\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/scheduler/AsyncScheduler.js + 1 modules\nvar AsyncScheduler = __webpack_require__(\"IjjT\");\n\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/scheduler/async.js\n\n\nconst asyncScheduler = /*@__PURE__*/ new AsyncScheduler[\"a\" /* AsyncScheduler */](AsyncAction[\"a\" /* AsyncAction */]);\nconst async_async = asyncScheduler;\n//# sourceMappingURL=async.js.map\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/util/isArray.js\nvar isArray = __webpack_require__(\"DH7j\");\n\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/util/isNumeric.js\n\nfunction isNumeric(val) {\n    return !Object(isArray[\"a\" /* isArray */])(val) && (val - parseFloat(val) + 1) >= 0;\n}\n//# sourceMappingURL=isNumeric.js.map\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/util/isScheduler.js\nvar isScheduler = __webpack_require__(\"z+Ro\");\n\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/observable/timer.js\n\n\n\n\nfunction timer(dueTime = 0, periodOrScheduler, scheduler) {\n    let period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (Object(isScheduler[\"a\" /* isScheduler */])(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!Object(isScheduler[\"a\" /* isScheduler */])(scheduler)) {\n        scheduler = async_async;\n    }\n    return new Observable[\"a\" /* Observable */](subscriber => {\n        const due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period, subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    const { index, period, subscriber } = state;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n//# sourceMappingURL=timer.js.map\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/util/noop.js\nvar noop = __webpack_require__(\"KqfI\");\n\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/observable/never.js\n\n\nconst NEVER = /*@__PURE__*/ new Observable[\"a\" /* Observable */](noop[\"a\" /* noop */]);\nfunction never() {\n    return NEVER;\n}\n//# sourceMappingURL=never.js.map\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/util/isFunction.js\nvar isFunction = __webpack_require__(\"n6bG\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/map.js\nvar map = __webpack_require__(\"lJxs\");\n\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/observable/fromEvent.js\n\n\n\n\nconst fromEvent_toString = /*@__PURE__*/ (() => Object.prototype.toString)();\nfunction fromEvent(target, eventName, options, resultSelector) {\n    if (Object(isFunction[\"a\" /* isFunction */])(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(Object(map[\"a\" /* map */])(args => Object(isArray[\"a\" /* isArray */])(args) ? resultSelector(...args) : resultSelector(args)));\n    }\n    return new Observable[\"a\" /* Observable */](subscriber => {\n        function handler(e) {\n            if (arguments.length > 1) {\n                subscriber.next(Array.prototype.slice.call(arguments));\n            }\n            else {\n                subscriber.next(e);\n            }\n        }\n        setupSubscription(target, eventName, handler, subscriber, options);\n    });\n}\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n    let unsubscribe;\n    if (isEventTarget(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.addEventListener(eventName, handler, options);\n        unsubscribe = () => source.removeEventListener(eventName, handler, options);\n    }\n    else if (isJQueryStyleEventEmitter(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.on(eventName, handler);\n        unsubscribe = () => source.off(eventName, handler);\n    }\n    else if (isNodeStyleEventEmitter(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.addListener(eventName, handler);\n        unsubscribe = () => source.removeListener(eventName, handler);\n    }\n    else if (sourceObj && sourceObj.length) {\n        for (let i = 0, len = sourceObj.length; i < len; i++) {\n            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n        }\n    }\n    else {\n        throw new TypeError('Invalid event target');\n    }\n    subscriber.add(unsubscribe);\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isEventTarget(sourceObj) {\n    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n//# sourceMappingURL=fromEvent.js.map\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/merge.js\nvar merge = __webpack_require__(\"VRyK\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/fromArray.js\nvar fromArray = __webpack_require__(\"yCtX\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/OuterSubscriber.js\nvar OuterSubscriber = __webpack_require__(\"l7GE\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/util/subscribeToResult.js + 1 modules\nvar subscribeToResult = __webpack_require__(\"ZUHj\");\n\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/observable/race.js\n\n\n\n\nfunction race(...observables) {\n    if (observables.length === 1) {\n        if (Object(isArray[\"a\" /* isArray */])(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return Object(fromArray[\"a\" /* fromArray */])(observables, undefined).lift(new RaceOperator());\n}\nclass RaceOperator {\n    call(subscriber, source) {\n        return source.subscribe(new race_RaceSubscriber(subscriber));\n    }\n}\nclass race_RaceSubscriber extends OuterSubscriber[\"a\" /* OuterSubscriber */] {\n    constructor(destination) {\n        super(destination);\n        this.hasFirst = false;\n        this.observables = [];\n        this.subscriptions = [];\n    }\n    _next(observable) {\n        this.observables.push(observable);\n    }\n    _complete() {\n        const observables = this.observables;\n        const len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (let i = 0; i < len && !this.hasFirst; i++) {\n                const observable = observables[i];\n                const subscription = Object(subscribeToResult[\"a\" /* subscribeToResult */])(this, observable, undefined, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    }\n    notifyNext(_outerValue, innerValue, outerIndex) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (let i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    let subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    }\n}\n//# sourceMappingURL=race.js.map\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/startWith.js\nvar startWith = __webpack_require__(\"JX91\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/Subscriber.js\nvar Subscriber = __webpack_require__(\"7o/Q\");\n\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/operators/distinctUntilChanged.js\n\nfunction distinctUntilChanged(compare, keySelector) {\n    return (source) => source.lift(new DistinctUntilChangedOperator(compare, keySelector));\n}\nclass DistinctUntilChangedOperator {\n    constructor(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new distinctUntilChanged_DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    }\n}\nclass distinctUntilChanged_DistinctUntilChangedSubscriber extends Subscriber[\"a\" /* Subscriber */] {\n    constructor(destination, compare, keySelector) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    compare(x, y) {\n        return x === y;\n    }\n    _next(value) {\n        let key;\n        try {\n            const { keySelector } = this;\n            key = keySelector ? keySelector(value) : value;\n        }\n        catch (err) {\n            return this.destination.error(err);\n        }\n        let result = false;\n        if (this.hasKey) {\n            try {\n                const { compare } = this;\n                result = compare(this.key, key);\n            }\n            catch (err) {\n                return this.destination.error(err);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (!result) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    }\n}\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/switchMap.js\nvar switchMap = __webpack_require__(\"eIep\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/innerSubscribe.js\nvar innerSubscribe = __webpack_require__(\"zx2A\");\n\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/operators/takeUntil.js\n\nfunction takeUntil(notifier) {\n    return (source) => source.lift(new takeUntil_TakeUntilOperator(notifier));\n}\nclass takeUntil_TakeUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const takeUntilSubscriber = new takeUntil_TakeUntilSubscriber(subscriber);\n        const notifierSubscription = Object(innerSubscribe[\"c\" /* innerSubscribe */])(this.notifier, new innerSubscribe[\"a\" /* SimpleInnerSubscriber */](takeUntilSubscriber));\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    }\n}\nclass takeUntil_TakeUntilSubscriber extends innerSubscribe[\"b\" /* SimpleOuterSubscriber */] {\n    constructor(destination) {\n        super(destination);\n        this.seenValue = false;\n    }\n    notifyNext() {\n        this.seenValue = true;\n        this.complete();\n    }\n    notifyComplete() {\n    }\n}\n//# sourceMappingURL=takeUntil.js.map\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/filter.js\nvar filter = __webpack_require__(\"pLZG\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/take.js\nvar take = __webpack_require__(\"IzEk\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/tap.js\nvar tap = __webpack_require__(\"vkgz\");\n\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js\n\n\nfunction withLatestFrom(...args) {\n    return (source) => {\n        let project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        const observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nclass WithLatestFromOperator {\n    constructor(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new withLatestFrom_WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    }\n}\nclass withLatestFrom_WithLatestFromSubscriber extends OuterSubscriber[\"a\" /* OuterSubscriber */] {\n    constructor(destination, observables, project) {\n        super(destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        const len = observables.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (let i = 0; i < len; i++) {\n            let observable = observables[i];\n            this.add(Object(subscribeToResult[\"a\" /* subscribeToResult */])(this, observable, undefined, i));\n        }\n    }\n    notifyNext(_outerValue, innerValue, outerIndex) {\n        this.values[outerIndex] = innerValue;\n        const toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            const found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    }\n    notifyComplete() {\n    }\n    _next(value) {\n        if (this.toRespond.length === 0) {\n            const args = [value, ...this.values];\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    }\n    _tryProject(args) {\n        let result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=withLatestFrom.js.map\n\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/util/isDate.js\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n//# sourceMappingURL=isDate.js.map\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/Notification.js + 1 modules\nvar Notification = __webpack_require__(\"WMd4\");\n\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/operators/delay.js\n\n\n\n\nfunction delay_delay(delay, scheduler = async_async) {\n    const absoluteDelay = isDate(delay);\n    const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return (source) => source.lift(new DelayOperator(delayFor, scheduler));\n}\nclass DelayOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new delay_DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n}\nclass delay_DelaySubscriber extends Subscriber[\"a\" /* Subscriber */] {\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    static dispatch(state) {\n        const source = state.source;\n        const queue = source.queue;\n        const scheduler = state.scheduler;\n        const destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            const delay = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    }\n    _schedule(scheduler) {\n        this.active = true;\n        const destination = this.destination;\n        destination.add(scheduler.schedule(delay_DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    }\n    scheduleNotification(notification) {\n        if (this.errored === true) {\n            return;\n        }\n        const scheduler = this.scheduler;\n        const message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    }\n    _next(value) {\n        this.scheduleNotification(Notification[\"a\" /* Notification */].createNext(value));\n    }\n    _error(err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleNotification(Notification[\"a\" /* Notification */].createComplete());\n        this.unsubscribe();\n    }\n}\nclass DelayMessage {\n    constructor(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n}\n//# sourceMappingURL=delay.js.map\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/share.js + 1 modules\nvar share = __webpack_require__(\"w1tV\");\n\n// CONCATENATED MODULE: ./node_modules/@ng-bootstrap/ng-bootstrap/__ivy_ngcc__/fesm2015/ng-bootstrap.js\n\n\n\n\n\n\n\n\n\nfunction NgbAccordion_ng_template_0_ng_template_2_Template(rf, ctx) { }\nfunction NgbAccordion_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"button\", 3);\n        core[\"Ac\" /* ɵɵtext */](1);\n        core[\"yc\" /* ɵɵtemplate */](2, NgbAccordion_ng_template_0_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const panel_r3 = ctx.$implicit;\n        core[\"kc\" /* ɵɵproperty */](\"ngbPanelToggle\", panel_r3);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Cc\" /* ɵɵtextInterpolate1 */](\" \", panel_r3.title, \"\");\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", panel_r3.titleTpl == null ? null : panel_r3.titleTpl.templateRef);\n    }\n}\nfunction NgbAccordion_ng_template_2_ng_template_2_Template(rf, ctx) { }\nfunction NgbAccordion_ng_template_2_div_3_ng_template_2_Template(rf, ctx) { }\nfunction NgbAccordion_ng_template_2_div_3_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 8);\n        core[\"Sb\" /* ɵɵelementStart */](1, \"div\", 9);\n        core[\"yc\" /* ɵɵtemplate */](2, NgbAccordion_ng_template_2_div_3_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const panel_r5 = core[\"ec\" /* ɵɵnextContext */]().$implicit;\n        core[\"Fb\" /* ɵɵclassProp */](\"show\", panel_r5.isOpen);\n        core[\"lc\" /* ɵɵpropertyInterpolate */](\"id\", panel_r5.id);\n        core[\"Bb\" /* ɵɵattribute */](\"aria-labelledby\", panel_r5.id + \"-header\");\n        core[\"Ab\" /* ɵɵadvance */](2);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", (panel_r5.contentTpl == null ? null : panel_r5.contentTpl.templateRef) || null);\n    }\n}\nconst _c0 = function (a0, a1) { return { $implicit: a0, opened: a1 }; };\nfunction NgbAccordion_ng_template_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"div\");\n        core[\"Sb\" /* ɵɵelementStart */](1, \"div\", 5);\n        core[\"yc\" /* ɵɵtemplate */](2, NgbAccordion_ng_template_2_ng_template_2_Template, 0, 0, \"ng-template\", 6);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"yc\" /* ɵɵtemplate */](3, NgbAccordion_ng_template_2_div_3_Template, 3, 5, \"div\", 7);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const panel_r5 = ctx.$implicit;\n        const ctx_r2 = core[\"ec\" /* ɵɵnextContext */]();\n        const _r0 = core[\"sc\" /* ɵɵreference */](1);\n        core[\"Cb\" /* ɵɵclassMap */](\"card \" + (panel_r5.cardClass || \"\"));\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Cb\" /* ɵɵclassMap */](\"card-header \" + (panel_r5.type ? \"bg-\" + panel_r5.type : ctx_r2.type ? \"bg-\" + ctx_r2.type : \"\"));\n        core[\"mc\" /* ɵɵpropertyInterpolate1 */](\"id\", \"\", panel_r5.id, \"-header\");\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", (panel_r5.headerTpl == null ? null : panel_r5.headerTpl.templateRef) || _r0)(\"ngTemplateOutletContext\", core[\"pc\" /* ɵɵpureFunction2 */](8, _c0, panel_r5, panel_r5.isOpen));\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngIf\", !ctx_r2.destroyOnHide || panel_r5.isOpen);\n    }\n}\nfunction NgbAlert_button_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r2 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"button\", 1);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbAlert_button_1_Template_button_click_0_listener() { core[\"tc\" /* ɵɵrestoreView */](_r2); const ctx_r1 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r1.closeHandler(); });\n        core[\"Sb\" /* ɵɵelementStart */](1, \"span\", 2);\n        core[\"Ac\" /* ɵɵtext */](2, \"\\u00D7\");\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n}\nconst _c3 = [\"*\"];\nfunction NgbCarousel_ol_0_li_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r7 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"li\", 7);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbCarousel_ol_0_li_1_Template_li_click_0_listener() { core[\"tc\" /* ɵɵrestoreView */](_r7); const slide_r5 = ctx.$implicit; const ctx_r6 = core[\"ec\" /* ɵɵnextContext */](2); return ctx_r6.select(slide_r5.id, ctx_r6.NgbSlideEventSource.INDICATOR); });\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const slide_r5 = ctx.$implicit;\n        const ctx_r4 = core[\"ec\" /* ɵɵnextContext */](2);\n        core[\"Fb\" /* ɵɵclassProp */](\"active\", slide_r5.id === ctx_r4.activeId);\n        core[\"kc\" /* ɵɵproperty */](\"id\", slide_r5.id);\n    }\n}\nfunction NgbCarousel_ol_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"ol\", 5);\n        core[\"yc\" /* ɵɵtemplate */](1, NgbCarousel_ol_0_li_1_Template, 1, 3, \"li\", 6);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r0 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngForOf\", ctx_r0.slides);\n    }\n}\nfunction NgbCarousel_div_2_ng_template_1_Template(rf, ctx) { }\nfunction NgbCarousel_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 8);\n        core[\"yc\" /* ɵɵtemplate */](1, NgbCarousel_div_2_ng_template_1_Template, 0, 0, \"ng-template\", 9);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const slide_r8 = ctx.$implicit;\n        const ctx_r1 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Fb\" /* ɵɵclassProp */](\"active\", slide_r8.id === ctx_r1.activeId);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", slide_r8.tplRef);\n    }\n}\nfunction NgbCarousel_a_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r11 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"a\", 10);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbCarousel_a_3_Template_a_click_0_listener() { core[\"tc\" /* ɵɵrestoreView */](_r11); const ctx_r10 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r10.prev(ctx_r10.NgbSlideEventSource.ARROW_LEFT); });\n        core[\"Ob\" /* ɵɵelement */](1, \"span\", 11);\n        core[\"Sb\" /* ɵɵelementStart */](2, \"span\", 12);\n        core[\"Wb\" /* ɵɵi18n */](3, 13);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction NgbCarousel_a_4_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r13 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"a\", 14);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbCarousel_a_4_Template_a_click_0_listener() { core[\"tc\" /* ɵɵrestoreView */](_r13); const ctx_r12 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r12.next(ctx_r12.NgbSlideEventSource.ARROW_RIGHT); });\n        core[\"Ob\" /* ɵɵelement */](1, \"span\", 15);\n        core[\"Sb\" /* ɵɵelementStart */](2, \"span\", 12);\n        core[\"Wb\" /* ɵɵi18n */](3, 16);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n}\nconst _c8 = [\"defaultDayTemplate\"];\nconst _c9 = [\"content\"];\nfunction NgbDatepicker_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ob\" /* ɵɵelement */](0, \"div\", 7);\n    }\n    if (rf & 2) {\n        const date_r8 = ctx.date;\n        const currentMonth_r9 = ctx.currentMonth;\n        const selected_r10 = ctx.selected;\n        const disabled_r11 = ctx.disabled;\n        const focused_r12 = ctx.focused;\n        core[\"kc\" /* ɵɵproperty */](\"date\", date_r8)(\"currentMonth\", currentMonth_r9)(\"selected\", selected_r10)(\"disabled\", disabled_r11)(\"focused\", focused_r12);\n    }\n}\nfunction NgbDatepicker_ng_template_2_div_0_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 12);\n        core[\"Ac\" /* ɵɵtext */](1);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const month_r14 = core[\"ec\" /* ɵɵnextContext */]().$implicit;\n        const ctx_r16 = core[\"ec\" /* ɵɵnextContext */](2);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Dc\" /* ɵɵtextInterpolate2 */](\" \", ctx_r16.i18n.getMonthFullName(month_r14.number, month_r14.year), \" \", ctx_r16.i18n.getYearNumerals(month_r14.year), \" \");\n    }\n}\nfunction NgbDatepicker_ng_template_2_div_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 9);\n        core[\"yc\" /* ɵɵtemplate */](1, NgbDatepicker_ng_template_2_div_0_div_1_Template, 2, 2, \"div\", 10);\n        core[\"Ob\" /* ɵɵelement */](2, \"ngb-datepicker-month\", 11);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const month_r14 = ctx.$implicit;\n        const ctx_r13 = core[\"ec\" /* ɵɵnextContext */](2);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx_r13.navigation === \"none\" || ctx_r13.displayMonths > 1 && ctx_r13.navigation === \"select\");\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"month\", month_r14.firstDate);\n    }\n}\nfunction NgbDatepicker_ng_template_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"yc\" /* ɵɵtemplate */](0, NgbDatepicker_ng_template_2_div_0_Template, 3, 2, \"div\", 8);\n    }\n    if (rf & 2) {\n        const ctx_r3 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"kc\" /* ɵɵproperty */](\"ngForOf\", ctx_r3.model.months);\n    }\n}\nfunction NgbDatepicker_ngb_datepicker_navigation_5_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r19 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"ngb-datepicker-navigation\", 13);\n        core[\"cc\" /* ɵɵlistener */](\"navigate\", function NgbDatepicker_ngb_datepicker_navigation_5_Template_ngb_datepicker_navigation_navigate_0_listener($event) { core[\"tc\" /* ɵɵrestoreView */](_r19); const ctx_r18 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r18.onNavigateEvent($event); })(\"select\", function NgbDatepicker_ngb_datepicker_navigation_5_Template_ngb_datepicker_navigation_select_0_listener($event) { core[\"tc\" /* ɵɵrestoreView */](_r19); const ctx_r20 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r20.onNavigateDateSelect($event); });\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r4 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"kc\" /* ɵɵproperty */](\"date\", ctx_r4.model.firstDate)(\"months\", ctx_r4.model.months)(\"disabled\", ctx_r4.model.disabled)(\"showSelect\", ctx_r4.model.navigation === \"select\")(\"prevDisabled\", ctx_r4.model.prevDisabled)(\"nextDisabled\", ctx_r4.model.nextDisabled)(\"selectBoxes\", ctx_r4.model.selectBoxes);\n    }\n}\nfunction NgbDatepicker_ng_template_8_Template(rf, ctx) { }\nfunction NgbDatepicker_ng_template_9_Template(rf, ctx) { }\nfunction NgbDatepickerMonth_div_0_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ob\" /* ɵɵelement */](0, \"div\", 5);\n    }\n}\nfunction NgbDatepickerMonth_div_0_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 6);\n        core[\"Ac\" /* ɵɵtext */](1);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const w_r4 = ctx.$implicit;\n        const ctx_r3 = core[\"ec\" /* ɵɵnextContext */](2);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Cc\" /* ɵɵtextInterpolate1 */](\" \", ctx_r3.i18n.getWeekdayShortName(w_r4), \" \");\n    }\n}\nfunction NgbDatepickerMonth_div_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 2);\n        core[\"yc\" /* ɵɵtemplate */](1, NgbDatepickerMonth_div_0_div_1_Template, 1, 0, \"div\", 3);\n        core[\"yc\" /* ɵɵtemplate */](2, NgbDatepickerMonth_div_0_div_2_Template, 2, 1, \"div\", 4);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r0 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx_r0.datepicker.showWeekNumbers);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngForOf\", ctx_r0.viewModel.weekdays);\n    }\n}\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 11);\n        core[\"Ac\" /* ɵɵtext */](1);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const week_r5 = core[\"ec\" /* ɵɵnextContext */](2).$implicit;\n        const ctx_r7 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Bc\" /* ɵɵtextInterpolate */](ctx_r7.i18n.getWeekNumerals(week_r5.number));\n    }\n}\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template(rf, ctx) { }\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"yc\" /* ɵɵtemplate */](0, NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template, 0, 0, \"ng-template\", 14);\n    }\n    if (rf & 2) {\n        const day_r10 = core[\"ec\" /* ɵɵnextContext */]().$implicit;\n        const ctx_r11 = core[\"ec\" /* ɵɵnextContext */](3);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", ctx_r11.datepicker.dayTemplate)(\"ngTemplateOutletContext\", day_r10.context);\n    }\n}\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r15 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 12);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbDatepickerMonth_ng_template_1_div_0_div_2_Template_div_click_0_listener($event) { core[\"tc\" /* ɵɵrestoreView */](_r15); const day_r10 = ctx.$implicit; const ctx_r14 = core[\"ec\" /* ɵɵnextContext */](3); ctx_r14.doSelect(day_r10); return $event.preventDefault(); });\n        core[\"yc\" /* ɵɵtemplate */](1, NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_Template, 1, 2, \"ng-template\", 13);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const day_r10 = ctx.$implicit;\n        core[\"Fb\" /* ɵɵclassProp */](\"disabled\", day_r10.context.disabled)(\"hidden\", day_r10.hidden)(\"ngb-dp-today\", day_r10.context.today);\n        core[\"kc\" /* ɵɵproperty */](\"tabindex\", day_r10.tabindex);\n        core[\"Bb\" /* ɵɵattribute */](\"aria-label\", day_r10.ariaLabel);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngIf\", !day_r10.hidden);\n    }\n}\nfunction NgbDatepickerMonth_ng_template_1_div_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 8);\n        core[\"yc\" /* ɵɵtemplate */](1, NgbDatepickerMonth_ng_template_1_div_0_div_1_Template, 2, 1, \"div\", 9);\n        core[\"yc\" /* ɵɵtemplate */](2, NgbDatepickerMonth_ng_template_1_div_0_div_2_Template, 2, 9, \"div\", 10);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const week_r5 = core[\"ec\" /* ɵɵnextContext */]().$implicit;\n        const ctx_r6 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx_r6.datepicker.showWeekNumbers);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngForOf\", week_r5.days);\n    }\n}\nfunction NgbDatepickerMonth_ng_template_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"yc\" /* ɵɵtemplate */](0, NgbDatepickerMonth_ng_template_1_div_0_Template, 3, 2, \"div\", 7);\n    }\n    if (rf & 2) {\n        const week_r5 = ctx.$implicit;\n        core[\"kc\" /* ɵɵproperty */](\"ngIf\", !week_r5.collapsed);\n    }\n}\nfunction NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r3 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"ngb-datepicker-navigation-select\", 7);\n        core[\"cc\" /* ɵɵlistener */](\"select\", function NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template_ngb_datepicker_navigation_select_select_0_listener($event) { core[\"tc\" /* ɵɵrestoreView */](_r3); const ctx_r2 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r2.select.emit($event); });\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r0 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"kc\" /* ɵɵproperty */](\"date\", ctx_r0.date)(\"disabled\", ctx_r0.disabled)(\"months\", ctx_r0.selectBoxes.months)(\"years\", ctx_r0.selectBoxes.years);\n    }\n}\nfunction NgbDatepickerNavigation_4_ng_template_0_div_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ob\" /* ɵɵelement */](0, \"div\", 0);\n    }\n}\nfunction NgbDatepickerNavigation_4_ng_template_0_div_3_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ob\" /* ɵɵelement */](0, \"div\", 0);\n    }\n}\nfunction NgbDatepickerNavigation_4_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"yc\" /* ɵɵtemplate */](0, NgbDatepickerNavigation_4_ng_template_0_div_0_Template, 1, 0, \"div\", 9);\n        core[\"Sb\" /* ɵɵelementStart */](1, \"div\", 10);\n        core[\"Ac\" /* ɵɵtext */](2);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"yc\" /* ɵɵtemplate */](3, NgbDatepickerNavigation_4_ng_template_0_div_3_Template, 1, 0, \"div\", 9);\n    }\n    if (rf & 2) {\n        const month_r5 = ctx.$implicit;\n        const i_r6 = ctx.index;\n        const ctx_r4 = core[\"ec\" /* ɵɵnextContext */](2);\n        core[\"kc\" /* ɵɵproperty */](\"ngIf\", i_r6 > 0);\n        core[\"Ab\" /* ɵɵadvance */](2);\n        core[\"Dc\" /* ɵɵtextInterpolate2 */](\" \", ctx_r4.i18n.getMonthFullName(month_r5.number, month_r5.year), \" \", ctx_r4.i18n.getYearNumerals(month_r5.year), \" \");\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngIf\", i_r6 !== ctx_r4.months.length - 1);\n    }\n}\nfunction NgbDatepickerNavigation_4_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"yc\" /* ɵɵtemplate */](0, NgbDatepickerNavigation_4_ng_template_0_Template, 4, 4, \"ng-template\", 8);\n    }\n    if (rf & 2) {\n        const ctx_r1 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"kc\" /* ɵɵproperty */](\"ngForOf\", ctx_r1.months);\n    }\n}\nconst _c18 = [\"ngbDatepickerDayView\", \"\"];\nconst _c19 = [\"month\"];\nconst _c20 = [\"year\"];\nfunction NgbDatepickerNavigationSelect_option_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"option\", 5);\n        core[\"Ac\" /* ɵɵtext */](1);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const m_r4 = ctx.$implicit;\n        const ctx_r1 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"kc\" /* ɵɵproperty */](\"value\", m_r4);\n        core[\"Bb\" /* ɵɵattribute */](\"aria-label\", ctx_r1.i18n.getMonthFullName(m_r4, ctx_r1.date == null ? null : ctx_r1.date.year));\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Bc\" /* ɵɵtextInterpolate */](ctx_r1.i18n.getMonthShortName(m_r4, ctx_r1.date == null ? null : ctx_r1.date.year));\n    }\n}\nfunction NgbDatepickerNavigationSelect_option_5_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"option\", 5);\n        core[\"Ac\" /* ɵɵtext */](1);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const y_r5 = ctx.$implicit;\n        const ctx_r3 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"kc\" /* ɵɵproperty */](\"value\", y_r5);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Bc\" /* ɵɵtextInterpolate */](ctx_r3.i18n.getYearNumerals(y_r5));\n    }\n}\nconst _c29 = [\"dialog\"];\nconst _c30 = [\"ngbNavOutlet\", \"\"];\nfunction NgbNavOutlet_ng_template_0_div_0_ng_template_1_Template(rf, ctx) { }\nconst _c31 = function (a0) { return { $implicit: a0 }; };\nfunction NgbNavOutlet_ng_template_0_div_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 2);\n        core[\"yc\" /* ɵɵtemplate */](1, NgbNavOutlet_ng_template_0_div_0_ng_template_1_Template, 0, 0, \"ng-template\", 3);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const item_r1 = core[\"ec\" /* ɵɵnextContext */]().$implicit;\n        const ctx_r2 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Fb\" /* ɵɵclassProp */](\"active\", item_r1.active);\n        core[\"kc\" /* ɵɵproperty */](\"id\", item_r1.panelDomId);\n        core[\"Bb\" /* ɵɵattribute */](\"role\", ctx_r2.paneRole ? ctx_r2.paneRole : ctx_r2.nav.roles ? \"tabpanel\" : undefined)(\"aria-labelledby\", item_r1.domId);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", (item_r1.contentTpl == null ? null : item_r1.contentTpl.templateRef) || null)(\"ngTemplateOutletContext\", core[\"oc\" /* ɵɵpureFunction1 */](7, _c31, item_r1.active));\n    }\n}\nfunction NgbNavOutlet_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"yc\" /* ɵɵtemplate */](0, NgbNavOutlet_ng_template_0_div_0_Template, 2, 9, \"div\", 1);\n    }\n    if (rf & 2) {\n        const item_r1 = ctx.$implicit;\n        core[\"kc\" /* ɵɵproperty */](\"ngIf\", item_r1.isPanelInDom());\n    }\n}\nfunction NgbPagination_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"span\", 8);\n        core[\"Wb\" /* ɵɵi18n */](1, 9);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction NgbPagination_ng_template_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"span\", 8);\n        core[\"Wb\" /* ɵɵi18n */](1, 10);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction NgbPagination_ng_template_4_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"span\", 8);\n        core[\"Wb\" /* ɵɵi18n */](1, 11);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction NgbPagination_ng_template_6_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"span\", 8);\n        core[\"Wb\" /* ɵɵi18n */](1, 12);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction NgbPagination_ng_template_8_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ac\" /* ɵɵtext */](0, \"...\");\n    }\n}\nfunction NgbPagination_ng_template_10_span_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"span\", 14);\n        core[\"Ac\" /* ɵɵtext */](1, \"(current)\");\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction NgbPagination_ng_template_10_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ac\" /* ɵɵtext */](0);\n        core[\"yc\" /* ɵɵtemplate */](1, NgbPagination_ng_template_10_span_1_Template, 2, 0, \"span\", 13);\n    }\n    if (rf & 2) {\n        const page_r17 = ctx.$implicit;\n        const currentPage_r18 = ctx.currentPage;\n        core[\"Cc\" /* ɵɵtextInterpolate1 */](\" \", page_r17, \" \");\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngIf\", page_r17 === currentPage_r18);\n    }\n}\nfunction NgbPagination_li_13_ng_template_2_Template(rf, ctx) { }\nconst _c42 = function (a0, a1) { return { disabled: a0, currentPage: a1 }; };\nfunction NgbPagination_li_13_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r22 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"li\", 15);\n        core[\"Sb\" /* ɵɵelementStart */](1, \"a\", 16);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbPagination_li_13_Template_a_click_1_listener($event) { core[\"tc\" /* ɵɵrestoreView */](_r22); const ctx_r21 = core[\"ec\" /* ɵɵnextContext */](); ctx_r21.selectPage(1); return $event.preventDefault(); });\n        core[\"yc\" /* ɵɵtemplate */](2, NgbPagination_li_13_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r12 = core[\"ec\" /* ɵɵnextContext */]();\n        const _r0 = core[\"sc\" /* ɵɵreference */](1);\n        core[\"Fb\" /* ɵɵclassProp */](\"disabled\", ctx_r12.previousDisabled());\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Bb\" /* ɵɵattribute */](\"tabindex\", ctx_r12.previousDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r12.previousDisabled() ? \"true\" : null);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", (ctx_r12.tplFirst == null ? null : ctx_r12.tplFirst.templateRef) || _r0)(\"ngTemplateOutletContext\", core[\"pc\" /* ɵɵpureFunction2 */](6, _c42, ctx_r12.previousDisabled(), ctx_r12.page));\n    }\n}\nfunction NgbPagination_li_14_ng_template_2_Template(rf, ctx) { }\nconst _c45 = function (a0) { return { disabled: a0 }; };\nfunction NgbPagination_li_14_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r25 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"li\", 15);\n        core[\"Sb\" /* ɵɵelementStart */](1, \"a\", 18);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbPagination_li_14_Template_a_click_1_listener($event) { core[\"tc\" /* ɵɵrestoreView */](_r25); const ctx_r24 = core[\"ec\" /* ɵɵnextContext */](); ctx_r24.selectPage(ctx_r24.page - 1); return $event.preventDefault(); });\n        core[\"yc\" /* ɵɵtemplate */](2, NgbPagination_li_14_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r13 = core[\"ec\" /* ɵɵnextContext */]();\n        const _r2 = core[\"sc\" /* ɵɵreference */](3);\n        core[\"Fb\" /* ɵɵclassProp */](\"disabled\", ctx_r13.previousDisabled());\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Bb\" /* ɵɵattribute */](\"tabindex\", ctx_r13.previousDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r13.previousDisabled() ? \"true\" : null);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", (ctx_r13.tplPrevious == null ? null : ctx_r13.tplPrevious.templateRef) || _r2)(\"ngTemplateOutletContext\", core[\"oc\" /* ɵɵpureFunction1 */](6, _c45, ctx_r13.previousDisabled()));\n    }\n}\nfunction NgbPagination_li_15_a_1_ng_template_1_Template(rf, ctx) { }\nconst _c46 = function (a1) { return { disabled: true, currentPage: a1 }; };\nfunction NgbPagination_li_15_a_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"a\", 21);\n        core[\"yc\" /* ɵɵtemplate */](1, NgbPagination_li_15_a_1_ng_template_1_Template, 0, 0, \"ng-template\", 17);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r27 = core[\"ec\" /* ɵɵnextContext */](2);\n        const _r8 = core[\"sc\" /* ɵɵreference */](9);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", (ctx_r27.tplEllipsis == null ? null : ctx_r27.tplEllipsis.templateRef) || _r8)(\"ngTemplateOutletContext\", core[\"oc\" /* ɵɵpureFunction1 */](2, _c46, ctx_r27.page));\n    }\n}\nfunction NgbPagination_li_15_a_2_ng_template_1_Template(rf, ctx) { }\nconst _c47 = function (a0, a1, a2) { return { disabled: a0, $implicit: a1, currentPage: a2 }; };\nfunction NgbPagination_li_15_a_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r33 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"a\", 22);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbPagination_li_15_a_2_Template_a_click_0_listener($event) { core[\"tc\" /* ɵɵrestoreView */](_r33); const pageNumber_r26 = core[\"ec\" /* ɵɵnextContext */]().$implicit; const ctx_r31 = core[\"ec\" /* ɵɵnextContext */](); ctx_r31.selectPage(pageNumber_r26); return $event.preventDefault(); });\n        core[\"yc\" /* ɵɵtemplate */](1, NgbPagination_li_15_a_2_ng_template_1_Template, 0, 0, \"ng-template\", 17);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const pageNumber_r26 = core[\"ec\" /* ɵɵnextContext */]().$implicit;\n        const ctx_r28 = core[\"ec\" /* ɵɵnextContext */]();\n        const _r10 = core[\"sc\" /* ɵɵreference */](11);\n        core[\"Bb\" /* ɵɵattribute */](\"tabindex\", ctx_r28.disabled ? \"-1\" : null)(\"aria-disabled\", ctx_r28.disabled ? \"true\" : null);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", (ctx_r28.tplNumber == null ? null : ctx_r28.tplNumber.templateRef) || _r10)(\"ngTemplateOutletContext\", core[\"qc\" /* ɵɵpureFunction3 */](4, _c47, ctx_r28.disabled, pageNumber_r26, ctx_r28.page));\n    }\n}\nfunction NgbPagination_li_15_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"li\", 15);\n        core[\"yc\" /* ɵɵtemplate */](1, NgbPagination_li_15_a_1_Template, 2, 4, \"a\", 19);\n        core[\"yc\" /* ɵɵtemplate */](2, NgbPagination_li_15_a_2_Template, 2, 8, \"a\", 20);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const pageNumber_r26 = ctx.$implicit;\n        const ctx_r14 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Fb\" /* ɵɵclassProp */](\"active\", pageNumber_r26 === ctx_r14.page)(\"disabled\", ctx_r14.isEllipsis(pageNumber_r26) || ctx_r14.disabled);\n        core[\"Bb\" /* ɵɵattribute */](\"aria-current\", pageNumber_r26 === ctx_r14.page ? \"page\" : null);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx_r14.isEllipsis(pageNumber_r26));\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngIf\", !ctx_r14.isEllipsis(pageNumber_r26));\n    }\n}\nfunction NgbPagination_li_16_ng_template_2_Template(rf, ctx) { }\nfunction NgbPagination_li_16_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r37 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"li\", 15);\n        core[\"Sb\" /* ɵɵelementStart */](1, \"a\", 23);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbPagination_li_16_Template_a_click_1_listener($event) { core[\"tc\" /* ɵɵrestoreView */](_r37); const ctx_r36 = core[\"ec\" /* ɵɵnextContext */](); ctx_r36.selectPage(ctx_r36.page + 1); return $event.preventDefault(); });\n        core[\"yc\" /* ɵɵtemplate */](2, NgbPagination_li_16_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r15 = core[\"ec\" /* ɵɵnextContext */]();\n        const _r4 = core[\"sc\" /* ɵɵreference */](5);\n        core[\"Fb\" /* ɵɵclassProp */](\"disabled\", ctx_r15.nextDisabled());\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Bb\" /* ɵɵattribute */](\"tabindex\", ctx_r15.nextDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r15.nextDisabled() ? \"true\" : null);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", (ctx_r15.tplNext == null ? null : ctx_r15.tplNext.templateRef) || _r4)(\"ngTemplateOutletContext\", core[\"pc\" /* ɵɵpureFunction2 */](6, _c42, ctx_r15.nextDisabled(), ctx_r15.page));\n    }\n}\nfunction NgbPagination_li_17_ng_template_2_Template(rf, ctx) { }\nfunction NgbPagination_li_17_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r40 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"li\", 15);\n        core[\"Sb\" /* ɵɵelementStart */](1, \"a\", 24);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbPagination_li_17_Template_a_click_1_listener($event) { core[\"tc\" /* ɵɵrestoreView */](_r40); const ctx_r39 = core[\"ec\" /* ɵɵnextContext */](); ctx_r39.selectPage(ctx_r39.pageCount); return $event.preventDefault(); });\n        core[\"yc\" /* ɵɵtemplate */](2, NgbPagination_li_17_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r16 = core[\"ec\" /* ɵɵnextContext */]();\n        const _r6 = core[\"sc\" /* ɵɵreference */](7);\n        core[\"Fb\" /* ɵɵclassProp */](\"disabled\", ctx_r16.nextDisabled());\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Bb\" /* ɵɵattribute */](\"tabindex\", ctx_r16.nextDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r16.nextDisabled() ? \"true\" : null);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", (ctx_r16.tplLast == null ? null : ctx_r16.tplLast.templateRef) || _r6)(\"ngTemplateOutletContext\", core[\"pc\" /* ɵɵpureFunction2 */](6, _c42, ctx_r16.nextDisabled(), ctx_r16.page));\n    }\n}\nfunction NgbPopoverWindow_h3_1_ng_template_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ac\" /* ɵɵtext */](0);\n    }\n    if (rf & 2) {\n        const ctx_r2 = core[\"ec\" /* ɵɵnextContext */](2);\n        core[\"Bc\" /* ɵɵtextInterpolate */](ctx_r2.title);\n    }\n}\nfunction NgbPopoverWindow_h3_1_ng_template_3_Template(rf, ctx) { }\nfunction NgbPopoverWindow_h3_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"h3\", 3);\n        core[\"yc\" /* ɵɵtemplate */](1, NgbPopoverWindow_h3_1_ng_template_1_Template, 1, 1, \"ng-template\", null, 4, core[\"zc\" /* ɵɵtemplateRefExtractor */]);\n        core[\"yc\" /* ɵɵtemplate */](3, NgbPopoverWindow_h3_1_ng_template_3_Template, 0, 0, \"ng-template\", 5);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const _r1 = core[\"sc\" /* ɵɵreference */](2);\n        const ctx_r0 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Ab\" /* ɵɵadvance */](3);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", ctx_r0.isTitleTemplate() ? ctx_r0.title : _r1)(\"ngTemplateOutletContext\", ctx_r0.context);\n    }\n}\nfunction NgbProgressbar_span_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"span\");\n        core[\"Wb\" /* ɵɵi18n */](1, 3);\n        core[\"fc\" /* ɵɵpipe */](2, \"percent\");\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r0 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Ab\" /* ɵɵadvance */](2);\n        core[\"Yb\" /* ɵɵi18nExp */](core[\"gc\" /* ɵɵpipeBind1 */](2, 1, ctx_r0.getValue() / ctx_r0.max));\n        core[\"Xb\" /* ɵɵi18nApply */](1);\n    }\n}\nfunction NgbRating_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ac\" /* ɵɵtext */](0);\n    }\n    if (rf & 2) {\n        const fill_r3 = ctx.fill;\n        core[\"Bc\" /* ɵɵtextInterpolate */](fill_r3 === 100 ? \"\\u2605\" : \"\\u2606\");\n    }\n}\nfunction NgbRating_ng_template_2_ng_template_3_Template(rf, ctx) { }\nfunction NgbRating_ng_template_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r7 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"span\", 2);\n        core[\"Ac\" /* ɵɵtext */](1);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Sb\" /* ɵɵelementStart */](2, \"span\", 3);\n        core[\"cc\" /* ɵɵlistener */](\"mouseenter\", function NgbRating_ng_template_2_Template_span_mouseenter_2_listener() { core[\"tc\" /* ɵɵrestoreView */](_r7); const index_r4 = ctx.index; const ctx_r6 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r6.enter(index_r4 + 1); })(\"click\", function NgbRating_ng_template_2_Template_span_click_2_listener() { core[\"tc\" /* ɵɵrestoreView */](_r7); const index_r4 = ctx.index; const ctx_r8 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r8.handleClick(index_r4 + 1); });\n        core[\"yc\" /* ɵɵtemplate */](3, NgbRating_ng_template_2_ng_template_3_Template, 0, 0, \"ng-template\", 4);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const index_r4 = ctx.index;\n        const ctx_r2 = core[\"ec\" /* ɵɵnextContext */]();\n        const _r0 = core[\"sc\" /* ɵɵreference */](1);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Cc\" /* ɵɵtextInterpolate1 */](\"(\", index_r4 < ctx_r2.nextRate ? \"*\" : \" \", \")\");\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"xc\" /* ɵɵstyleProp */](\"cursor\", ctx_r2.readonly || ctx_r2.disabled ? \"default\" : \"pointer\");\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", ctx_r2.starTemplate || ctx_r2.starTemplateFromContent || _r0)(\"ngTemplateOutletContext\", ctx_r2.contexts[index_r4]);\n    }\n}\nfunction NgbTabset_li_1_ng_template_3_Template(rf, ctx) { }\nfunction NgbTabset_li_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r5 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"li\", 4);\n        core[\"Sb\" /* ɵɵelementStart */](1, \"a\", 5);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbTabset_li_1_Template_a_click_1_listener($event) { core[\"tc\" /* ɵɵrestoreView */](_r5); const tab_r2 = ctx.$implicit; const ctx_r4 = core[\"ec\" /* ɵɵnextContext */](); ctx_r4.select(tab_r2.id); return $event.preventDefault(); });\n        core[\"Ac\" /* ɵɵtext */](2);\n        core[\"yc\" /* ɵɵtemplate */](3, NgbTabset_li_1_ng_template_3_Template, 0, 0, \"ng-template\", 6);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const tab_r2 = ctx.$implicit;\n        const ctx_r0 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Fb\" /* ɵɵclassProp */](\"active\", tab_r2.id === ctx_r0.activeId)(\"disabled\", tab_r2.disabled);\n        core[\"kc\" /* ɵɵproperty */](\"id\", tab_r2.id);\n        core[\"Bb\" /* ɵɵattribute */](\"tabindex\", tab_r2.disabled ? \"-1\" : undefined)(\"aria-controls\", !ctx_r0.destroyOnHide || tab_r2.id === ctx_r0.activeId ? tab_r2.id + \"-panel\" : null)(\"aria-selected\", tab_r2.id === ctx_r0.activeId)(\"aria-disabled\", tab_r2.disabled);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Cc\" /* ɵɵtextInterpolate1 */](\" \", tab_r2.title, \"\");\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", (tab_r2.titleTpl == null ? null : tab_r2.titleTpl.templateRef) || null);\n    }\n}\nfunction NgbTabset_ng_template_3_div_0_ng_template_1_Template(rf, ctx) { }\nfunction NgbTabset_ng_template_3_div_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 8);\n        core[\"yc\" /* ɵɵtemplate */](1, NgbTabset_ng_template_3_div_0_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const tab_r6 = core[\"ec\" /* ɵɵnextContext */]().$implicit;\n        const ctx_r7 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Db\" /* ɵɵclassMapInterpolate1 */](\"tab-pane \", tab_r6.id === ctx_r7.activeId ? \"active\" : null, \"\");\n        core[\"mc\" /* ɵɵpropertyInterpolate1 */](\"id\", \"\", tab_r6.id, \"-panel\");\n        core[\"Bb\" /* ɵɵattribute */](\"aria-labelledby\", tab_r6.id);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", (tab_r6.contentTpl == null ? null : tab_r6.contentTpl.templateRef) || null);\n    }\n}\nfunction NgbTabset_ng_template_3_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"yc\" /* ɵɵtemplate */](0, NgbTabset_ng_template_3_div_0_Template, 2, 6, \"div\", 7);\n    }\n    if (rf & 2) {\n        const tab_r6 = ctx.$implicit;\n        const ctx_r1 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"kc\" /* ɵɵproperty */](\"ngIf\", !ctx_r1.destroyOnHide || tab_r6.id === ctx_r1.activeId);\n    }\n}\nfunction NgbTimepicker_button_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r9 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"button\", 11);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbTimepicker_button_3_Template_button_click_0_listener() { core[\"tc\" /* ɵɵrestoreView */](_r9); const ctx_r8 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r8.changeHour(ctx_r8.hourStep); });\n        core[\"Ob\" /* ɵɵelement */](1, \"span\", 12);\n        core[\"Sb\" /* ɵɵelementStart */](2, \"span\", 13);\n        core[\"Wb\" /* ɵɵi18n */](3, 14);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r0 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Fb\" /* ɵɵclassProp */](\"btn-sm\", ctx_r0.isSmallSize)(\"btn-lg\", ctx_r0.isLargeSize)(\"disabled\", ctx_r0.disabled);\n        core[\"kc\" /* ɵɵproperty */](\"disabled\", ctx_r0.disabled);\n    }\n}\nfunction NgbTimepicker_button_5_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r11 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"button\", 11);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbTimepicker_button_5_Template_button_click_0_listener() { core[\"tc\" /* ɵɵrestoreView */](_r11); const ctx_r10 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r10.changeHour(-ctx_r10.hourStep); });\n        core[\"Ob\" /* ɵɵelement */](1, \"span\", 15);\n        core[\"Sb\" /* ɵɵelementStart */](2, \"span\", 13);\n        core[\"Wb\" /* ɵɵi18n */](3, 16);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r1 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Fb\" /* ɵɵclassProp */](\"btn-sm\", ctx_r1.isSmallSize)(\"btn-lg\", ctx_r1.isLargeSize)(\"disabled\", ctx_r1.disabled);\n        core[\"kc\" /* ɵɵproperty */](\"disabled\", ctx_r1.disabled);\n    }\n}\nfunction NgbTimepicker_button_9_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r13 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"button\", 11);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbTimepicker_button_9_Template_button_click_0_listener() { core[\"tc\" /* ɵɵrestoreView */](_r13); const ctx_r12 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r12.changeMinute(ctx_r12.minuteStep); });\n        core[\"Ob\" /* ɵɵelement */](1, \"span\", 12);\n        core[\"Sb\" /* ɵɵelementStart */](2, \"span\", 13);\n        core[\"Wb\" /* ɵɵi18n */](3, 17);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r2 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Fb\" /* ɵɵclassProp */](\"btn-sm\", ctx_r2.isSmallSize)(\"btn-lg\", ctx_r2.isLargeSize)(\"disabled\", ctx_r2.disabled);\n        core[\"kc\" /* ɵɵproperty */](\"disabled\", ctx_r2.disabled);\n    }\n}\nfunction NgbTimepicker_button_11_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r15 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"button\", 11);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbTimepicker_button_11_Template_button_click_0_listener() { core[\"tc\" /* ɵɵrestoreView */](_r15); const ctx_r14 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r14.changeMinute(-ctx_r14.minuteStep); });\n        core[\"Ob\" /* ɵɵelement */](1, \"span\", 15);\n        core[\"Sb\" /* ɵɵelementStart */](2, \"span\", 13);\n        core[\"Wb\" /* ɵɵi18n */](3, 18);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r3 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Fb\" /* ɵɵclassProp */](\"btn-sm\", ctx_r3.isSmallSize)(\"btn-lg\", ctx_r3.isLargeSize)(\"disabled\", ctx_r3.disabled);\n        core[\"kc\" /* ɵɵproperty */](\"disabled\", ctx_r3.disabled);\n    }\n}\nfunction NgbTimepicker_div_12_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 5);\n        core[\"Ac\" /* ɵɵtext */](1, \":\");\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction NgbTimepicker_div_13_button_1_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r19 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"button\", 11);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbTimepicker_div_13_button_1_Template_button_click_0_listener() { core[\"tc\" /* ɵɵrestoreView */](_r19); const ctx_r18 = core[\"ec\" /* ɵɵnextContext */](2); return ctx_r18.changeSecond(ctx_r18.secondStep); });\n        core[\"Ob\" /* ɵɵelement */](1, \"span\", 12);\n        core[\"Sb\" /* ɵɵelementStart */](2, \"span\", 13);\n        core[\"Wb\" /* ɵɵi18n */](3, 21);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r16 = core[\"ec\" /* ɵɵnextContext */](2);\n        core[\"Fb\" /* ɵɵclassProp */](\"btn-sm\", ctx_r16.isSmallSize)(\"btn-lg\", ctx_r16.isLargeSize)(\"disabled\", ctx_r16.disabled);\n        core[\"kc\" /* ɵɵproperty */](\"disabled\", ctx_r16.disabled);\n    }\n}\nfunction NgbTimepicker_div_13_button_3_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r21 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"button\", 11);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbTimepicker_div_13_button_3_Template_button_click_0_listener() { core[\"tc\" /* ɵɵrestoreView */](_r21); const ctx_r20 = core[\"ec\" /* ɵɵnextContext */](2); return ctx_r20.changeSecond(-ctx_r20.secondStep); });\n        core[\"Ob\" /* ɵɵelement */](1, \"span\", 15);\n        core[\"Sb\" /* ɵɵelementStart */](2, \"span\", 13);\n        core[\"Wb\" /* ɵɵi18n */](3, 22);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r17 = core[\"ec\" /* ɵɵnextContext */](2);\n        core[\"Fb\" /* ɵɵclassProp */](\"btn-sm\", ctx_r17.isSmallSize)(\"btn-lg\", ctx_r17.isLargeSize)(\"disabled\", ctx_r17.disabled);\n        core[\"kc\" /* ɵɵproperty */](\"disabled\", ctx_r17.disabled);\n    }\n}\nfunction NgbTimepicker_div_13_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r23 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 19);\n        core[\"yc\" /* ɵɵtemplate */](1, NgbTimepicker_div_13_button_1_Template, 4, 7, \"button\", 3);\n        core[\"Sb\" /* ɵɵelementStart */](2, \"input\", 20);\n        core[\"cc\" /* ɵɵlistener */](\"change\", function NgbTimepicker_div_13_Template_input_change_2_listener($event) { core[\"tc\" /* ɵɵrestoreView */](_r23); const ctx_r22 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r22.updateSecond($event.target.value); })(\"input\", function NgbTimepicker_div_13_Template_input_input_2_listener($event) { core[\"tc\" /* ɵɵrestoreView */](_r23); const ctx_r24 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r24.formatInput($event.target); })(\"keydown.ArrowUp\", function NgbTimepicker_div_13_Template_input_keydown_ArrowUp_2_listener($event) { core[\"tc\" /* ɵɵrestoreView */](_r23); const ctx_r25 = core[\"ec\" /* ɵɵnextContext */](); ctx_r25.changeSecond(ctx_r25.secondStep); return $event.preventDefault(); })(\"keydown.ArrowDown\", function NgbTimepicker_div_13_Template_input_keydown_ArrowDown_2_listener($event) { core[\"tc\" /* ɵɵrestoreView */](_r23); const ctx_r26 = core[\"ec\" /* ɵɵnextContext */](); ctx_r26.changeSecond(-ctx_r26.secondStep); return $event.preventDefault(); });\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"yc\" /* ɵɵtemplate */](3, NgbTimepicker_div_13_button_3_Template, 4, 7, \"button\", 3);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r5 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx_r5.spinners);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Fb\" /* ɵɵclassProp */](\"form-control-sm\", ctx_r5.isSmallSize)(\"form-control-lg\", ctx_r5.isLargeSize);\n        core[\"kc\" /* ɵɵproperty */](\"value\", ctx_r5.formatMinSec(ctx_r5.model == null ? null : ctx_r5.model.second))(\"readOnly\", ctx_r5.readonlyInputs)(\"disabled\", ctx_r5.disabled);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx_r5.spinners);\n    }\n}\nfunction NgbTimepicker_div_14_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ob\" /* ɵɵelement */](0, \"div\", 5);\n    }\n}\nfunction NgbTimepicker_div_15_ng_container_2_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Qb\" /* ɵɵelementContainerStart */](0);\n        core[\"Wb\" /* ɵɵi18n */](1, 27);\n        core[\"Pb\" /* ɵɵelementContainerEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r27 = core[\"ec\" /* ɵɵnextContext */](2);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Yb\" /* ɵɵi18nExp */](ctx_r27.i18n.getAfternoonPeriod());\n        core[\"Xb\" /* ɵɵi18nApply */](1);\n    }\n}\nfunction NgbTimepicker_div_15_ng_template_3_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Wb\" /* ɵɵi18n */](0, 28);\n    }\n    if (rf & 2) {\n        const ctx_r29 = core[\"ec\" /* ɵɵnextContext */](2);\n        core[\"Yb\" /* ɵɵi18nExp */](ctx_r29.i18n.getMorningPeriod());\n        core[\"Xb\" /* ɵɵi18nApply */](0);\n    }\n}\nfunction NgbTimepicker_div_15_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r31 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 23);\n        core[\"Sb\" /* ɵɵelementStart */](1, \"button\", 24);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbTimepicker_div_15_Template_button_click_1_listener() { core[\"tc\" /* ɵɵrestoreView */](_r31); const ctx_r30 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r30.toggleMeridian(); });\n        core[\"yc\" /* ɵɵtemplate */](2, NgbTimepicker_div_15_ng_container_2_Template, 2, 1, \"ng-container\", 25);\n        core[\"yc\" /* ɵɵtemplate */](3, NgbTimepicker_div_15_ng_template_3_Template, 1, 1, \"ng-template\", null, 26, core[\"zc\" /* ɵɵtemplateRefExtractor */]);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const _r28 = core[\"sc\" /* ɵɵreference */](4);\n        const ctx_r7 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Fb\" /* ɵɵclassProp */](\"btn-sm\", ctx_r7.isSmallSize)(\"btn-lg\", ctx_r7.isLargeSize)(\"disabled\", ctx_r7.disabled);\n        core[\"kc\" /* ɵɵproperty */](\"disabled\", ctx_r7.disabled);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx_r7.model && ctx_r7.model.hour >= 12)(\"ngIfElse\", _r28);\n    }\n}\nfunction NgbToast_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"strong\", 3);\n        core[\"Ac\" /* ɵɵtext */](1);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r1 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Bc\" /* ɵɵtextInterpolate */](ctx_r1.header);\n    }\n}\nfunction NgbToast_ng_template_2_ng_template_1_Template(rf, ctx) { }\nfunction NgbToast_ng_template_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r5 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 4);\n        core[\"yc\" /* ɵɵtemplate */](1, NgbToast_ng_template_2_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n        core[\"Sb\" /* ɵɵelementStart */](2, \"button\", 6);\n        core[\"cc\" /* ɵɵlistener */](\"click\", function NgbToast_ng_template_2_Template_button_click_2_listener() { core[\"tc\" /* ɵɵrestoreView */](_r5); const ctx_r4 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r4.hide(); });\n        core[\"Sb\" /* ɵɵelementStart */](3, \"span\", 7);\n        core[\"Ac\" /* ɵɵtext */](4, \"\\u00D7\");\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r2 = core[\"ec\" /* ɵɵnextContext */]();\n        const _r0 = core[\"sc\" /* ɵɵreference */](1);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", ctx_r2.contentHeaderTpl || _r0);\n    }\n}\nfunction NgbHighlight_ng_template_0_span_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Sb\" /* ɵɵelementStart */](0, \"span\");\n        core[\"Ac\" /* ɵɵtext */](1);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const part_r1 = core[\"ec\" /* ɵɵnextContext */]().$implicit;\n        const ctx_r3 = core[\"ec\" /* ɵɵnextContext */]();\n        core[\"Cb\" /* ɵɵclassMap */](ctx_r3.highlightClass);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"Bc\" /* ɵɵtextInterpolate */](part_r1);\n    }\n}\nfunction NgbHighlight_ng_template_0_ng_template_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ac\" /* ɵɵtext */](0);\n    }\n    if (rf & 2) {\n        const part_r1 = core[\"ec\" /* ɵɵnextContext */]().$implicit;\n        core[\"Bc\" /* ɵɵtextInterpolate */](part_r1);\n    }\n}\nfunction NgbHighlight_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"yc\" /* ɵɵtemplate */](0, NgbHighlight_ng_template_0_span_0_Template, 2, 3, \"span\", 1);\n        core[\"yc\" /* ɵɵtemplate */](1, NgbHighlight_ng_template_0_ng_template_1_Template, 1, 1, \"ng-template\", null, 2, core[\"zc\" /* ɵɵtemplateRefExtractor */]);\n    }\n    if (rf & 2) {\n        const isOdd_r2 = ctx.odd;\n        const _r4 = core[\"sc\" /* ɵɵreference */](2);\n        core[\"kc\" /* ɵɵproperty */](\"ngIf\", isOdd_r2)(\"ngIfElse\", _r4);\n    }\n}\nfunction NgbTypeaheadWindow_ng_template_0_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Ob\" /* ɵɵelement */](0, \"ngb-highlight\", 2);\n    }\n    if (rf & 2) {\n        const result_r3 = ctx.result;\n        const term_r4 = ctx.term;\n        const formatter_r5 = ctx.formatter;\n        core[\"kc\" /* ɵɵproperty */](\"result\", formatter_r5(result_r3))(\"term\", term_r4);\n    }\n}\nfunction NgbTypeaheadWindow_ng_template_2_ng_template_1_Template(rf, ctx) { }\nconst _c84 = function (a0, a1, a2) { return { result: a0, term: a1, formatter: a2 }; };\nfunction NgbTypeaheadWindow_ng_template_2_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r10 = core[\"Tb\" /* ɵɵgetCurrentView */]();\n        core[\"Sb\" /* ɵɵelementStart */](0, \"button\", 3);\n        core[\"cc\" /* ɵɵlistener */](\"mouseenter\", function NgbTypeaheadWindow_ng_template_2_Template_button_mouseenter_0_listener() { core[\"tc\" /* ɵɵrestoreView */](_r10); const idx_r7 = ctx.index; const ctx_r9 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r9.markActive(idx_r7); })(\"click\", function NgbTypeaheadWindow_ng_template_2_Template_button_click_0_listener() { core[\"tc\" /* ɵɵrestoreView */](_r10); const result_r6 = ctx.$implicit; const ctx_r11 = core[\"ec\" /* ɵɵnextContext */](); return ctx_r11.select(result_r6); });\n        core[\"yc\" /* ɵɵtemplate */](1, NgbTypeaheadWindow_ng_template_2_ng_template_1_Template, 0, 0, \"ng-template\", 4);\n        core[\"Rb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const result_r6 = ctx.$implicit;\n        const idx_r7 = ctx.index;\n        const ctx_r2 = core[\"ec\" /* ɵɵnextContext */]();\n        const _r0 = core[\"sc\" /* ɵɵreference */](1);\n        core[\"Fb\" /* ɵɵclassProp */](\"active\", idx_r7 === ctx_r2.activeIdx);\n        core[\"kc\" /* ɵɵproperty */](\"id\", ctx_r2.id + \"-\" + idx_r7);\n        core[\"Ab\" /* ɵɵadvance */](1);\n        core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", ctx_r2.resultTemplate || _r0)(\"ngTemplateOutletContext\", core[\"qc\" /* ɵɵpureFunction3 */](5, _c84, result_r6, ctx_r2.term, ctx_r2.formatter));\n    }\n}\nfunction toInteger(value) {\n    return parseInt(`${value}`, 10);\n}\nfunction ng_bootstrap_toString(value) {\n    return (value !== undefined && value !== null) ? `${value}` : '';\n}\nfunction getValueInRange(value, max, min = 0) {\n    return Math.max(Math.min(value, max), min);\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isNumber(value) {\n    return !isNaN(toInteger(value));\n}\nfunction isInteger(value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\nfunction padNumber(value) {\n    if (isNumber(value)) {\n        return `0${value}`.slice(-2);\n    }\n    else {\n        return '';\n    }\n}\nfunction regExpEscape(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\nfunction hasClassName(element, className) {\n    return element && element.className && element.className.split &&\n        element.className.split(/\\s+/).indexOf(className) >= 0;\n}\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\n    // Polyfill for ie10+\n    if (!Element.prototype.matches) {\n        // IE uses the non-standard name: msMatchesSelector\n        Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n    }\n    Element.prototype.closest = function (s) {\n        let el = this;\n        if (!document.documentElement.contains(el)) {\n            return null;\n        }\n        do {\n            if (el.matches(s)) {\n                return el;\n            }\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1);\n        return null;\n    };\n}\nfunction closest(element, selector) {\n    if (!selector) {\n        return null;\n    }\n    /*\n     * In certain browsers (e.g. Edge 44.18362.449.0) HTMLDocument does\n     * not support `Element.prototype.closest`. To emulate the correct behaviour\n     * we return null when the method is missing.\n     *\n     * Note that in evergreen browsers `closest(document.documentElement, 'html')`\n     * will return the document element whilst in Edge null will be returned. This\n     * compromise was deemed good enough.\n     */\n    if (typeof element.closest === 'undefined') {\n        return null;\n    }\n    return element.closest(selector);\n}\nlet ng_bootstrap_NgbAccordionConfig = /*@__PURE__*/ (() => {\n    /**\n     * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n     *\n     * You can inject this service, typically in your root component, and customize its properties\n     * to provide default values for all accordions used in the application.\n     */\n    let NgbAccordionConfig = class NgbAccordionConfig {\n        constructor() {\n            this.closeOthers = false;\n        }\n    };\n    NgbAccordionConfig.ɵfac = function NgbAccordionConfig_Factory(t) { return new (t || NgbAccordionConfig)(); };\n    NgbAccordionConfig.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbAccordionConfig_Factory() { return new NgbAccordionConfig(); }, token: NgbAccordionConfig, providedIn: \"root\" });\n    return NgbAccordionConfig;\n})();\nlet nextId = 0;\nlet ng_bootstrap_NgbPanelHeader = /*@__PURE__*/ (() => {\n    /**\n     * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n     * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n     * See the [header customization demo](#/components/accordion/examples#header) for more details.\n     *\n     * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n     *\n     * @since 4.1.0\n     */\n    let NgbPanelHeader = class NgbPanelHeader {\n        constructor(templateRef) {\n            this.templateRef = templateRef;\n        }\n    };\n    NgbPanelHeader.ɵfac = function NgbPanelHeader_Factory(t) { return new (t || NgbPanelHeader)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    NgbPanelHeader.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbPanelHeader, selectors: [[\"ng-template\", \"ngbPanelHeader\", \"\"]] });\n    return NgbPanelHeader;\n})();\nlet ng_bootstrap_NgbPanelTitle = /*@__PURE__*/ (() => {\n    /**\n     * A directive that wraps only the panel title with HTML markup inside.\n     *\n     * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n     */\n    let NgbPanelTitle = class NgbPanelTitle {\n        constructor(templateRef) {\n            this.templateRef = templateRef;\n        }\n    };\n    NgbPanelTitle.ɵfac = function NgbPanelTitle_Factory(t) { return new (t || NgbPanelTitle)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    NgbPanelTitle.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbPanelTitle, selectors: [[\"ng-template\", \"ngbPanelTitle\", \"\"]] });\n    return NgbPanelTitle;\n})();\nlet ng_bootstrap_NgbPanelContent = /*@__PURE__*/ (() => {\n    /**\n     * A directive that wraps the accordion panel content.\n     */\n    let NgbPanelContent = class NgbPanelContent {\n        constructor(templateRef) {\n            this.templateRef = templateRef;\n        }\n    };\n    NgbPanelContent.ɵfac = function NgbPanelContent_Factory(t) { return new (t || NgbPanelContent)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    NgbPanelContent.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbPanelContent, selectors: [[\"ng-template\", \"ngbPanelContent\", \"\"]] });\n    return NgbPanelContent;\n})();\nlet ng_bootstrap_NgbPanel = /*@__PURE__*/ (() => {\n    /**\n     * A directive that wraps an individual accordion panel with title and collapsible content.\n     */\n    let NgbPanel = class NgbPanel {\n        constructor() {\n            /**\n             *  If `true`, the panel is disabled an can't be toggled.\n             */\n            this.disabled = false;\n            /**\n             *  An optional id for the panel that must be unique on the page.\n             *\n             *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n             */\n            this.id = `ngb-panel-${nextId++}`;\n            this.isOpen = false;\n        }\n        ngAfterContentChecked() {\n            // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n            // only @ContentChildren allows us to specify the {descendants: false} option.\n            // Without {descendants: false} we are hitting bugs described in:\n            // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n            this.titleTpl = this.titleTpls.first;\n            this.headerTpl = this.headerTpls.first;\n            this.contentTpl = this.contentTpls.first;\n        }\n    };\n    NgbPanel.ɵfac = function NgbPanel_Factory(t) { return new (t || NgbPanel)(); };\n    NgbPanel.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbPanel, selectors: [[\"ngb-panel\"]], contentQueries: function NgbPanel_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbPanelTitle, 0);\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbPanelHeader, 0);\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbPanelContent, 0);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.titleTpls = _t);\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.headerTpls = _t);\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.contentTpls = _t);\n            }\n        }, inputs: { disabled: \"disabled\", id: \"id\", title: \"title\", type: \"type\", cardClass: \"cardClass\" } });\n    return NgbPanel;\n})();\nlet ng_bootstrap_NgbAccordion = /*@__PURE__*/ (() => {\n    /**\n     * Accordion is a collection of collapsible panels (bootstrap cards).\n     *\n     * It can ensure only one panel is opened at a time and allows to customize panel\n     * headers.\n     */\n    let NgbAccordion = class NgbAccordion {\n        constructor(config) {\n            /**\n             * An array or comma separated strings of panel ids that should be opened **initially**.\n             *\n             * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n             * the `(panelChange)` event.\n             */\n            this.activeIds = [];\n            /**\n             * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n             */\n            this.destroyOnHide = true;\n            /**\n             * Event emitted right before the panel toggle happens.\n             *\n             * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n             */\n            this.panelChange = new core[\"o\" /* EventEmitter */]();\n            this.type = config.type;\n            this.closeOtherPanels = config.closeOthers;\n        }\n        /**\n         * Checks if a panel with a given id is expanded.\n         */\n        isExpanded(panelId) { return this.activeIds.indexOf(panelId) > -1; }\n        /**\n         * Expands a panel with a given id.\n         *\n         * Has no effect if the panel is already expanded or disabled.\n         */\n        expand(panelId) { this._changeOpenState(this._findPanelById(panelId), true); }\n        /**\n         * Expands all panels, if `[closeOthers]` is `false`.\n         *\n         * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n         */\n        expandAll() {\n            if (this.closeOtherPanels) {\n                if (this.activeIds.length === 0 && this.panels.length) {\n                    this._changeOpenState(this.panels.first, true);\n                }\n            }\n            else {\n                this.panels.forEach(panel => this._changeOpenState(panel, true));\n            }\n        }\n        /**\n         * Collapses a panel with the given id.\n         *\n         * Has no effect if the panel is already collapsed or disabled.\n         */\n        collapse(panelId) { this._changeOpenState(this._findPanelById(panelId), false); }\n        /**\n         * Collapses all opened panels.\n         */\n        collapseAll() {\n            this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\n        }\n        /**\n         * Toggles a panel with the given id.\n         *\n         * Has no effect if the panel is disabled.\n         */\n        toggle(panelId) {\n            const panel = this._findPanelById(panelId);\n            if (panel) {\n                this._changeOpenState(panel, !panel.isOpen);\n            }\n        }\n        ngAfterContentChecked() {\n            // active id updates\n            if (isString(this.activeIds)) {\n                this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n            }\n            // update panels open states\n            this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\n            // closeOthers updates\n            if (this.activeIds.length > 1 && this.closeOtherPanels) {\n                this._closeOthers(this.activeIds[0]);\n                this._updateActiveIds();\n            }\n        }\n        _changeOpenState(panel, nextState) {\n            if (panel != null && !panel.disabled && panel.isOpen !== nextState) {\n                let defaultPrevented = false;\n                this.panelChange.emit({ panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; } });\n                if (!defaultPrevented) {\n                    panel.isOpen = nextState;\n                    if (nextState && this.closeOtherPanels) {\n                        this._closeOthers(panel.id);\n                    }\n                    this._updateActiveIds();\n                }\n            }\n        }\n        _closeOthers(panelId) {\n            this.panels.forEach(panel => {\n                if (panel.id !== panelId) {\n                    panel.isOpen = false;\n                }\n            });\n        }\n        _findPanelById(panelId) { return this.panels.find(p => p.id === panelId) || null; }\n        _updateActiveIds() {\n            this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n        }\n    };\n    NgbAccordion.ɵfac = function NgbAccordion_Factory(t) { return new (t || NgbAccordion)(core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbAccordionConfig)); };\n    NgbAccordion.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbAccordion, selectors: [[\"ngb-accordion\"]], contentQueries: function NgbAccordion_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbPanel, 0);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.panels = _t);\n            }\n        }, hostAttrs: [\"role\", \"tablist\", 1, \"accordion\"], hostVars: 1, hostBindings: function NgbAccordion_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Bb\" /* ɵɵattribute */](\"aria-multiselectable\", !ctx.closeOtherPanels);\n            }\n        }, inputs: { activeIds: \"activeIds\", destroyOnHide: \"destroyOnHide\", type: \"type\", closeOtherPanels: [\"closeOthers\", \"closeOtherPanels\"] }, outputs: { panelChange: \"panelChange\" }, exportAs: [\"ngbAccordion\"], decls: 3, vars: 1, consts: [[\"ngbPanelHeader\", \"\"], [\"t\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"btn\", \"btn-link\", 3, \"ngbPanelToggle\"], [3, \"ngTemplateOutlet\"], [\"role\", \"tab\", 3, \"id\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"role\", \"tabpanel\", \"class\", \"collapse\", 3, \"id\", \"show\", 4, \"ngIf\"], [\"role\", \"tabpanel\", 1, \"collapse\", 3, \"id\"], [1, \"card-body\"]], template: function NgbAccordion_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"yc\" /* ɵɵtemplate */](0, NgbAccordion_ng_template_0_Template, 3, 3, \"ng-template\", 0, 1, core[\"zc\" /* ɵɵtemplateRefExtractor */]);\n                core[\"yc\" /* ɵɵtemplate */](2, NgbAccordion_ng_template_2_Template, 4, 11, \"ng-template\", 2);\n            }\n            if (rf & 2) {\n                core[\"Ab\" /* ɵɵadvance */](2);\n                core[\"kc\" /* ɵɵproperty */](\"ngForOf\", ctx.panels);\n            }\n        }, directives: function () { return [ng_bootstrap_NgbPanelHeader, common[\"l\" /* NgForOf */], ng_bootstrap_NgbPanelToggle, common[\"n\" /* NgTemplateOutlet */], common[\"m\" /* NgIf */]]; }, encapsulation: 2 });\n    return NgbAccordion;\n})();\nlet ng_bootstrap_NgbPanelToggle = /*@__PURE__*/ (() => {\n    /**\n     * A directive to put on a button that toggles panel opening and closing.\n     *\n     * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n     *\n     * @since 4.1.0\n     */\n    let NgbPanelToggle = class NgbPanelToggle {\n        constructor(accordion, panel) {\n            this.accordion = accordion;\n            this.panel = panel;\n        }\n        set ngbPanelToggle(panel) {\n            if (panel) {\n                this.panel = panel;\n            }\n        }\n    };\n    NgbPanelToggle.ɵfac = function NgbPanelToggle_Factory(t) { return new (t || NgbPanelToggle)(core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbAccordion), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbPanel, 9)); };\n    NgbPanelToggle.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbPanelToggle, selectors: [[\"button\", \"ngbPanelToggle\", \"\"]], hostAttrs: [\"type\", \"button\"], hostVars: 5, hostBindings: function NgbPanelToggle_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"cc\" /* ɵɵlistener */](\"click\", function NgbPanelToggle_click_HostBindingHandler() { return ctx.accordion.toggle(ctx.panel.id); });\n            }\n            if (rf & 2) {\n                core[\"Vb\" /* ɵɵhostProperty */](\"disabled\", ctx.panel.disabled);\n                core[\"Bb\" /* ɵɵattribute */](\"aria-expanded\", ctx.panel.isOpen)(\"aria-controls\", ctx.panel.id);\n                core[\"Fb\" /* ɵɵclassProp */](\"collapsed\", !ctx.panel.isOpen);\n            }\n        }, inputs: { ngbPanelToggle: \"ngbPanelToggle\" } });\n    NgbPanelToggle = __decorate([__param(1, Object(core[\"D\" /* Optional */])()), __param(1, Object(core[\"p\" /* Host */])())\n    ], NgbPanelToggle);\n    return NgbPanelToggle;\n})();\nconst NGB_ACCORDION_DIRECTIVES = [ng_bootstrap_NgbAccordion, ng_bootstrap_NgbPanel, ng_bootstrap_NgbPanelTitle, ng_bootstrap_NgbPanelContent, ng_bootstrap_NgbPanelHeader, ng_bootstrap_NgbPanelToggle];\nlet ng_bootstrap_NgbAccordionModule = /*@__PURE__*/ (() => {\n    let NgbAccordionModule = class NgbAccordionModule {\n    };\n    NgbAccordionModule.ɵfac = function NgbAccordionModule_Factory(t) { return new (t || NgbAccordionModule)(); };\n    NgbAccordionModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbAccordionModule });\n    NgbAccordionModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({ imports: [[common[\"b\" /* CommonModule */]]] });\n    return NgbAccordionModule;\n})();\nlet ng_bootstrap_NgbAlertConfig = /*@__PURE__*/ (() => {\n    /**\n     * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n     *\n     * You can inject this service, typically in your root component, and customize its properties\n     * to provide default values for all alerts used in the application.\n     */\n    let NgbAlertConfig = class NgbAlertConfig {\n        constructor() {\n            this.dismissible = true;\n            this.type = 'warning';\n        }\n    };\n    NgbAlertConfig.ɵfac = function NgbAlertConfig_Factory(t) { return new (t || NgbAlertConfig)(); };\n    NgbAlertConfig.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbAlertConfig_Factory() { return new NgbAlertConfig(); }, token: NgbAlertConfig, providedIn: \"root\" });\n    return NgbAlertConfig;\n})();\nlet ng_bootstrap_NgbAlert = /*@__PURE__*/ (() => {\n    /**\n     * Alert is a component to provide contextual feedback messages for user.\n     *\n     * It supports several alert types and can be dismissed.\n     */\n    let NgbAlert = class NgbAlert {\n        constructor(config, _renderer, _element) {\n            this._renderer = _renderer;\n            this._element = _element;\n            /**\n             * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n             */\n            this.close = new core[\"o\" /* EventEmitter */]();\n            this.dismissible = config.dismissible;\n            this.type = config.type;\n        }\n        closeHandler() { this.close.emit(); }\n        ngOnChanges(changes) {\n            const typeChange = changes['type'];\n            if (typeChange && !typeChange.firstChange) {\n                this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n                this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n            }\n        }\n        ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n    };\n    NgbAlert.ɵfac = function NgbAlert_Factory(t) { return new (t || NgbAlert)(core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbAlertConfig), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"G\" /* Renderer2 */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */])); };\n    NgbAlert.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbAlert, selectors: [[\"ngb-alert\"]], hostAttrs: [\"role\", \"alert\", 1, \"alert\"], hostVars: 2, hostBindings: function NgbAlert_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Fb\" /* ɵɵclassProp */](\"alert-dismissible\", ctx.dismissible);\n            }\n        }, inputs: { dismissible: \"dismissible\", type: \"type\" }, outputs: { close: \"close\" }, features: [core[\"yb\" /* ɵɵNgOnChangesFeature */]], ngContentSelectors: _c3, decls: 2, vars: 1, consts: function () {\n            let i18n_1;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_alert_close$$FESM2015_NG_BOOTSTRAP_JS_2 = goog.getMsg(\"Close\");\n                i18n_1 = MSG_EXTERNAL_ngb_alert_close$$FESM2015_NG_BOOTSTRAP_JS_2;\n            }\n            else {\n                i18n_1 = $localize `:@@ngb.alert.close␟f4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8␟7819314041543176992:Close`;\n            }\n            return [[\"type\", \"button\", \"class\", \"close\", \"aria-label\", i18n_1, 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", i18n_1, 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"]];\n        }, template: function NgbAlert_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"jc\" /* ɵɵprojectionDef */]();\n                core[\"ic\" /* ɵɵprojection */](0);\n                core[\"yc\" /* ɵɵtemplate */](1, NgbAlert_button_1_Template, 3, 0, \"button\", 0);\n            }\n            if (rf & 2) {\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.dismissible);\n            }\n        }, directives: [common[\"m\" /* NgIf */]], styles: [\"ngb-alert{display:block}\"], encapsulation: 2, changeDetection: 0 });\n    return NgbAlert;\n})();\nlet ng_bootstrap_NgbAlertModule = /*@__PURE__*/ (() => {\n    let NgbAlertModule = class NgbAlertModule {\n    };\n    NgbAlertModule.ɵfac = function NgbAlertModule_Factory(t) { return new (t || NgbAlertModule)(); };\n    NgbAlertModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbAlertModule });\n    NgbAlertModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({ imports: [[common[\"b\" /* CommonModule */]]] });\n    return NgbAlertModule;\n})();\nlet ng_bootstrap_NgbButtonLabel = /*@__PURE__*/ (() => {\n    let NgbButtonLabel = class NgbButtonLabel {\n    };\n    NgbButtonLabel.ɵfac = function NgbButtonLabel_Factory(t) { return new (t || NgbButtonLabel)(); };\n    NgbButtonLabel.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbButtonLabel, selectors: [[\"\", \"ngbButtonLabel\", \"\"]], hostVars: 8, hostBindings: function NgbButtonLabel_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Fb\" /* ɵɵclassProp */](\"btn\", true)(\"active\", ctx.active)(\"disabled\", ctx.disabled)(\"focus\", ctx.focused);\n            }\n        } });\n    return NgbButtonLabel;\n})();\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n    provide: fesm2015_forms[\"i\" /* NG_VALUE_ACCESSOR */],\n    useExisting: Object(core[\"V\" /* forwardRef */])(() => ng_bootstrap_NgbCheckBox),\n    multi: true\n};\nlet ng_bootstrap_NgbCheckBox = /*@__PURE__*/ (() => {\n    /**\n     * Allows to easily create Bootstrap-style checkbox buttons.\n     *\n     * Integrates with forms, so the value of a checked button is bound to the underlying form control\n     * either in a reactive or template-driven way.\n     */\n    let NgbCheckBox = class NgbCheckBox {\n        constructor(_label, _cd) {\n            this._label = _label;\n            this._cd = _cd;\n            /**\n             * If `true`, the checkbox button will be disabled\n             */\n            this.disabled = false;\n            /**\n             * The form control value when the checkbox is checked.\n             */\n            this.valueChecked = true;\n            /**\n             * The form control value when the checkbox is unchecked.\n             */\n            this.valueUnChecked = false;\n            this.onChange = (_) => { };\n            this.onTouched = () => { };\n        }\n        set focused(isFocused) {\n            this._label.focused = isFocused;\n            if (!isFocused) {\n                this.onTouched();\n            }\n        }\n        onInputChange($event) {\n            const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n            this.onChange(modelToPropagate);\n            this.onTouched();\n            this.writeValue(modelToPropagate);\n        }\n        registerOnChange(fn) { this.onChange = fn; }\n        registerOnTouched(fn) { this.onTouched = fn; }\n        setDisabledState(isDisabled) {\n            this.disabled = isDisabled;\n            this._label.disabled = isDisabled;\n        }\n        writeValue(value) {\n            this.checked = value === this.valueChecked;\n            this._label.active = this.checked;\n            // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n            this._cd.markForCheck();\n        }\n    };\n    NgbCheckBox.ɵfac = function NgbCheckBox_Factory(t) { return new (t || NgbCheckBox)(core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbButtonLabel), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"i\" /* ChangeDetectorRef */])); };\n    NgbCheckBox.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbCheckBox, selectors: [[\"\", \"ngbButton\", \"\", \"type\", \"checkbox\"]], hostVars: 2, hostBindings: function NgbCheckBox_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"cc\" /* ɵɵlistener */](\"change\", function NgbCheckBox_change_HostBindingHandler($event) { return ctx.onInputChange($event); })(\"focus\", function NgbCheckBox_focus_HostBindingHandler() { return ctx.focused = true; })(\"blur\", function NgbCheckBox_blur_HostBindingHandler() { return ctx.focused = false; });\n            }\n            if (rf & 2) {\n                core[\"Vb\" /* ɵɵhostProperty */](\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n            }\n        }, inputs: { disabled: \"disabled\", valueChecked: \"valueChecked\", valueUnChecked: \"valueUnChecked\" }, features: [core[\"zb\" /* ɵɵProvidersFeature */]([NGB_CHECKBOX_VALUE_ACCESSOR])] });\n    return NgbCheckBox;\n})();\nconst NGB_RADIO_VALUE_ACCESSOR = {\n    provide: fesm2015_forms[\"i\" /* NG_VALUE_ACCESSOR */],\n    useExisting: Object(core[\"V\" /* forwardRef */])(() => ng_bootstrap_NgbRadioGroup),\n    multi: true\n};\nlet nextId$1 = 0;\nlet ng_bootstrap_NgbRadioGroup = /*@__PURE__*/ (() => {\n    /**\n     * Allows to easily create Bootstrap-style radio buttons.\n     *\n     * Integrates with forms, so the value of a checked button is bound to the underlying form control\n     * either in a reactive or template-driven way.\n     */\n    let NgbRadioGroup = class NgbRadioGroup {\n        constructor() {\n            this._radios = new Set();\n            this._value = null;\n            /**\n             * Name of the radio group applied to radio input elements.\n             *\n             * Will be applied to all radio input elements inside the group,\n             * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n             *\n             * If not provided, will be generated in the `ngb-radio-xx` format.\n             */\n            this.name = `ngb-radio-${nextId$1++}`;\n            this.onChange = (_) => { };\n            this.onTouched = () => { };\n        }\n        get disabled() { return this._disabled; }\n        set disabled(isDisabled) { this.setDisabledState(isDisabled); }\n        onRadioChange(radio) {\n            this.writeValue(radio.value);\n            this.onChange(radio.value);\n        }\n        onRadioValueUpdate() { this._updateRadiosValue(); }\n        register(radio) { this._radios.add(radio); }\n        registerOnChange(fn) { this.onChange = fn; }\n        registerOnTouched(fn) { this.onTouched = fn; }\n        setDisabledState(isDisabled) {\n            this._disabled = isDisabled;\n            this._updateRadiosDisabled();\n        }\n        unregister(radio) { this._radios.delete(radio); }\n        writeValue(value) {\n            this._value = value;\n            this._updateRadiosValue();\n        }\n        _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n        _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n    };\n    NgbRadioGroup.ɵfac = function NgbRadioGroup_Factory(t) { return new (t || NgbRadioGroup)(); };\n    NgbRadioGroup.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbRadioGroup, selectors: [[\"\", \"ngbRadioGroup\", \"\"]], hostAttrs: [\"role\", \"radiogroup\"], inputs: { name: \"name\" }, features: [core[\"zb\" /* ɵɵProvidersFeature */]([NGB_RADIO_VALUE_ACCESSOR])] });\n    return NgbRadioGroup;\n})();\nlet ng_bootstrap_NgbRadio = /*@__PURE__*/ (() => {\n    /**\n     * A directive that marks an input of type \"radio\" as a part of the\n     * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n     */\n    let NgbRadio = class NgbRadio {\n        constructor(_group, _label, _renderer, _element, _cd) {\n            this._group = _group;\n            this._label = _label;\n            this._renderer = _renderer;\n            this._element = _element;\n            this._cd = _cd;\n            this._value = null;\n            this._group.register(this);\n            this.updateDisabled();\n        }\n        /**\n         * The form control value when current radio button is checked.\n         */\n        set value(value) {\n            this._value = value;\n            const stringValue = value ? value.toString() : '';\n            this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n            this._group.onRadioValueUpdate();\n        }\n        /**\n         * If `true`, current radio button will be disabled.\n         */\n        set disabled(isDisabled) {\n            this._disabled = isDisabled !== false;\n            this.updateDisabled();\n        }\n        set focused(isFocused) {\n            if (this._label) {\n                this._label.focused = isFocused;\n            }\n            if (!isFocused) {\n                this._group.onTouched();\n            }\n        }\n        get checked() { return this._checked; }\n        get disabled() { return this._group.disabled || this._disabled; }\n        get value() { return this._value; }\n        get nameAttr() { return this.name || this._group.name; }\n        ngOnDestroy() { this._group.unregister(this); }\n        onChange() { this._group.onRadioChange(this); }\n        updateValue(value) {\n            // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n            if (this.value !== value) {\n                this._cd.markForCheck();\n            }\n            this._checked = this.value === value;\n            this._label.active = this._checked;\n        }\n        updateDisabled() { this._label.disabled = this.disabled; }\n    };\n    NgbRadio.ɵfac = function NgbRadio_Factory(t) { return new (t || NgbRadio)(core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbRadioGroup), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbButtonLabel), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"G\" /* Renderer2 */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"i\" /* ChangeDetectorRef */])); };\n    NgbRadio.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbRadio, selectors: [[\"\", \"ngbButton\", \"\", \"type\", \"radio\"]], hostVars: 3, hostBindings: function NgbRadio_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"cc\" /* ɵɵlistener */](\"change\", function NgbRadio_change_HostBindingHandler() { return ctx.onChange(); })(\"focus\", function NgbRadio_focus_HostBindingHandler() { return ctx.focused = true; })(\"blur\", function NgbRadio_blur_HostBindingHandler() { return ctx.focused = false; });\n            }\n            if (rf & 2) {\n                core[\"Vb\" /* ɵɵhostProperty */](\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"name\", ctx.nameAttr);\n            }\n        }, inputs: { value: \"value\", disabled: \"disabled\", name: \"name\" } });\n    return NgbRadio;\n})();\nconst NGB_BUTTON_DIRECTIVES = [ng_bootstrap_NgbButtonLabel, ng_bootstrap_NgbCheckBox, ng_bootstrap_NgbRadioGroup, ng_bootstrap_NgbRadio];\nlet ng_bootstrap_NgbButtonsModule = /*@__PURE__*/ (() => {\n    let NgbButtonsModule = class NgbButtonsModule {\n    };\n    NgbButtonsModule.ɵfac = function NgbButtonsModule_Factory(t) { return new (t || NgbButtonsModule)(); };\n    NgbButtonsModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbButtonsModule });\n    NgbButtonsModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({});\n    return NgbButtonsModule;\n})();\nlet ng_bootstrap_NgbCarouselConfig = /*@__PURE__*/ (() => {\n    /**\n     * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n     *\n     * You can inject this service, typically in your root component, and customize its properties\n     * to provide default values for all carousels used in the application.\n     */\n    let NgbCarouselConfig = class NgbCarouselConfig {\n        constructor() {\n            this.interval = 5000;\n            this.wrap = true;\n            this.keyboard = true;\n            this.pauseOnHover = true;\n            this.showNavigationArrows = true;\n            this.showNavigationIndicators = true;\n        }\n    };\n    NgbCarouselConfig.ɵfac = function NgbCarouselConfig_Factory(t) { return new (t || NgbCarouselConfig)(); };\n    NgbCarouselConfig.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbCarouselConfig_Factory() { return new NgbCarouselConfig(); }, token: NgbCarouselConfig, providedIn: \"root\" });\n    return NgbCarouselConfig;\n})();\nlet nextId$2 = 0;\nlet ng_bootstrap_NgbSlide = /*@__PURE__*/ (() => {\n    /**\n     * A directive that wraps the individual carousel slide.\n     */\n    let NgbSlide = class NgbSlide {\n        constructor(tplRef) {\n            this.tplRef = tplRef;\n            /**\n             * Slide id that must be unique for the entire document.\n             *\n             * If not provided, will be generated in the `ngb-slide-xx` format.\n             */\n            this.id = `ngb-slide-${nextId$2++}`;\n        }\n    };\n    NgbSlide.ɵfac = function NgbSlide_Factory(t) { return new (t || NgbSlide)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    NgbSlide.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbSlide, selectors: [[\"ng-template\", \"ngbSlide\", \"\"]], inputs: { id: \"id\" } });\n    return NgbSlide;\n})();\nlet ng_bootstrap_NgbCarousel = /*@__PURE__*/ (() => {\n    /**\n     * Carousel is a component to easily create and control slideshows.\n     *\n     * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n     */\n    let NgbCarousel = class NgbCarousel {\n        constructor(config, _platformId, _ngZone, _cd) {\n            this._platformId = _platformId;\n            this._ngZone = _ngZone;\n            this._cd = _cd;\n            this.NgbSlideEventSource = NgbSlideEventSource;\n            this._destroy$ = new Subject[\"a\" /* Subject */]();\n            this._interval$ = new BehaviorSubject[\"a\" /* BehaviorSubject */](0);\n            this._mouseHover$ = new BehaviorSubject[\"a\" /* BehaviorSubject */](false);\n            this._pauseOnHover$ = new BehaviorSubject[\"a\" /* BehaviorSubject */](false);\n            this._pause$ = new BehaviorSubject[\"a\" /* BehaviorSubject */](false);\n            this._wrap$ = new BehaviorSubject[\"a\" /* BehaviorSubject */](false);\n            /**\n             * An event emitted right after the slide transition is completed.\n             *\n             * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n             */\n            this.slide = new core[\"o\" /* EventEmitter */]();\n            this.interval = config.interval;\n            this.wrap = config.wrap;\n            this.keyboard = config.keyboard;\n            this.pauseOnHover = config.pauseOnHover;\n            this.showNavigationArrows = config.showNavigationArrows;\n            this.showNavigationIndicators = config.showNavigationIndicators;\n        }\n        /**\n         * Time in milliseconds before the next slide is shown.\n         */\n        set interval(value) {\n            this._interval$.next(value);\n        }\n        get interval() { return this._interval$.value; }\n        /**\n         * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n         */\n        set wrap(value) {\n            this._wrap$.next(value);\n        }\n        get wrap() { return this._wrap$.value; }\n        /**\n         * If `true`, will pause slide switching when mouse cursor hovers the slide.\n         *\n         * @since 2.2.0\n         */\n        set pauseOnHover(value) {\n            this._pauseOnHover$.next(value);\n        }\n        get pauseOnHover() { return this._pauseOnHover$.value; }\n        mouseEnter() {\n            this._mouseHover$.next(true);\n        }\n        mouseLeave() {\n            this._mouseHover$.next(false);\n        }\n        ngAfterContentInit() {\n            // setInterval() doesn't play well with SSR and protractor,\n            // so we should run it in the browser and outside Angular\n            if (Object(common[\"x\" /* isPlatformBrowser */])(this._platformId)) {\n                this._ngZone.runOutsideAngular(() => {\n                    const hasNextSlide$ = Object(combineLatest[\"a\" /* combineLatest */])([\n                        this.slide.pipe(Object(map[\"a\" /* map */])(slideEvent => slideEvent.current), Object(startWith[\"a\" /* startWith */])(this.activeId)),\n                        this._wrap$, this.slides.changes.pipe(Object(startWith[\"a\" /* startWith */])(null))\n                    ])\n                        .pipe(Object(map[\"a\" /* map */])(([currentSlideId, wrap]) => {\n                        const slideArr = this.slides.toArray();\n                        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n                        return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n                    }), distinctUntilChanged());\n                    Object(combineLatest[\"a\" /* combineLatest */])([this._pause$, this._pauseOnHover$, this._mouseHover$, this._interval$, hasNextSlide$])\n                        .pipe(Object(map[\"a\" /* map */])(([pause, pauseOnHover, mouseHover, interval, hasNextSlide]) => ((pause || (pauseOnHover && mouseHover) || !hasNextSlide) ? 0 : interval)), distinctUntilChanged(), Object(switchMap[\"a\" /* switchMap */])(interval => interval > 0 ? timer(interval, interval) : NEVER), takeUntil(this._destroy$))\n                        .subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n                });\n            }\n            this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => this._cd.markForCheck());\n        }\n        ngAfterContentChecked() {\n            let activeSlide = this._getSlideById(this.activeId);\n            this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : '');\n        }\n        ngOnDestroy() { this._destroy$.next(); }\n        /**\n         * Navigates to a slide with the specified identifier.\n         */\n        select(slideId, source) {\n            this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n        }\n        /**\n         * Navigates to the previous slide.\n         */\n        prev(source) {\n            this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT, source);\n        }\n        /**\n         * Navigates to the next slide.\n         */\n        next(source) {\n            this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT, source);\n        }\n        /**\n         * Pauses cycling through the slides.\n         */\n        pause() { this._pause$.next(true); }\n        /**\n         * Restarts cycling through the slides from left to right.\n         */\n        cycle() { this._pause$.next(false); }\n        _cycleToSelected(slideIdx, direction, source) {\n            let selectedSlide = this._getSlideById(slideIdx);\n            if (selectedSlide && selectedSlide.id !== this.activeId) {\n                this.slide.emit({ prev: this.activeId, current: selectedSlide.id, direction: direction, paused: this._pause$.value, source });\n                this.activeId = selectedSlide.id;\n            }\n            // we get here after the interval fires or any external API call like next(), prev() or select()\n            this._cd.markForCheck();\n        }\n        _getSlideEventDirection(currentActiveSlideId, nextActiveSlideId) {\n            const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n            const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n            return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n        }\n        _getSlideById(slideId) {\n            return this.slides.find(slide => slide.id === slideId) || null;\n        }\n        _getSlideIdxById(slideId) {\n            const slide = this._getSlideById(slideId);\n            return slide != null ? this.slides.toArray().indexOf(slide) : -1;\n        }\n        _getNextSlide(currentSlideId) {\n            const slideArr = this.slides.toArray();\n            const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n            const isLastSlide = currentSlideIdx === slideArr.length - 1;\n            return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n                slideArr[currentSlideIdx + 1].id;\n        }\n        _getPrevSlide(currentSlideId) {\n            const slideArr = this.slides.toArray();\n            const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n            const isFirstSlide = currentSlideIdx === 0;\n            return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n                slideArr[currentSlideIdx - 1].id;\n        }\n    };\n    NgbCarousel.ɵfac = function NgbCarousel_Factory(t) { return new (t || NgbCarousel)(core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbCarouselConfig), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"E\" /* PLATFORM_ID */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"C\" /* NgZone */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"i\" /* ChangeDetectorRef */])); };\n    NgbCarousel.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbCarousel, selectors: [[\"ngb-carousel\"]], contentQueries: function NgbCarousel_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbSlide, 0);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.slides = _t);\n            }\n        }, hostAttrs: [\"tabIndex\", \"0\", 1, \"carousel\", \"slide\"], hostVars: 2, hostBindings: function NgbCarousel_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"cc\" /* ɵɵlistener */](\"keydown.arrowLeft\", function NgbCarousel_keydown_arrowLeft_HostBindingHandler() { return ctx.keyboard && ctx.prev(ctx.NgbSlideEventSource.ARROW_LEFT); })(\"keydown.arrowRight\", function NgbCarousel_keydown_arrowRight_HostBindingHandler() { return ctx.keyboard && ctx.next(ctx.NgbSlideEventSource.ARROW_RIGHT); })(\"mouseenter\", function NgbCarousel_mouseenter_HostBindingHandler() { return ctx.mouseEnter(); })(\"mouseleave\", function NgbCarousel_mouseleave_HostBindingHandler() { return ctx.mouseLeave(); });\n            }\n            if (rf & 2) {\n                core[\"xc\" /* ɵɵstyleProp */](\"display\", \"block\");\n            }\n        }, inputs: { interval: \"interval\", wrap: \"wrap\", keyboard: \"keyboard\", pauseOnHover: \"pauseOnHover\", showNavigationArrows: \"showNavigationArrows\", showNavigationIndicators: \"showNavigationIndicators\", activeId: \"activeId\" }, outputs: { slide: \"slide\" }, exportAs: [\"ngbCarousel\"], decls: 5, vars: 4, consts: function () {\n            let i18n_4;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_carousel_previous$$FESM2015_NG_BOOTSTRAP_JS__5 = goog.getMsg(\"Previous\");\n                i18n_4 = MSG_EXTERNAL_ngb_carousel_previous$$FESM2015_NG_BOOTSTRAP_JS__5;\n            }\n            else {\n                i18n_4 = $localize `:@@ngb.carousel.previous␟680d5c75b7fd8d37961083608b9fcdc4167b4c43␟4452427314943113135:Previous`;\n            }\n            let i18n_6;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_carousel_next$$FESM2015_NG_BOOTSTRAP_JS__7 = goog.getMsg(\"Next\");\n                i18n_6 = MSG_EXTERNAL_ngb_carousel_next$$FESM2015_NG_BOOTSTRAP_JS__7;\n            }\n            else {\n                i18n_6 = $localize `:@@ngb.carousel.next␟f732c304c7433e5a83ffcd862c3dce709a0f4982␟3885497195825665706:Next`;\n            }\n            return [[\"class\", \"carousel-indicators\", 4, \"ngIf\"], [1, \"carousel-inner\"], [\"class\", \"carousel-item\", 3, \"active\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"carousel-control-prev\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"carousel-control-next\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [1, \"carousel-indicators\"], [3, \"id\", \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"id\", \"click\"], [1, \"carousel-item\"], [3, \"ngTemplateOutlet\"], [\"role\", \"button\", 1, \"carousel-control-prev\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-prev-icon\"], [1, \"sr-only\"], i18n_4, [\"role\", \"button\", 1, \"carousel-control-next\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-next-icon\"], i18n_6];\n        }, template: function NgbCarousel_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"yc\" /* ɵɵtemplate */](0, NgbCarousel_ol_0_Template, 2, 1, \"ol\", 0);\n                core[\"Sb\" /* ɵɵelementStart */](1, \"div\", 1);\n                core[\"yc\" /* ɵɵtemplate */](2, NgbCarousel_div_2_Template, 2, 3, \"div\", 2);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n                core[\"yc\" /* ɵɵtemplate */](3, NgbCarousel_a_3_Template, 4, 0, \"a\", 3);\n                core[\"yc\" /* ɵɵtemplate */](4, NgbCarousel_a_4_Template, 4, 0, \"a\", 4);\n            }\n            if (rf & 2) {\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.showNavigationIndicators);\n                core[\"Ab\" /* ɵɵadvance */](2);\n                core[\"kc\" /* ɵɵproperty */](\"ngForOf\", ctx.slides);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.showNavigationArrows);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.showNavigationArrows);\n            }\n        }, directives: [common[\"m\" /* NgIf */], common[\"l\" /* NgForOf */], common[\"n\" /* NgTemplateOutlet */]], encapsulation: 2, changeDetection: 0 });\n    NgbCarousel = __decorate([__param(1, Object(core[\"r\" /* Inject */])(core[\"E\" /* PLATFORM_ID */]))\n    ], NgbCarousel);\n    return NgbCarousel;\n})();\n/**\n * Defines the carousel slide transition direction.\n */\nvar NgbSlideEventDirection = /*@__PURE__*/ (function (NgbSlideEventDirection) {\n    NgbSlideEventDirection[NgbSlideEventDirection[\"LEFT\"] = 'left'] = \"LEFT\";\n    NgbSlideEventDirection[NgbSlideEventDirection[\"RIGHT\"] = 'right'] = \"RIGHT\";\n    return NgbSlideEventDirection;\n})({});\nvar NgbSlideEventSource = /*@__PURE__*/ (function (NgbSlideEventSource) {\n    NgbSlideEventSource[\"TIMER\"] = \"timer\";\n    NgbSlideEventSource[\"ARROW_LEFT\"] = \"arrowLeft\";\n    NgbSlideEventSource[\"ARROW_RIGHT\"] = \"arrowRight\";\n    NgbSlideEventSource[\"INDICATOR\"] = \"indicator\";\n    return NgbSlideEventSource;\n})({});\nconst NGB_CAROUSEL_DIRECTIVES = [ng_bootstrap_NgbCarousel, ng_bootstrap_NgbSlide];\nlet ng_bootstrap_NgbCarouselModule = /*@__PURE__*/ (() => {\n    let NgbCarouselModule = class NgbCarouselModule {\n    };\n    NgbCarouselModule.ɵfac = function NgbCarouselModule_Factory(t) { return new (t || NgbCarouselModule)(); };\n    NgbCarouselModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbCarouselModule });\n    NgbCarouselModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({ imports: [[common[\"b\" /* CommonModule */]]] });\n    return NgbCarouselModule;\n})();\nlet ng_bootstrap_NgbCollapse = /*@__PURE__*/ (() => {\n    /**\n     * A directive to provide a simple way of hiding and showing elements on the page.\n     */\n    let NgbCollapse = class NgbCollapse {\n        constructor() {\n            /**\n             * If `true`, will collapse the element or show it otherwise.\n             */\n            this.collapsed = false;\n        }\n    };\n    NgbCollapse.ɵfac = function NgbCollapse_Factory(t) { return new (t || NgbCollapse)(); };\n    NgbCollapse.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbCollapse, selectors: [[\"\", \"ngbCollapse\", \"\"]], hostVars: 4, hostBindings: function NgbCollapse_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Fb\" /* ɵɵclassProp */](\"collapse\", true)(\"show\", !ctx.collapsed);\n            }\n        }, inputs: { collapsed: [\"ngbCollapse\", \"collapsed\"] }, exportAs: [\"ngbCollapse\"] });\n    return NgbCollapse;\n})();\nlet ng_bootstrap_NgbCollapseModule = /*@__PURE__*/ (() => {\n    let NgbCollapseModule = class NgbCollapseModule {\n    };\n    NgbCollapseModule.ɵfac = function NgbCollapseModule_Factory(t) { return new (t || NgbCollapseModule)(); };\n    NgbCollapseModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbCollapseModule });\n    NgbCollapseModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({});\n    return NgbCollapseModule;\n})();\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nclass NgbDate {\n    constructor(year, month, day) {\n        this.year = isInteger(year) ? year : null;\n        this.month = isInteger(month) ? month : null;\n        this.day = isInteger(day) ? day : null;\n    }\n    /**\n     * A **static method** that creates a new date object from the `NgbDateStruct`,\n     *\n     * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n     *\n     * If the `date` is already of `NgbDate` type, the method will return the same object.\n     */\n    static from(date) {\n        if (date instanceof NgbDate) {\n            return date;\n        }\n        return date ? new NgbDate(date.year, date.month, date.day) : null;\n    }\n    /**\n     * Checks if the current date is equal to another date.\n     */\n    equals(other) {\n        return other != null && this.year === other.year && this.month === other.month && this.day === other.day;\n    }\n    /**\n     * Checks if the current date is before another date.\n     */\n    before(other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day < other.day;\n            }\n            else {\n                return this.month < other.month;\n            }\n        }\n        else {\n            return this.year < other.year;\n        }\n    }\n    /**\n     * Checks if the current date is after another date.\n     */\n    after(other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day > other.day;\n            }\n            else {\n                return this.month > other.month;\n            }\n        }\n        else {\n            return this.year > other.year;\n        }\n    }\n}\nfunction fromJSDate(jsDate) {\n    return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nfunction toJSDate(date) {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // this is done avoid 30 -> 1930 conversion\n    if (!isNaN(jsDate.getTime())) {\n        jsDate.setFullYear(date.year);\n    }\n    return jsDate;\n}\nfunction NGB_DATEPICKER_CALENDAR_FACTORY() {\n    return new ng_bootstrap_NgbCalendarGregorian();\n}\nlet ng_bootstrap_NgbCalendar = /*@__PURE__*/ (() => {\n    /**\n     * A service that represents the calendar used by the datepicker.\n     *\n     * The default implementation uses the Gregorian calendar. You can inject it in your own\n     * implementations if necessary to simplify `NgbDate` calculations.\n     */\n    let NgbCalendar = class NgbCalendar {\n    };\n    NgbCalendar.ɵfac = function NgbCalendar_Factory(t) { return new (t || NgbCalendar)(); };\n    NgbCalendar.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: NGB_DATEPICKER_CALENDAR_FACTORY, token: NgbCalendar, providedIn: \"root\" });\n    return NgbCalendar;\n})();\nlet ng_bootstrap_NgbCalendarGregorian = /*@__PURE__*/ (() => {\n    let NgbCalendarGregorian = class NgbCalendarGregorian extends ng_bootstrap_NgbCalendar {\n        getDaysPerWeek() { return 7; }\n        getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n        getWeeksPerMonth() { return 6; }\n        getNext(date, period = 'd', number = 1) {\n            let jsDate = toJSDate(date);\n            let checkMonth = true;\n            let expectedMonth = jsDate.getMonth();\n            switch (period) {\n                case 'y':\n                    jsDate.setFullYear(jsDate.getFullYear() + number);\n                    break;\n                case 'm':\n                    expectedMonth += number;\n                    jsDate.setMonth(expectedMonth);\n                    expectedMonth = expectedMonth % 12;\n                    if (expectedMonth < 0) {\n                        expectedMonth = expectedMonth + 12;\n                    }\n                    break;\n                case 'd':\n                    jsDate.setDate(jsDate.getDate() + number);\n                    checkMonth = false;\n                    break;\n                default:\n                    return date;\n            }\n            if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n                // this means the destination month has less days than the initial month\n                // let's go back to the end of the previous month:\n                jsDate.setDate(0);\n            }\n            return fromJSDate(jsDate);\n        }\n        getPrev(date, period = 'd', number = 1) { return this.getNext(date, period, -number); }\n        getWeekday(date) {\n            let jsDate = toJSDate(date);\n            let day = jsDate.getDay();\n            // in JS Date Sun=0, in ISO 8601 Sun=7\n            return day === 0 ? 7 : day;\n        }\n        getWeekNumber(week, firstDayOfWeek) {\n            // in JS Date Sun=0, in ISO 8601 Sun=7\n            if (firstDayOfWeek === 7) {\n                firstDayOfWeek = 0;\n            }\n            const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n            let date = week[thursdayIndex];\n            const jsDate = toJSDate(date);\n            jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n            const time = jsDate.getTime();\n            jsDate.setMonth(0); // Compare with Jan 1\n            jsDate.setDate(1);\n            return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n        }\n        getToday() { return fromJSDate(new Date()); }\n        isValid(date) {\n            if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n                return false;\n            }\n            // year 0 doesn't exist in Gregorian calendar\n            if (date.year === 0) {\n                return false;\n            }\n            const jsDate = toJSDate(date);\n            return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n                jsDate.getDate() === date.day;\n        }\n    };\n    NgbCalendarGregorian.ɵfac = function NgbCalendarGregorian_Factory(t) { return ɵNgbCalendarGregorian_BaseFactory(t || NgbCalendarGregorian); };\n    NgbCalendarGregorian.ɵprov = core[\"Jb\" /* ɵɵdefineInjectable */]({ token: NgbCalendarGregorian, factory: function (t) { return NgbCalendarGregorian.ɵfac(t); } });\n    return NgbCalendarGregorian;\n})();\nfunction isChangedDate(prev, next) {\n    return !dateComparator(prev, next);\n}\nfunction isChangedMonth(prev, next) {\n    return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\nfunction dateComparator(prev, next) {\n    return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\nfunction checkMinBeforeMax(minDate, maxDate) {\n    if (maxDate && minDate && maxDate.before(minDate)) {\n        throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n    }\n}\nfunction checkDateInRange(date, minDate, maxDate) {\n    if (date && minDate && date.before(minDate)) {\n        return minDate;\n    }\n    if (date && maxDate && date.after(maxDate)) {\n        return maxDate;\n    }\n    return date || null;\n}\nfunction isDateSelectable(date, state) {\n    const { minDate, maxDate, disabled, markDisabled } = state;\n    // clang-format off\n    return !(date === null ||\n        date === undefined ||\n        disabled ||\n        (markDisabled && markDisabled(date, { year: date.year, month: date.month })) ||\n        (minDate && date.before(minDate)) ||\n        (maxDate && date.after(maxDate)));\n    // clang-format on\n}\nfunction generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    let months = calendar.getMonths(date.year);\n    if (minDate && date.year === minDate.year) {\n        const index = months.findIndex(month => month === minDate.month);\n        months = months.slice(index);\n    }\n    if (maxDate && date.year === maxDate.year) {\n        const index = months.findIndex(month => month === maxDate.month);\n        months = months.slice(0, index + 1);\n    }\n    return months;\n}\nfunction generateSelectBoxYears(date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n    const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n    const length = end - start + 1;\n    const numbers = Array(length);\n    for (let i = 0; i < length; i++) {\n        numbers[i] = start + i;\n    }\n    return numbers;\n}\nfunction nextMonthDisabled(calendar, date, maxDate) {\n    const nextDate = Object.assign(calendar.getNext(date, 'm'), { day: 1 });\n    return maxDate != null && nextDate.after(maxDate);\n}\nfunction prevMonthDisabled(calendar, date, minDate) {\n    const prevDate = Object.assign(calendar.getPrev(date, 'm'), { day: 1 });\n    return minDate != null && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n        prevDate.year < minDate.year && minDate.month === 1);\n}\nfunction buildMonths(calendar, date, state, i18n, force) {\n    const { displayMonths, months } = state;\n    // move old months to a temporary array\n    const monthsToReuse = months.splice(0, months.length);\n    // generate new first dates, nullify or reuse months\n    const firstDates = Array.from({ length: displayMonths }, (_, i) => {\n        const firstDate = Object.assign(calendar.getNext(date, 'm', i), { day: 1 });\n        months[i] = null;\n        if (!force) {\n            const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n            // move reused month back to months\n            if (reusedIndex !== -1) {\n                months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n            }\n        }\n        return firstDate;\n    });\n    // rebuild nullified months\n    firstDates.forEach((firstDate, i) => {\n        if (months[i] === null) {\n            months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {});\n        }\n    });\n    return months;\n}\nfunction buildMonth(calendar, date, state, i18n, month = {}) {\n    const { dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays } = state;\n    const calendarToday = calendar.getToday();\n    month.firstDate = null;\n    month.lastDate = null;\n    month.number = date.month;\n    month.year = date.year;\n    month.weeks = month.weeks || [];\n    month.weekdays = month.weekdays || [];\n    date = getFirstViewDate(calendar, date, firstDayOfWeek);\n    // month has weeks\n    for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n        let weekObject = month.weeks[week];\n        if (!weekObject) {\n            weekObject = month.weeks[week] = { number: 0, days: [], collapsed: true };\n        }\n        const days = weekObject.days;\n        // week has days\n        for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n            if (week === 0) {\n                month.weekdays[day] = calendar.getWeekday(date);\n            }\n            const newDate = new NgbDate(date.year, date.month, date.day);\n            const nextDate = calendar.getNext(newDate);\n            const ariaLabel = i18n.getDayAriaLabel(newDate);\n            // marking date as disabled\n            let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n            if (!disabled && markDisabled) {\n                disabled = markDisabled(newDate, { month: month.number, year: month.year });\n            }\n            // today\n            let today = newDate.equals(calendarToday);\n            // adding user-provided data to the context\n            let contextUserData = dayTemplateData ? dayTemplateData(newDate, { month: month.number, year: month.year }) : undefined;\n            // saving first date of the month\n            if (month.firstDate === null && newDate.month === month.number) {\n                month.firstDate = newDate;\n            }\n            // saving last date of the month\n            if (newDate.month === month.number && nextDate.month !== month.number) {\n                month.lastDate = newDate;\n            }\n            let dayObject = days[day];\n            if (!dayObject) {\n                dayObject = days[day] = {};\n            }\n            dayObject.date = newDate;\n            dayObject.context = Object.assign(dayObject.context || {}, {\n                $implicit: newDate,\n                date: newDate,\n                data: contextUserData,\n                currentMonth: month.number,\n                currentYear: month.year, disabled,\n                focused: false,\n                selected: false, today\n            });\n            dayObject.tabindex = -1;\n            dayObject.ariaLabel = ariaLabel;\n            dayObject.hidden = false;\n            date = nextDate;\n        }\n        weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n        // marking week as collapsed\n        weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n            days[days.length - 1].date.month !== month.number;\n    }\n    return month;\n}\nfunction getFirstViewDate(calendar, date, firstDayOfWeek) {\n    const daysPerWeek = calendar.getDaysPerWeek();\n    const firstMonthDate = new NgbDate(date.year, date.month, 1);\n    const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n    return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\nfunction NGB_DATEPICKER_18N_FACTORY(locale) {\n    return new ng_bootstrap_NgbDatepickerI18nDefault(locale);\n}\nlet ng_bootstrap_NgbDatepickerI18n = /*@__PURE__*/ (() => {\n    /**\n     * A service supplying i18n data to the datepicker component.\n     *\n     * The default implementation of this service uses the Angular locale and registered locale data for\n     * weekdays and month names (as explained in the Angular i18n guide).\n     *\n     * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n     * numerals. For other static labels the datepicker uses the default Angular i18n.\n     *\n     * See the [i18n demo](#/components/datepicker/examples#i18n) and\n     * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n     * a custom provider for i18n.\n     */\n    let NgbDatepickerI18n = class NgbDatepickerI18n {\n        /**\n         * Returns the textual representation of a day that is rendered in a day cell.\n         *\n         * @since 3.0.0\n         */\n        getDayNumerals(date) { return `${date.day}`; }\n        /**\n         * Returns the textual representation of a week number rendered by datepicker.\n         *\n         * @since 3.0.0\n         */\n        getWeekNumerals(weekNumber) { return `${weekNumber}`; }\n        /**\n         * Returns the textual representation of a year that is rendered in the datepicker year select box.\n         *\n         * @since 3.0.0\n         */\n        getYearNumerals(year) { return `${year}`; }\n    };\n    NgbDatepickerI18n.ɵfac = function NgbDatepickerI18n_Factory(t) { return new (t || NgbDatepickerI18n)(); };\n    NgbDatepickerI18n.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbDatepickerI18n_Factory() { return NGB_DATEPICKER_18N_FACTORY(Object(core[\"Zb\" /* ɵɵinject */])(core[\"x\" /* LOCALE_ID */])); }, token: NgbDatepickerI18n, providedIn: \"root\" });\n    return NgbDatepickerI18n;\n})();\nlet ng_bootstrap_NgbDatepickerI18nDefault = /*@__PURE__*/ (() => {\n    let NgbDatepickerI18nDefault = class NgbDatepickerI18nDefault extends ng_bootstrap_NgbDatepickerI18n {\n        constructor(_locale) {\n            super();\n            this._locale = _locale;\n            const weekdaysStartingOnSunday = Object(common[\"u\" /* getLocaleDayNames */])(_locale, common[\"e\" /* FormStyle */].Standalone, common[\"r\" /* TranslationWidth */].Short);\n            this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n            this._monthsShort = Object(common[\"w\" /* getLocaleMonthNames */])(_locale, common[\"e\" /* FormStyle */].Standalone, common[\"r\" /* TranslationWidth */].Abbreviated);\n            this._monthsFull = Object(common[\"w\" /* getLocaleMonthNames */])(_locale, common[\"e\" /* FormStyle */].Standalone, common[\"r\" /* TranslationWidth */].Wide);\n        }\n        getWeekdayShortName(weekday) { return this._weekdaysShort[weekday - 1] || ''; }\n        getMonthShortName(month) { return this._monthsShort[month - 1] || ''; }\n        getMonthFullName(month) { return this._monthsFull[month - 1] || ''; }\n        getDayAriaLabel(date) {\n            const jsDate = new Date(date.year, date.month - 1, date.day);\n            return Object(common[\"t\" /* formatDate */])(jsDate, 'fullDate', this._locale);\n        }\n    };\n    NgbDatepickerI18nDefault.ɵfac = function NgbDatepickerI18nDefault_Factory(t) { return new (t || NgbDatepickerI18nDefault)(core[\"Zb\" /* ɵɵinject */](core[\"x\" /* LOCALE_ID */])); };\n    NgbDatepickerI18nDefault.ɵprov = core[\"Jb\" /* ɵɵdefineInjectable */]({ token: NgbDatepickerI18nDefault, factory: function (t) { return NgbDatepickerI18nDefault.ɵfac(t); } });\n    NgbDatepickerI18nDefault = __decorate([__param(0, Object(core[\"r\" /* Inject */])(core[\"x\" /* LOCALE_ID */]))\n    ], NgbDatepickerI18nDefault);\n    return NgbDatepickerI18nDefault;\n})();\nlet ng_bootstrap_NgbDatepickerService = /*@__PURE__*/ (() => {\n    let NgbDatepickerService = class NgbDatepickerService {\n        constructor(_calendar, _i18n) {\n            this._calendar = _calendar;\n            this._i18n = _i18n;\n            this._VALIDATORS = {\n                dayTemplateData: (dayTemplateData) => {\n                    if (this._state.dayTemplateData !== dayTemplateData) {\n                        return { dayTemplateData };\n                    }\n                },\n                displayMonths: (displayMonths) => {\n                    displayMonths = toInteger(displayMonths);\n                    if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n                        return { displayMonths };\n                    }\n                },\n                disabled: (disabled) => {\n                    if (this._state.disabled !== disabled) {\n                        return { disabled };\n                    }\n                },\n                firstDayOfWeek: (firstDayOfWeek) => {\n                    firstDayOfWeek = toInteger(firstDayOfWeek);\n                    if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n                        return { firstDayOfWeek };\n                    }\n                },\n                focusVisible: (focusVisible) => {\n                    if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n                        return { focusVisible };\n                    }\n                },\n                markDisabled: (markDisabled) => {\n                    if (this._state.markDisabled !== markDisabled) {\n                        return { markDisabled };\n                    }\n                },\n                maxDate: (date) => {\n                    const maxDate = this.toValidDate(date, null);\n                    if (isChangedDate(this._state.maxDate, maxDate)) {\n                        return { maxDate };\n                    }\n                },\n                minDate: (date) => {\n                    const minDate = this.toValidDate(date, null);\n                    if (isChangedDate(this._state.minDate, minDate)) {\n                        return { minDate };\n                    }\n                },\n                navigation: (navigation) => {\n                    if (this._state.navigation !== navigation) {\n                        return { navigation };\n                    }\n                },\n                outsideDays: (outsideDays) => {\n                    if (this._state.outsideDays !== outsideDays) {\n                        return { outsideDays };\n                    }\n                }\n            };\n            this._model$ = new Subject[\"a\" /* Subject */]();\n            this._dateSelect$ = new Subject[\"a\" /* Subject */]();\n            this._state = {\n                dayTemplateData: null,\n                markDisabled: null,\n                maxDate: null,\n                minDate: null,\n                disabled: false,\n                displayMonths: 1,\n                firstDate: null,\n                firstDayOfWeek: 1,\n                lastDate: null,\n                focusDate: null,\n                focusVisible: false,\n                months: [],\n                navigation: 'select',\n                outsideDays: 'visible',\n                prevDisabled: false,\n                nextDisabled: false,\n                selectedDate: null,\n                selectBoxes: { years: [], months: [] }\n            };\n        }\n        get model$() { return this._model$.pipe(Object(filter[\"a\" /* filter */])(model => model.months.length > 0)); }\n        get dateSelect$() { return this._dateSelect$.pipe(Object(filter[\"a\" /* filter */])(date => date !== null)); }\n        set(options) {\n            let patch = Object.keys(options)\n                .map(key => this._VALIDATORS[key](options[key]))\n                .reduce((obj, part) => (Object.assign(Object.assign({}, obj), part)), {});\n            if (Object.keys(patch).length > 0) {\n                this._nextState(patch);\n            }\n        }\n        focus(date) {\n            const focusedDate = this.toValidDate(date, null);\n            if (focusedDate != null && !this._state.disabled && isChangedDate(this._state.focusDate, focusedDate)) {\n                this._nextState({ focusDate: date });\n            }\n        }\n        focusSelect() {\n            if (isDateSelectable(this._state.focusDate, this._state)) {\n                this.select(this._state.focusDate, { emitEvent: true });\n            }\n        }\n        open(date) {\n            const firstDate = this.toValidDate(date, this._calendar.getToday());\n            if (firstDate != null && !this._state.disabled &&\n                (!this._state.firstDate || isChangedMonth(this._state.firstDate, firstDate))) {\n                this._nextState({ firstDate });\n            }\n        }\n        select(date, options = {}) {\n            const selectedDate = this.toValidDate(date, null);\n            if (selectedDate != null && !this._state.disabled) {\n                if (isChangedDate(this._state.selectedDate, selectedDate)) {\n                    this._nextState({ selectedDate });\n                }\n                if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n                    this._dateSelect$.next(selectedDate);\n                }\n            }\n        }\n        toValidDate(date, defaultValue) {\n            const ngbDate = NgbDate.from(date);\n            if (defaultValue === undefined) {\n                defaultValue = this._calendar.getToday();\n            }\n            return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n        }\n        getMonth(struct) {\n            for (let month of this._state.months) {\n                if (struct.month === month.number && struct.year === month.year) {\n                    return month;\n                }\n            }\n            throw new Error(`month ${struct.month} of year ${struct.year} not found`);\n        }\n        _nextState(patch) {\n            const newState = this._updateState(patch);\n            this._patchContexts(newState);\n            this._state = newState;\n            this._model$.next(this._state);\n        }\n        _patchContexts(state) {\n            const { months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays } = state;\n            state.months.forEach(month => {\n                month.weeks.forEach(week => {\n                    week.days.forEach(day => {\n                        // patch focus flag\n                        if (focusDate) {\n                            day.context.focused = focusDate.equals(day.date) && focusVisible;\n                        }\n                        // calculating tabindex\n                        day.tabindex =\n                            !disabled && focusDate && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n                        // override context disabled\n                        if (disabled === true) {\n                            day.context.disabled = true;\n                        }\n                        // patch selection flag\n                        if (selectedDate !== undefined) {\n                            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n                        }\n                        // visibility\n                        if (month.number !== day.date.month) {\n                            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                                    day.date.before(months[displayMonths - 1].lastDate));\n                        }\n                    });\n                });\n            });\n        }\n        _updateState(patch) {\n            // patching fields\n            const state = Object.assign({}, this._state, patch);\n            let startDate = state.firstDate;\n            // min/max dates changed\n            if ('minDate' in patch || 'maxDate' in patch) {\n                checkMinBeforeMax(state.minDate, state.maxDate);\n                state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n                state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n                startDate = state.focusDate;\n            }\n            // disabled\n            if ('disabled' in patch) {\n                state.focusVisible = false;\n            }\n            // initial rebuild via 'select()'\n            if ('selectedDate' in patch && this._state.months.length === 0) {\n                startDate = state.selectedDate;\n            }\n            // terminate early if only focus visibility was changed\n            if ('focusVisible' in patch) {\n                return state;\n            }\n            // focus date changed\n            if ('focusDate' in patch) {\n                state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n                startDate = state.focusDate;\n                // nothing to rebuild if only focus changed and it is still visible\n                if (state.months.length !== 0 && state.focusDate && !state.focusDate.before(state.firstDate) &&\n                    !state.focusDate.after(state.lastDate)) {\n                    return state;\n                }\n            }\n            // first date changed\n            if ('firstDate' in patch) {\n                state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n                startDate = state.firstDate;\n            }\n            // rebuilding months\n            if (startDate) {\n                const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n                    'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n                const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n                // updating months and boundary dates\n                state.months = months;\n                state.firstDate = months[0].firstDate;\n                state.lastDate = months[months.length - 1].lastDate;\n                // reset selected date if 'markDisabled' returns true\n                if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n                    state.selectedDate = null;\n                }\n                // adjusting focus after months were built\n                if ('firstDate' in patch) {\n                    if (!state.focusDate || state.focusDate.before(state.firstDate) || state.focusDate.after(state.lastDate)) {\n                        state.focusDate = startDate;\n                    }\n                }\n                // adjusting months/years for the select box navigation\n                const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n                const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n                if (state.navigation === 'select') {\n                    // years ->  boundaries (min/max were changed)\n                    if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n                        state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n                    }\n                    // months -> when current year or boundaries change\n                    if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n                        state.selectBoxes.months =\n                            generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n                    }\n                }\n                else {\n                    state.selectBoxes = { years: [], months: [] };\n                }\n                // updating navigation arrows -> boundaries change (min/max) or month/year changes\n                if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n                    (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n                    state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n                    state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n                }\n            }\n            return state;\n        }\n    };\n    NgbDatepickerService.ɵfac = function NgbDatepickerService_Factory(t) { return new (t || NgbDatepickerService)(core[\"Zb\" /* ɵɵinject */](ng_bootstrap_NgbCalendar), core[\"Zb\" /* ɵɵinject */](ng_bootstrap_NgbDatepickerI18n)); };\n    NgbDatepickerService.ɵprov = core[\"Jb\" /* ɵɵdefineInjectable */]({ token: NgbDatepickerService, factory: function (t) { return NgbDatepickerService.ɵfac(t); } });\n    return NgbDatepickerService;\n})();\n// clang-format on\nvar NavigationEvent = /*@__PURE__*/ (function (NavigationEvent) {\n    NavigationEvent[NavigationEvent[\"PREV\"] = 0] = \"PREV\";\n    NavigationEvent[NavigationEvent[\"NEXT\"] = 1] = \"NEXT\";\n    return NavigationEvent;\n})({});\nlet ng_bootstrap_NgbDatepickerConfig = /*@__PURE__*/ (() => {\n    /**\n     * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n     *\n     * You can inject this service, typically in your root component, and customize the values of its properties in\n     * order to provide default values for all the datepickers used in the application.\n     */\n    let NgbDatepickerConfig = class NgbDatepickerConfig {\n        constructor() {\n            this.displayMonths = 1;\n            this.firstDayOfWeek = 1;\n            this.navigation = 'select';\n            this.outsideDays = 'visible';\n            this.showWeekdays = true;\n            this.showWeekNumbers = false;\n        }\n    };\n    NgbDatepickerConfig.ɵfac = function NgbDatepickerConfig_Factory(t) { return new (t || NgbDatepickerConfig)(); };\n    NgbDatepickerConfig.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbDatepickerConfig_Factory() { return new NgbDatepickerConfig(); }, token: NgbDatepickerConfig, providedIn: \"root\" });\n    return NgbDatepickerConfig;\n})();\nfunction NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n    return new ng_bootstrap_NgbDateStructAdapter();\n}\nlet ng_bootstrap_NgbDateAdapter = /*@__PURE__*/ (() => {\n    /**\n     * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n     * any provided user date model `D`, ex. a string, a native date, etc.\n     *\n     * The adapter is used **only** for conversion when binding datepicker to a form control,\n     * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n     *\n     * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n     *\n     * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n     * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n     */\n    let NgbDateAdapter = class NgbDateAdapter {\n    };\n    NgbDateAdapter.ɵfac = function NgbDateAdapter_Factory(t) { return new (t || NgbDateAdapter)(); };\n    NgbDateAdapter.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY, token: NgbDateAdapter, providedIn: \"root\" });\n    return NgbDateAdapter;\n})();\nlet ng_bootstrap_NgbDateStructAdapter = /*@__PURE__*/ (() => {\n    let NgbDateStructAdapter = class NgbDateStructAdapter extends ng_bootstrap_NgbDateAdapter {\n        /**\n         * Converts a NgbDateStruct value into NgbDateStruct value\n         */\n        fromModel(date) {\n            return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n                { year: date.year, month: date.month, day: date.day } :\n                null;\n        }\n        /**\n         * Converts a NgbDateStruct value into NgbDateStruct value\n         */\n        toModel(date) {\n            return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n                { year: date.year, month: date.month, day: date.day } :\n                null;\n        }\n    };\n    NgbDateStructAdapter.ɵfac = function NgbDateStructAdapter_Factory(t) { return ɵNgbDateStructAdapter_BaseFactory(t || NgbDateStructAdapter); };\n    NgbDateStructAdapter.ɵprov = core[\"Jb\" /* ɵɵdefineInjectable */]({ token: NgbDateStructAdapter, factory: function (t) { return NgbDateStructAdapter.ɵfac(t); } });\n    return NgbDateStructAdapter;\n})();\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n    provide: fesm2015_forms[\"i\" /* NG_VALUE_ACCESSOR */],\n    useExisting: Object(core[\"V\" /* forwardRef */])(() => ng_bootstrap_NgbDatepicker),\n    multi: true\n};\nlet ng_bootstrap_NgbDatepickerContent = /*@__PURE__*/ (() => {\n    /**\n     * A directive that marks the content template that customizes the way datepicker months are displayed\n     *\n     * @since 5.3.0\n     */\n    let NgbDatepickerContent = class NgbDatepickerContent {\n        constructor(templateRef) {\n            this.templateRef = templateRef;\n        }\n    };\n    NgbDatepickerContent.ɵfac = function NgbDatepickerContent_Factory(t) { return new (t || NgbDatepickerContent)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    NgbDatepickerContent.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbDatepickerContent, selectors: [[\"ng-template\", \"ngbDatepickerContent\", \"\"]] });\n    return NgbDatepickerContent;\n})();\nlet ng_bootstrap_NgbDatepicker = /*@__PURE__*/ (() => {\n    /**\n     * A highly configurable component that helps you with selecting calendar dates.\n     *\n     * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n     */\n    let NgbDatepicker = class NgbDatepicker {\n        constructor(_service, _calendar, i18n, config, cd, _elementRef, _ngbDateAdapter, _ngZone) {\n            this._service = _service;\n            this._calendar = _calendar;\n            this.i18n = i18n;\n            this._elementRef = _elementRef;\n            this._ngbDateAdapter = _ngbDateAdapter;\n            this._ngZone = _ngZone;\n            this._controlValue = null;\n            this._destroyed$ = new Subject[\"a\" /* Subject */]();\n            this._publicState = {};\n            /**\n             * An event emitted right before the navigation happens and displayed month changes.\n             *\n             * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n             */\n            this.navigate = new core[\"o\" /* EventEmitter */]();\n            /**\n             * An event emitted when user selects a date using keyboard or mouse.\n             *\n             * The payload of the event is currently selected `NgbDate`.\n             *\n             * @since 5.2.0\n             */\n            this.dateSelect = new core[\"o\" /* EventEmitter */]();\n            /**\n             * An event emitted when user selects a date using keyboard or mouse.\n             *\n             * The payload of the event is currently selected `NgbDate`.\n             *\n             * @deprecated 6.0.0 Please use 'dateSelect' output instead due to collision with native\n             * 'select' event.\n             */\n            this.select = this.dateSelect;\n            this.onChange = (_) => { };\n            this.onTouched = () => { };\n            ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n                'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n                .forEach(input => this[input] = config[input]);\n            _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(date => { this.dateSelect.emit(date); });\n            _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model => {\n                const newDate = model.firstDate;\n                const oldDate = this.model ? this.model.firstDate : null;\n                // update public state\n                this._publicState = {\n                    maxDate: model.maxDate,\n                    minDate: model.minDate,\n                    firstDate: model.firstDate,\n                    lastDate: model.lastDate,\n                    focusedDate: model.focusDate,\n                    months: model.months.map(viewModel => viewModel.firstDate)\n                };\n                let navigationPrevented = false;\n                // emitting navigation event if the first month changes\n                if (!newDate.equals(oldDate)) {\n                    this.navigate.emit({\n                        current: oldDate ? { year: oldDate.year, month: oldDate.month } : null,\n                        next: { year: newDate.year, month: newDate.month },\n                        preventDefault: () => navigationPrevented = true\n                    });\n                    // can't prevent the very first navigation\n                    if (navigationPrevented && oldDate !== null) {\n                        this._service.open(oldDate);\n                        return;\n                    }\n                }\n                const newSelectedDate = model.selectedDate;\n                const newFocusedDate = model.focusDate;\n                const oldFocusedDate = this.model ? this.model.focusDate : null;\n                this.model = model;\n                // handling selection change\n                if (isChangedDate(newSelectedDate, this._controlValue)) {\n                    this._controlValue = newSelectedDate;\n                    this.onTouched();\n                    this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n                }\n                // handling focus change\n                if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n                    this.focus();\n                }\n                cd.markForCheck();\n            });\n        }\n        /**\n         *  Returns the readonly public state of the datepicker\n         *\n         * @since 5.2.0\n         */\n        get state() { return this._publicState; }\n        /**\n         *  Returns the calendar service used in the specific datepicker instance.\n         *\n         *  @since 5.3.0\n         */\n        get calendar() { return this._calendar; }\n        /**\n         *  Focuses on given date.\n         */\n        focusDate(date) { this._service.focus(NgbDate.from(date)); }\n        /**\n         *  Selects focused date.\n         */\n        focusSelect() { this._service.focusSelect(); }\n        focus() {\n            this._ngZone.onStable.asObservable().pipe(Object(take[\"a\" /* take */])(1)).subscribe(() => {\n                const elementToFocus = this._elementRef.nativeElement.querySelector('div.ngb-dp-day[tabindex=\"0\"]');\n                if (elementToFocus) {\n                    elementToFocus.focus();\n                }\n            });\n        }\n        /**\n         * Navigates to the provided date.\n         *\n         * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n         * If nothing or invalid date provided calendar will open current month.\n         *\n         * Use the `[startDate]` input as an alternative.\n         */\n        navigateTo(date) {\n            this._service.open(NgbDate.from(date ? date.day ? date : Object.assign(Object.assign({}, date), { day: 1 }) : null));\n        }\n        ngAfterViewInit() {\n            this._ngZone.runOutsideAngular(() => {\n                const focusIns$ = fromEvent(this._contentEl.nativeElement, 'focusin');\n                const focusOuts$ = fromEvent(this._contentEl.nativeElement, 'focusout');\n                const { nativeElement } = this._elementRef;\n                // we're changing 'focusVisible' only when entering or leaving months view\n                // and ignoring all focus events where both 'target' and 'related' target are day cells\n                Object(merge[\"a\" /* merge */])(focusIns$, focusOuts$)\n                    .pipe(Object(filter[\"a\" /* filter */])(({ target, relatedTarget }) => !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') &&\n                    nativeElement.contains(target) && nativeElement.contains(relatedTarget))), takeUntil(this._destroyed$))\n                    .subscribe(({ type }) => this._ngZone.run(() => this._service.set({ focusVisible: type === 'focusin' })));\n            });\n        }\n        ngOnDestroy() { this._destroyed$.next(); }\n        ngOnInit() {\n            if (this.model === undefined) {\n                const inputs = {};\n                ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n                    'outsideDays']\n                    .forEach(name => inputs[name] = this[name]);\n                this._service.set(inputs);\n                this.navigateTo(this.startDate);\n            }\n            if (!this.dayTemplate) {\n                this.dayTemplate = this._defaultDayTemplate;\n            }\n        }\n        ngOnChanges(changes) {\n            const inputs = {};\n            ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n                'outsideDays']\n                .filter(name => name in changes)\n                .forEach(name => inputs[name] = this[name]);\n            this._service.set(inputs);\n            if ('startDate' in changes) {\n                const { currentValue, previousValue } = changes.startDate;\n                if (isChangedMonth(previousValue, currentValue)) {\n                    this.navigateTo(this.startDate);\n                }\n            }\n        }\n        onDateSelect(date) {\n            this._service.focus(date);\n            this._service.select(date, { emitEvent: true });\n        }\n        onNavigateDateSelect(date) { this._service.open(date); }\n        onNavigateEvent(event) {\n            switch (event) {\n                case NavigationEvent.PREV:\n                    this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n                    break;\n                case NavigationEvent.NEXT:\n                    this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n                    break;\n            }\n        }\n        registerOnChange(fn) { this.onChange = fn; }\n        registerOnTouched(fn) { this.onTouched = fn; }\n        setDisabledState(disabled) { this._service.set({ disabled }); }\n        writeValue(value) {\n            this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n            this._service.select(this._controlValue);\n        }\n    };\n    NgbDatepicker.ɵfac = function NgbDatepicker_Factory(t) { return new (t || NgbDatepicker)(core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbDatepickerService), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbCalendar), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbDatepickerI18n), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbDatepickerConfig), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"i\" /* ChangeDetectorRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbDateAdapter), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"C\" /* NgZone */])); };\n    NgbDatepicker.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbDatepicker, selectors: [[\"ngb-datepicker\"]], contentQueries: function NgbDatepicker_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbDatepickerContent, 3);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.contentTemplate = _t.first);\n            }\n        }, viewQuery: function NgbDatepicker_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Fc\" /* ɵɵviewQuery */](_c8, 3);\n                core[\"Fc\" /* ɵɵviewQuery */](_c9, 3);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx._defaultDayTemplate = _t.first);\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx._contentEl = _t.first);\n            }\n        }, inputs: { dayTemplate: \"dayTemplate\", dayTemplateData: \"dayTemplateData\", displayMonths: \"displayMonths\", firstDayOfWeek: \"firstDayOfWeek\", footerTemplate: \"footerTemplate\", markDisabled: \"markDisabled\", maxDate: \"maxDate\", minDate: \"minDate\", navigation: \"navigation\", outsideDays: \"outsideDays\", showWeekdays: \"showWeekdays\", showWeekNumbers: \"showWeekNumbers\", startDate: \"startDate\" }, outputs: { navigate: \"navigate\", dateSelect: \"dateSelect\", select: \"select\" }, exportAs: [\"ngbDatepicker\"], features: [core[\"zb\" /* ɵɵProvidersFeature */]([NGB_DATEPICKER_VALUE_ACCESSOR, ng_bootstrap_NgbDatepickerService]), core[\"yb\" /* ɵɵNgOnChangesFeature */]], decls: 10, vars: 5, consts: [[\"defaultDayTemplate\", \"\"], [\"defaultContentTemplate\", \"\"], [1, \"ngb-dp-header\"], [3, \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\", \"navigate\", \"select\", 4, \"ngIf\"], [1, \"ngb-dp-content\"], [\"content\", \"\"], [3, \"ngTemplateOutlet\"], [\"ngbDatepickerDayView\", \"\", 3, \"date\", \"currentMonth\", \"selected\", \"disabled\", \"focused\"], [\"class\", \"ngb-dp-month\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-month\"], [\"class\", \"ngb-dp-month-name\", 4, \"ngIf\"], [3, \"month\"], [1, \"ngb-dp-month-name\"], [3, \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\", \"navigate\", \"select\"]], template: function NgbDatepicker_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"yc\" /* ɵɵtemplate */](0, NgbDatepicker_ng_template_0_Template, 1, 5, \"ng-template\", null, 0, core[\"zc\" /* ɵɵtemplateRefExtractor */]);\n                core[\"yc\" /* ɵɵtemplate */](2, NgbDatepicker_ng_template_2_Template, 1, 1, \"ng-template\", null, 1, core[\"zc\" /* ɵɵtemplateRefExtractor */]);\n                core[\"Sb\" /* ɵɵelementStart */](4, \"div\", 2);\n                core[\"yc\" /* ɵɵtemplate */](5, NgbDatepicker_ngb_datepicker_navigation_5_Template, 1, 7, \"ngb-datepicker-navigation\", 3);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n                core[\"Sb\" /* ɵɵelementStart */](6, \"div\", 4, 5);\n                core[\"yc\" /* ɵɵtemplate */](8, NgbDatepicker_ng_template_8_Template, 0, 0, \"ng-template\", 6);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n                core[\"yc\" /* ɵɵtemplate */](9, NgbDatepicker_ng_template_9_Template, 0, 0, \"ng-template\", 6);\n            }\n            if (rf & 2) {\n                const _r2 = core[\"sc\" /* ɵɵreference */](3);\n                core[\"Ab\" /* ɵɵadvance */](5);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.navigation !== \"none\");\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"Fb\" /* ɵɵclassProp */](\"ngb-dp-months\", !ctx.contentTemplate);\n                core[\"Ab\" /* ɵɵadvance */](2);\n                core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", (ctx.contentTemplate == null ? null : ctx.contentTemplate.templateRef) || _r2);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngTemplateOutlet\", ctx.footerTemplate);\n            }\n        }, directives: function () { return [common[\"m\" /* NgIf */], common[\"n\" /* NgTemplateOutlet */], ng_bootstrap_NgbDatepickerDayView, common[\"l\" /* NgForOf */], ng_bootstrap_NgbDatepickerMonth, ng_bootstrap_NgbDatepickerNavigation]; }, styles: [\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1050}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-months{display:-ms-flexbox;display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\"], encapsulation: 2, changeDetection: 0 });\n    return NgbDatepicker;\n})();\nvar Key = /*@__PURE__*/ (function (Key) {\n    Key[Key[\"Tab\"] = 9] = \"Tab\";\n    Key[Key[\"Enter\"] = 13] = \"Enter\";\n    Key[Key[\"Escape\"] = 27] = \"Escape\";\n    Key[Key[\"Space\"] = 32] = \"Space\";\n    Key[Key[\"PageUp\"] = 33] = \"PageUp\";\n    Key[Key[\"PageDown\"] = 34] = \"PageDown\";\n    Key[Key[\"End\"] = 35] = \"End\";\n    Key[Key[\"Home\"] = 36] = \"Home\";\n    Key[Key[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n    Key[Key[\"ArrowUp\"] = 38] = \"ArrowUp\";\n    Key[Key[\"ArrowRight\"] = 39] = \"ArrowRight\";\n    Key[Key[\"ArrowDown\"] = 40] = \"ArrowDown\";\n    return Key;\n})({});\nlet ng_bootstrap_NgbDatepickerKeyboardService = /*@__PURE__*/ (() => {\n    /**\n     * A service that represents the keyboard navigation.\n     *\n     * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n     *\n     * @since 5.2.0\n     */\n    let NgbDatepickerKeyboardService = class NgbDatepickerKeyboardService {\n        /**\n         * Processes a keyboard event.\n         */\n        processKey(event, datepicker) {\n            const { state, calendar } = datepicker;\n            // tslint:disable-next-line:deprecation\n            switch (event.which) {\n                case Key.PageUp:\n                    datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n                    break;\n                case Key.PageDown:\n                    datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n                    break;\n                case Key.End:\n                    datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n                    break;\n                case Key.Home:\n                    datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n                    break;\n                case Key.ArrowLeft:\n                    datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n                    break;\n                case Key.ArrowUp:\n                    datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n                    break;\n                case Key.ArrowRight:\n                    datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n                    break;\n                case Key.ArrowDown:\n                    datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n                    break;\n                case Key.Enter:\n                case Key.Space:\n                    datepicker.focusSelect();\n                    break;\n                default:\n                    return;\n            }\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n    NgbDatepickerKeyboardService.ɵfac = function NgbDatepickerKeyboardService_Factory(t) { return new (t || NgbDatepickerKeyboardService)(); };\n    NgbDatepickerKeyboardService.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbDatepickerKeyboardService_Factory() { return new NgbDatepickerKeyboardService(); }, token: NgbDatepickerKeyboardService, providedIn: \"root\" });\n    return NgbDatepickerKeyboardService;\n})();\nlet ng_bootstrap_NgbDatepickerMonth = /*@__PURE__*/ (() => {\n    /**\n     * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n     * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n     *\n     * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n     *\n     * @since 5.3.0\n     */\n    let NgbDatepickerMonth = class NgbDatepickerMonth {\n        constructor(i18n, datepicker, _keyboardService, _service) {\n            this.i18n = i18n;\n            this.datepicker = datepicker;\n            this._keyboardService = _keyboardService;\n            this._service = _service;\n        }\n        /**\n         * The first date of month to be rendered.\n         *\n         * This month must one of the months present in the\n         * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n         */\n        set month(month) {\n            this.viewModel = this._service.getMonth(month);\n        }\n        onKeyDown(event) { this._keyboardService.processKey(event, this.datepicker); }\n        doSelect(day) {\n            if (!day.context.disabled && !day.hidden) {\n                this.datepicker.onDateSelect(day.date);\n            }\n        }\n    };\n    NgbDatepickerMonth.ɵfac = function NgbDatepickerMonth_Factory(t) { return new (t || NgbDatepickerMonth)(core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbDatepickerI18n), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbDatepicker), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbDatepickerKeyboardService), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbDatepickerService)); };\n    NgbDatepickerMonth.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbDatepickerMonth, selectors: [[\"ngb-datepicker-month\"]], hostAttrs: [\"role\", \"grid\"], hostBindings: function NgbDatepickerMonth_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"cc\" /* ɵɵlistener */](\"keydown\", function NgbDatepickerMonth_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); });\n            }\n        }, inputs: { month: \"month\" }, decls: 2, vars: 2, consts: [[\"class\", \"ngb-dp-week ngb-dp-weekdays\", \"role\", \"row\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"role\", \"row\", 1, \"ngb-dp-week\", \"ngb-dp-weekdays\"], [\"class\", \"ngb-dp-weekday ngb-dp-showweek\", 4, \"ngIf\"], [\"class\", \"ngb-dp-weekday small\", \"role\", \"columnheader\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-weekday\", \"ngb-dp-showweek\"], [\"role\", \"columnheader\", 1, \"ngb-dp-weekday\", \"small\"], [\"class\", \"ngb-dp-week\", \"role\", \"row\", 4, \"ngIf\"], [\"role\", \"row\", 1, \"ngb-dp-week\"], [\"class\", \"ngb-dp-week-number small text-muted\", 4, \"ngIf\"], [\"class\", \"ngb-dp-day\", \"role\", \"gridcell\", 3, \"disabled\", \"tabindex\", \"hidden\", \"ngb-dp-today\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-week-number\", \"small\", \"text-muted\"], [\"role\", \"gridcell\", 1, \"ngb-dp-day\", 3, \"tabindex\", \"click\"], [3, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]], template: function NgbDatepickerMonth_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"yc\" /* ɵɵtemplate */](0, NgbDatepickerMonth_div_0_Template, 3, 2, \"div\", 0);\n                core[\"yc\" /* ɵɵtemplate */](1, NgbDatepickerMonth_ng_template_1_Template, 1, 1, \"ng-template\", 1);\n            }\n            if (rf & 2) {\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.datepicker.showWeekdays);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngForOf\", ctx.viewModel.weeks);\n            }\n        }, directives: [common[\"m\" /* NgIf */], common[\"l\" /* NgForOf */], common[\"n\" /* NgTemplateOutlet */]], styles: [\"ngb-datepicker-month{display:block}.ngb-dp-week-number,.ngb-dp-weekday{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:-ms-flexbox;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\"], encapsulation: 2 });\n    return NgbDatepickerMonth;\n})();\nlet ng_bootstrap_NgbDatepickerNavigation = /*@__PURE__*/ (() => {\n    let NgbDatepickerNavigation = class NgbDatepickerNavigation {\n        constructor(i18n) {\n            this.i18n = i18n;\n            this.navigation = NavigationEvent;\n            this.months = [];\n            this.navigate = new core[\"o\" /* EventEmitter */]();\n            this.select = new core[\"o\" /* EventEmitter */]();\n        }\n        onClickPrev(event) {\n            event.currentTarget.focus();\n            this.navigate.emit(this.navigation.PREV);\n        }\n        onClickNext(event) {\n            event.currentTarget.focus();\n            this.navigate.emit(this.navigation.NEXT);\n        }\n    };\n    NgbDatepickerNavigation.ɵfac = function NgbDatepickerNavigation_Factory(t) { return new (t || NgbDatepickerNavigation)(core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbDatepickerI18n)); };\n    NgbDatepickerNavigation.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbDatepickerNavigation, selectors: [[\"ngb-datepicker-navigation\"]], inputs: { months: \"months\", date: \"date\", disabled: \"disabled\", showSelect: \"showSelect\", prevDisabled: \"prevDisabled\", nextDisabled: \"nextDisabled\", selectBoxes: \"selectBoxes\" }, outputs: { navigate: \"navigate\", select: \"select\" }, decls: 8, vars: 4, consts: function () {\n            let i18n_10;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_11 = goog.getMsg(\"Previous month\");\n                i18n_10 = MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_11;\n            }\n            else {\n                i18n_10 = $localize `:@@ngb.datepicker.previous-month␟c3b08b07b5ab98e7cdcf18df39355690ab7d3884␟8586908745456864217:Previous month`;\n            }\n            let i18n_12;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_13 = goog.getMsg(\"Previous month\");\n                i18n_12 = MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_13;\n            }\n            else {\n                i18n_12 = $localize `:@@ngb.datepicker.previous-month␟c3b08b07b5ab98e7cdcf18df39355690ab7d3884␟8586908745456864217:Previous month`;\n            }\n            let i18n_14;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_15 = goog.getMsg(\"Next month\");\n                i18n_14 = MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_15;\n            }\n            else {\n                i18n_14 = $localize `:@@ngb.datepicker.next-month␟4bd046985cfe13040d5ef0cd881edce0968a111a␟3628374603023447227:Next month`;\n            }\n            let i18n_16;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_17 = goog.getMsg(\"Next month\");\n                i18n_16 = MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_17;\n            }\n            else {\n                i18n_16 = $localize `:@@ngb.datepicker.next-month␟4bd046985cfe13040d5ef0cd881edce0968a111a␟3628374603023447227:Next month`;\n            }\n            return [[1, \"ngb-dp-arrow\"], [\"type\", \"button\", \"aria-label\", i18n_10, \"title\", i18n_12, 1, \"btn\", \"btn-link\", \"ngb-dp-arrow-btn\", 3, \"disabled\", \"click\"], [1, \"ngb-dp-navigation-chevron\"], [\"class\", \"ngb-dp-navigation-select\", 3, \"date\", \"disabled\", \"months\", \"years\", \"select\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"ngb-dp-arrow\", \"right\"], [\"type\", \"button\", \"aria-label\", i18n_14, \"title\", i18n_16, 1, \"btn\", \"btn-link\", \"ngb-dp-arrow-btn\", 3, \"disabled\", \"click\"], [1, \"ngb-dp-navigation-select\", 3, \"date\", \"disabled\", \"months\", \"years\", \"select\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"ngb-dp-arrow\", 4, \"ngIf\"], [1, \"ngb-dp-month-name\"]];\n        }, template: function NgbDatepickerNavigation_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 0);\n                core[\"Sb\" /* ɵɵelementStart */](1, \"button\", 1);\n                core[\"cc\" /* ɵɵlistener */](\"click\", function NgbDatepickerNavigation_Template_button_click_1_listener($event) { return ctx.onClickPrev($event); });\n                core[\"Ob\" /* ɵɵelement */](2, \"span\", 2);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n                core[\"Rb\" /* ɵɵelementEnd */]();\n                core[\"yc\" /* ɵɵtemplate */](3, NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template, 1, 4, \"ngb-datepicker-navigation-select\", 3);\n                core[\"yc\" /* ɵɵtemplate */](4, NgbDatepickerNavigation_4_Template, 1, 1, undefined, 4);\n                core[\"Sb\" /* ɵɵelementStart */](5, \"div\", 5);\n                core[\"Sb\" /* ɵɵelementStart */](6, \"button\", 6);\n                core[\"cc\" /* ɵɵlistener */](\"click\", function NgbDatepickerNavigation_Template_button_click_6_listener($event) { return ctx.onClickNext($event); });\n                core[\"Ob\" /* ɵɵelement */](7, \"span\", 2);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n                core[\"Rb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"disabled\", ctx.prevDisabled);\n                core[\"Ab\" /* ɵɵadvance */](2);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.showSelect);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", !ctx.showSelect);\n                core[\"Ab\" /* ɵɵadvance */](2);\n                core[\"kc\" /* ɵɵproperty */](\"disabled\", ctx.nextDisabled);\n            }\n        }, directives: function () { return [common[\"m\" /* NgIf */], ng_bootstrap_NgbDatepickerNavigationSelect, common[\"l\" /* NgForOf */]]; }, styles: [\"ngb-datepicker-navigation{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}.right .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{-ms-flex-pack:end;justify-content:flex-end}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:-ms-flexbox;display:flex;-ms-flex:1 1 9rem;flex:1 1 9rem}\"], encapsulation: 2, changeDetection: 0 });\n    return NgbDatepickerNavigation;\n})();\nconst isContainedIn = (element, array) => array ? array.some(item => item.contains(element)) : false;\nconst ɵ0 = isContainedIn;\nconst matchesSelectorIfAny = (element, selector) => !selector || closest(element, selector) != null;\nconst ɵ1 = matchesSelectorIfAny;\nconst ɵ2 = () => {\n    const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) ||\n        (/Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2);\n    const isAndroid = () => /Android/.test(navigator.userAgent);\n    return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n};\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nconst isMobile = (ɵ2)();\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\nconst wrapAsyncForMobile = fn => isMobile ? () => setTimeout(() => fn(), 100) : fn;\nconst ɵ3 = wrapAsyncForMobile;\nfunction ngbAutoClose(zone, document, type, close, closed$, insideElements, ignoreElements, insideSelector) {\n    // closing on ESC and outside clicks\n    if (type) {\n        zone.runOutsideAngular(wrapAsyncForMobile(() => {\n            const shouldCloseOnClick = (event) => {\n                const element = event.target;\n                if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n                    return false;\n                }\n                if (type === 'inside') {\n                    return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n                }\n                else if (type === 'outside') {\n                    return !isContainedIn(element, insideElements);\n                }\n                else /* if (type === true) */ {\n                    return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n                }\n            };\n            const escapes$ = fromEvent(document, 'keydown')\n                .pipe(takeUntil(closed$), \n            // tslint:disable-next-line:deprecation\n            Object(filter[\"a\" /* filter */])(e => e.which === Key.Escape), Object(tap[\"a\" /* tap */])(e => e.preventDefault()));\n            // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n            // because on 'mouseup' DOM nodes might be detached\n            const mouseDowns$ = fromEvent(document, 'mousedown').pipe(Object(map[\"a\" /* map */])(shouldCloseOnClick), takeUntil(closed$));\n            const closeableClicks$ = fromEvent(document, 'mouseup')\n                .pipe(withLatestFrom(mouseDowns$), Object(filter[\"a\" /* filter */])(([_, shouldClose]) => shouldClose), delay_delay(0), takeUntil(closed$));\n            race([\n                escapes$.pipe(Object(map[\"a\" /* map */])(_ => 0 /* ESCAPE */)), closeableClicks$.pipe(Object(map[\"a\" /* map */])(_ => 1 /* CLICK */))\n            ]).subscribe((source) => zone.run(() => close(source)));\n        }));\n    }\n}\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n    'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n    'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nfunction getFocusableBoundaryElements(element) {\n    const list = Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR))\n        .filter(el => el.tabIndex !== -1);\n    return [list[0], list[list.length - 1]];\n}\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nconst ngbFocusTrap = (zone, element, stopFocusTrap$, refocusOnClick = false) => {\n    zone.runOutsideAngular(() => {\n        // last focused element\n        const lastFocusedElement$ = fromEvent(element, 'focusin').pipe(takeUntil(stopFocusTrap$), Object(map[\"a\" /* map */])(e => e.target));\n        // 'tab' / 'shift+tab' stream\n        fromEvent(element, 'keydown')\n            .pipe(takeUntil(stopFocusTrap$), \n        // tslint:disable:deprecation\n        Object(filter[\"a\" /* filter */])(e => e.which === Key.Tab), \n        // tslint:enable:deprecation\n        withLatestFrom(lastFocusedElement$))\n            .subscribe(([tabEvent, focusedElement]) => {\n            const [first, last] = getFocusableBoundaryElements(element);\n            if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n                last.focus();\n                tabEvent.preventDefault();\n            }\n            if (focusedElement === last && !tabEvent.shiftKey) {\n                first.focus();\n                tabEvent.preventDefault();\n            }\n        });\n        // inside click\n        if (refocusOnClick) {\n            fromEvent(element, 'click')\n                .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), Object(map[\"a\" /* map */])(arr => arr[1]))\n                .subscribe(lastFocusedElement => lastFocusedElement.focus());\n        }\n    });\n};\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nclass Positioning {\n    getAllStyles(element) { return window.getComputedStyle(element); }\n    getStyle(element, prop) { return this.getAllStyles(element)[prop]; }\n    isStaticPositioned(element) {\n        return (this.getStyle(element, 'position') || 'static') === 'static';\n    }\n    offsetParent(element) {\n        let offsetParentEl = element.offsetParent || document.documentElement;\n        while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n            offsetParentEl = offsetParentEl.offsetParent;\n        }\n        return offsetParentEl || document.documentElement;\n    }\n    position(element, round = true) {\n        let elPosition;\n        let parentOffset = { width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0 };\n        if (this.getStyle(element, 'position') === 'fixed') {\n            elPosition = element.getBoundingClientRect();\n            elPosition = {\n                top: elPosition.top,\n                bottom: elPosition.bottom,\n                left: elPosition.left,\n                right: elPosition.right,\n                height: elPosition.height,\n                width: elPosition.width\n            };\n        }\n        else {\n            const offsetParentEl = this.offsetParent(element);\n            elPosition = this.offset(element, false);\n            if (offsetParentEl !== document.documentElement) {\n                parentOffset = this.offset(offsetParentEl, false);\n            }\n            parentOffset.top += offsetParentEl.clientTop;\n            parentOffset.left += offsetParentEl.clientLeft;\n        }\n        elPosition.top -= parentOffset.top;\n        elPosition.bottom -= parentOffset.top;\n        elPosition.left -= parentOffset.left;\n        elPosition.right -= parentOffset.left;\n        if (round) {\n            elPosition.top = Math.round(elPosition.top);\n            elPosition.bottom = Math.round(elPosition.bottom);\n            elPosition.left = Math.round(elPosition.left);\n            elPosition.right = Math.round(elPosition.right);\n        }\n        return elPosition;\n    }\n    offset(element, round = true) {\n        const elBcr = element.getBoundingClientRect();\n        const viewportOffset = {\n            top: window.pageYOffset - document.documentElement.clientTop,\n            left: window.pageXOffset - document.documentElement.clientLeft\n        };\n        let elOffset = {\n            height: elBcr.height || element.offsetHeight,\n            width: elBcr.width || element.offsetWidth,\n            top: elBcr.top + viewportOffset.top,\n            bottom: elBcr.bottom + viewportOffset.top,\n            left: elBcr.left + viewportOffset.left,\n            right: elBcr.right + viewportOffset.left\n        };\n        if (round) {\n            elOffset.height = Math.round(elOffset.height);\n            elOffset.width = Math.round(elOffset.width);\n            elOffset.top = Math.round(elOffset.top);\n            elOffset.bottom = Math.round(elOffset.bottom);\n            elOffset.left = Math.round(elOffset.left);\n            elOffset.right = Math.round(elOffset.right);\n        }\n        return elOffset;\n    }\n    /*\n      Return false if the element to position is outside the viewport\n    */\n    positionElements(hostElement, targetElement, placement, appendToBody) {\n        const [placementPrimary = 'top', placementSecondary = 'center'] = placement.split('-');\n        const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n        const targetElStyles = this.getAllStyles(targetElement);\n        const marginTop = parseFloat(targetElStyles.marginTop);\n        const marginBottom = parseFloat(targetElStyles.marginBottom);\n        const marginLeft = parseFloat(targetElStyles.marginLeft);\n        const marginRight = parseFloat(targetElStyles.marginRight);\n        let topPosition = 0;\n        let leftPosition = 0;\n        switch (placementPrimary) {\n            case 'top':\n                topPosition = (hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom));\n                break;\n            case 'bottom':\n                topPosition = (hostElPosition.top + hostElPosition.height);\n                break;\n            case 'left':\n                leftPosition = (hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight));\n                break;\n            case 'right':\n                leftPosition = (hostElPosition.left + hostElPosition.width);\n                break;\n        }\n        switch (placementSecondary) {\n            case 'top':\n                topPosition = hostElPosition.top;\n                break;\n            case 'bottom':\n                topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n                break;\n            case 'left':\n                leftPosition = hostElPosition.left;\n                break;\n            case 'right':\n                leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n                break;\n            case 'center':\n                if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n                    leftPosition = (hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2);\n                }\n                else {\n                    topPosition = (hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2);\n                }\n                break;\n        }\n        /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n        // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n        targetElement.style.transform = `translate(${Math.round(leftPosition)}px, ${Math.round(topPosition)}px)`;\n        // Check if the targetElement is inside the viewport\n        const targetElBCR = targetElement.getBoundingClientRect();\n        const html = document.documentElement;\n        const windowHeight = window.innerHeight || html.clientHeight;\n        const windowWidth = window.innerWidth || html.clientWidth;\n        return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth &&\n            targetElBCR.bottom <= windowHeight;\n    }\n}\nconst placementSeparator = /\\s+/;\nconst positionService = new Positioning();\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nfunction positionElements(hostElement, targetElement, placement, appendToBody, baseClass) {\n    let placementVals = Array.isArray(placement) ? placement : placement.split(placementSeparator);\n    const allowedPlacements = [\n        'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom',\n        'right-top', 'right-bottom'\n    ];\n    const classList = targetElement.classList;\n    const addClassesToTarget = (targetPlacement) => {\n        const [primary, secondary] = targetPlacement.split('-');\n        const classes = [];\n        if (baseClass) {\n            classes.push(`${baseClass}-${primary}`);\n            if (secondary) {\n                classes.push(`${baseClass}-${primary}-${secondary}`);\n            }\n            classes.forEach((classname) => { classList.add(classname); });\n        }\n        return classes;\n    };\n    // Remove old placement classes to avoid issues\n    if (baseClass) {\n        allowedPlacements.forEach((placementToRemove) => { classList.remove(`${baseClass}-${placementToRemove}`); });\n    }\n    // replace auto placement with other placements\n    let hasAuto = placementVals.findIndex(val => val === 'auto');\n    if (hasAuto >= 0) {\n        allowedPlacements.forEach(function (obj) {\n            if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n                placementVals.splice(hasAuto++, 1, obj);\n            }\n        });\n    }\n    // coordinates where to position\n    // Required for transform:\n    const style = targetElement.style;\n    style.position = 'absolute';\n    style.top = '0';\n    style.left = '0';\n    style['will-change'] = 'transform';\n    let testPlacement = null;\n    let isInViewport = false;\n    for (testPlacement of placementVals) {\n        let addedClasses = addClassesToTarget(testPlacement);\n        if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n            isInViewport = true;\n            break;\n        }\n        // Remove the baseClasses for further calculation\n        if (baseClass) {\n            addedClasses.forEach((classname) => { classList.remove(classname); });\n        }\n    }\n    if (!isInViewport) {\n        // If nothing match, the first placement is the default one\n        testPlacement = placementVals[0];\n        addClassesToTarget(testPlacement);\n        positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n    }\n    return testPlacement;\n}\nfunction NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n    return new ng_bootstrap_NgbDateISOParserFormatter();\n}\nlet ng_bootstrap_NgbDateParserFormatter = /*@__PURE__*/ (() => {\n    /**\n     * An abstract service for parsing and formatting dates for the\n     * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n     * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n     * input element.\n     *\n     * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n     * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n     * in the input.\n     *\n     * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n     * to use an alternative string format or a custom parsing logic.\n     *\n     * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n     */\n    let NgbDateParserFormatter = class NgbDateParserFormatter {\n    };\n    NgbDateParserFormatter.ɵfac = function NgbDateParserFormatter_Factory(t) { return new (t || NgbDateParserFormatter)(); };\n    NgbDateParserFormatter.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY, token: NgbDateParserFormatter, providedIn: \"root\" });\n    return NgbDateParserFormatter;\n})();\nlet ng_bootstrap_NgbDateISOParserFormatter = /*@__PURE__*/ (() => {\n    let NgbDateISOParserFormatter = class NgbDateISOParserFormatter extends ng_bootstrap_NgbDateParserFormatter {\n        parse(value) {\n            if (value != null) {\n                const dateParts = value.trim().split('-');\n                if (dateParts.length === 1 && isNumber(dateParts[0])) {\n                    return { year: toInteger(dateParts[0]), month: null, day: null };\n                }\n                else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n                    return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null };\n                }\n                else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n                    return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2]) };\n                }\n            }\n            return null;\n        }\n        format(date) {\n            return date ?\n                `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n                '';\n        }\n    };\n    NgbDateISOParserFormatter.ɵfac = function NgbDateISOParserFormatter_Factory(t) { return ɵNgbDateISOParserFormatter_BaseFactory(t || NgbDateISOParserFormatter); };\n    NgbDateISOParserFormatter.ɵprov = core[\"Jb\" /* ɵɵdefineInjectable */]({ token: NgbDateISOParserFormatter, factory: function (t) { return NgbDateISOParserFormatter.ɵfac(t); } });\n    return NgbDateISOParserFormatter;\n})();\nlet ng_bootstrap_NgbInputDatepickerConfig = /*@__PURE__*/ (() => {\n    /**\n     * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n     *\n     * You can inject this service, typically in your root component, and customize the values of its properties in\n     * order to provide default values for all the datepicker inputs used in the application.\n     *\n     * @since 5.2.0\n     */\n    let NgbInputDatepickerConfig = class NgbInputDatepickerConfig extends ng_bootstrap_NgbDatepickerConfig {\n        constructor() {\n            super(...arguments);\n            this.autoClose = true;\n            this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n            this.restoreFocus = true;\n        }\n    };\n    NgbInputDatepickerConfig.ɵfac = function NgbInputDatepickerConfig_Factory(t) { return ɵNgbInputDatepickerConfig_BaseFactory(t || NgbInputDatepickerConfig); };\n    NgbInputDatepickerConfig.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbInputDatepickerConfig_Factory() { return new NgbInputDatepickerConfig(); }, token: NgbInputDatepickerConfig, providedIn: \"root\" });\n    return NgbInputDatepickerConfig;\n})();\nconst NGB_DATEPICKER_VALUE_ACCESSOR$1 = {\n    provide: fesm2015_forms[\"i\" /* NG_VALUE_ACCESSOR */],\n    useExisting: Object(core[\"V\" /* forwardRef */])(() => ng_bootstrap_NgbInputDatepicker),\n    multi: true\n};\nconst NGB_DATEPICKER_VALIDATOR = {\n    provide: fesm2015_forms[\"h\" /* NG_VALIDATORS */],\n    useExisting: Object(core[\"V\" /* forwardRef */])(() => ng_bootstrap_NgbInputDatepicker),\n    multi: true\n};\nlet ng_bootstrap_NgbInputDatepicker = /*@__PURE__*/ (() => {\n    /**\n     * A directive that allows to stick a datepicker popup to an input field.\n     *\n     * Manages interaction with the input field itself, does value formatting and provides forms integration.\n     */\n    let NgbInputDatepicker = class NgbInputDatepicker {\n        constructor(_parserFormatter, _elRef, _vcRef, _renderer, _cfr, _ngZone, _calendar, _dateAdapter, _document, _changeDetector, config) {\n            this._parserFormatter = _parserFormatter;\n            this._elRef = _elRef;\n            this._vcRef = _vcRef;\n            this._renderer = _renderer;\n            this._cfr = _cfr;\n            this._ngZone = _ngZone;\n            this._calendar = _calendar;\n            this._dateAdapter = _dateAdapter;\n            this._document = _document;\n            this._changeDetector = _changeDetector;\n            this._cRef = null;\n            this._disabled = false;\n            this._elWithFocus = null;\n            this._model = null;\n            /**\n             * An event emitted when user selects a date using keyboard or mouse.\n             *\n             * The payload of the event is currently selected `NgbDate`.\n             *\n             * @since 1.1.1\n             */\n            this.dateSelect = new core[\"o\" /* EventEmitter */]();\n            /**\n             * Event emitted right after the navigation happens and displayed month changes.\n             *\n             * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n             */\n            this.navigate = new core[\"o\" /* EventEmitter */]();\n            /**\n             * An event fired after closing datepicker window.\n             *\n             * @since 4.2.0\n             */\n            this.closed = new core[\"o\" /* EventEmitter */]();\n            this._onChange = (_) => { };\n            this._onTouched = () => { };\n            this._validatorChange = () => { };\n            ['autoClose', 'container', 'positionTarget', 'placement'].forEach(input => this[input] = config[input]);\n            this._zoneSubscription = _ngZone.onStable.subscribe(() => this._updatePopupPosition());\n        }\n        get disabled() {\n            return this._disabled;\n        }\n        set disabled(value) {\n            this._disabled = value === '' || (value && value !== 'false');\n            if (this.isOpen()) {\n                this._cRef.instance.setDisabledState(this._disabled);\n            }\n        }\n        registerOnChange(fn) { this._onChange = fn; }\n        registerOnTouched(fn) { this._onTouched = fn; }\n        registerOnValidatorChange(fn) { this._validatorChange = fn; }\n        setDisabledState(isDisabled) { this.disabled = isDisabled; }\n        validate(c) {\n            const { value } = c;\n            if (value != null) {\n                const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n                if (!ngbDate) {\n                    return { 'ngbDate': { invalid: value } };\n                }\n                if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n                    return { 'ngbDate': { minDate: { minDate: this.minDate, actual: value } } };\n                }\n                if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n                    return { 'ngbDate': { maxDate: { maxDate: this.maxDate, actual: value } } };\n                }\n            }\n            return null;\n        }\n        writeValue(value) {\n            this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n            this._writeModelValue(this._model);\n        }\n        manualDateChange(value, updateView = false) {\n            const inputValueChanged = value !== this._inputValue;\n            if (inputValueChanged) {\n                this._inputValue = value;\n                this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n            }\n            if (inputValueChanged || !updateView) {\n                this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n            }\n            if (updateView && this._model) {\n                this._writeModelValue(this._model);\n            }\n        }\n        isOpen() { return !!this._cRef; }\n        /**\n         * Opens the datepicker popup.\n         *\n         * If the related form control contains a valid date, the corresponding month will be opened.\n         */\n        open() {\n            if (!this.isOpen()) {\n                const cf = this._cfr.resolveComponentFactory(ng_bootstrap_NgbDatepicker);\n                this._cRef = this._vcRef.createComponent(cf);\n                this._applyPopupStyling(this._cRef.location.nativeElement);\n                this._applyDatepickerInputs(this._cRef.instance);\n                this._subscribeForDatepickerOutputs(this._cRef.instance);\n                this._cRef.instance.ngOnInit();\n                this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n                // date selection event handling\n                this._cRef.instance.registerOnChange((selectedDate) => {\n                    this.writeValue(selectedDate);\n                    this._onChange(selectedDate);\n                    this._onTouched();\n                });\n                this._cRef.changeDetectorRef.detectChanges();\n                this._cRef.instance.setDisabledState(this.disabled);\n                if (this.container === 'body') {\n                    this._document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n                }\n                // focus handling\n                this._elWithFocus = this._document.activeElement;\n                ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n                this._cRef.instance.focus();\n                ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.closed, [], [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n            }\n        }\n        /**\n         * Closes the datepicker popup.\n         */\n        close() {\n            if (this.isOpen()) {\n                this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n                this._cRef = null;\n                this.closed.emit();\n                this._changeDetector.markForCheck();\n                // restore focus\n                let elementToFocus = this._elWithFocus;\n                if (isString(this.restoreFocus)) {\n                    elementToFocus = this._document.querySelector(this.restoreFocus);\n                }\n                else if (this.restoreFocus !== undefined) {\n                    elementToFocus = this.restoreFocus;\n                }\n                // in IE document.activeElement can contain an object without 'focus()' sometimes\n                if (elementToFocus && elementToFocus['focus']) {\n                    elementToFocus.focus();\n                }\n                else {\n                    this._document.body.focus();\n                }\n            }\n        }\n        /**\n         * Toggles the datepicker popup.\n         */\n        toggle() {\n            if (this.isOpen()) {\n                this.close();\n            }\n            else {\n                this.open();\n            }\n        }\n        /**\n         * Navigates to the provided date.\n         *\n         * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n         * If nothing or invalid date provided calendar will open current month.\n         *\n         * Use the `[startDate]` input as an alternative.\n         */\n        navigateTo(date) {\n            if (this.isOpen()) {\n                this._cRef.instance.navigateTo(date);\n            }\n        }\n        onBlur() { this._onTouched(); }\n        onFocus() { this._elWithFocus = this._elRef.nativeElement; }\n        ngOnChanges(changes) {\n            if (changes['minDate'] || changes['maxDate']) {\n                this._validatorChange();\n                if (this.isOpen()) {\n                    if (changes['minDate']) {\n                        this._cRef.instance.minDate = this.minDate;\n                    }\n                    if (changes['maxDate']) {\n                        this._cRef.instance.maxDate = this.maxDate;\n                    }\n                    this._cRef.instance.ngOnChanges(changes);\n                }\n            }\n        }\n        ngOnDestroy() {\n            this.close();\n            this._zoneSubscription.unsubscribe();\n        }\n        _applyDatepickerInputs(datepickerInstance) {\n            ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n                'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n                .forEach((optionName) => {\n                if (this[optionName] !== undefined) {\n                    datepickerInstance[optionName] = this[optionName];\n                }\n            });\n            datepickerInstance.startDate = this.startDate || this._model;\n        }\n        _applyPopupStyling(nativeElement) {\n            this._renderer.addClass(nativeElement, 'dropdown-menu');\n            this._renderer.addClass(nativeElement, 'show');\n            if (this.container === 'body') {\n                this._renderer.addClass(nativeElement, 'ngb-dp-body');\n            }\n        }\n        _subscribeForDatepickerOutputs(datepickerInstance) {\n            datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\n            datepickerInstance.dateSelect.subscribe(date => {\n                this.dateSelect.emit(date);\n                if (this.autoClose === true || this.autoClose === 'inside') {\n                    this.close();\n                }\n            });\n        }\n        _writeModelValue(model) {\n            const value = this._parserFormatter.format(model);\n            this._inputValue = value;\n            this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n            if (this.isOpen()) {\n                this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n                this._onTouched();\n            }\n        }\n        _fromDateStruct(date) {\n            const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n            return this._calendar.isValid(ngbDate) ? ngbDate : null;\n        }\n        _updatePopupPosition() {\n            if (!this._cRef) {\n                return;\n            }\n            let hostElement;\n            if (isString(this.positionTarget)) {\n                hostElement = this._document.querySelector(this.positionTarget);\n            }\n            else if (this.positionTarget instanceof HTMLElement) {\n                hostElement = this.positionTarget;\n            }\n            else {\n                hostElement = this._elRef.nativeElement;\n            }\n            if (this.positionTarget && !hostElement) {\n                throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n            }\n            positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n        }\n    };\n    NgbInputDatepicker.ɵfac = function NgbInputDatepicker_Factory(t) { return new (t || NgbInputDatepicker)(core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbDateParserFormatter), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"R\" /* ViewContainerRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"G\" /* Renderer2 */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"k\" /* ComponentFactoryResolver */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"C\" /* NgZone */]), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbCalendar), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbDateAdapter), core[\"Nb\" /* ɵɵdirectiveInject */](common[\"c\" /* DOCUMENT */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"i\" /* ChangeDetectorRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbInputDatepickerConfig)); };\n    NgbInputDatepicker.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbInputDatepicker, selectors: [[\"input\", \"ngbDatepicker\", \"\"]], hostVars: 1, hostBindings: function NgbInputDatepicker_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"cc\" /* ɵɵlistener */](\"input\", function NgbInputDatepicker_input_HostBindingHandler($event) { return ctx.manualDateChange($event.target.value); })(\"change\", function NgbInputDatepicker_change_HostBindingHandler($event) { return ctx.manualDateChange($event.target.value, true); })(\"focus\", function NgbInputDatepicker_focus_HostBindingHandler() { return ctx.onFocus(); })(\"blur\", function NgbInputDatepicker_blur_HostBindingHandler() { return ctx.onBlur(); });\n            }\n            if (rf & 2) {\n                core[\"Vb\" /* ɵɵhostProperty */](\"disabled\", ctx.disabled);\n            }\n        }, inputs: { disabled: \"disabled\", autoClose: \"autoClose\", dayTemplate: \"dayTemplate\", dayTemplateData: \"dayTemplateData\", displayMonths: \"displayMonths\", firstDayOfWeek: \"firstDayOfWeek\", footerTemplate: \"footerTemplate\", markDisabled: \"markDisabled\", minDate: \"minDate\", maxDate: \"maxDate\", navigation: \"navigation\", outsideDays: \"outsideDays\", placement: \"placement\", restoreFocus: \"restoreFocus\", showWeekdays: \"showWeekdays\", showWeekNumbers: \"showWeekNumbers\", startDate: \"startDate\", container: \"container\", positionTarget: \"positionTarget\" }, outputs: { dateSelect: \"dateSelect\", navigate: \"navigate\", closed: \"closed\" }, exportAs: [\"ngbDatepicker\"], features: [core[\"zb\" /* ɵɵProvidersFeature */]([\n                NGB_DATEPICKER_VALUE_ACCESSOR$1, NGB_DATEPICKER_VALIDATOR,\n                { provide: ng_bootstrap_NgbDatepickerConfig, useExisting: ng_bootstrap_NgbInputDatepickerConfig }\n            ]), core[\"yb\" /* ɵɵNgOnChangesFeature */]] });\n    NgbInputDatepicker = __decorate([__param(8, Object(core[\"r\" /* Inject */])(common[\"c\" /* DOCUMENT */]))\n    ], NgbInputDatepicker);\n    return NgbInputDatepicker;\n})();\nlet ng_bootstrap_NgbDatepickerDayView = /*@__PURE__*/ (() => {\n    let NgbDatepickerDayView = class NgbDatepickerDayView {\n        constructor(i18n) {\n            this.i18n = i18n;\n        }\n        isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n    };\n    NgbDatepickerDayView.ɵfac = function NgbDatepickerDayView_Factory(t) { return new (t || NgbDatepickerDayView)(core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbDatepickerI18n)); };\n    NgbDatepickerDayView.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbDatepickerDayView, selectors: [[\"\", \"ngbDatepickerDayView\", \"\"]], hostAttrs: [1, \"btn-light\"], hostVars: 10, hostBindings: function NgbDatepickerDayView_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Fb\" /* ɵɵclassProp */](\"bg-primary\", ctx.selected)(\"text-white\", ctx.selected)(\"text-muted\", ctx.isMuted())(\"outside\", ctx.isMuted())(\"active\", ctx.focused);\n            }\n        }, inputs: { currentMonth: \"currentMonth\", date: \"date\", disabled: \"disabled\", focused: \"focused\", selected: \"selected\" }, attrs: _c18, decls: 1, vars: 1, template: function NgbDatepickerDayView_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Ac\" /* ɵɵtext */](0);\n            }\n            if (rf & 2) {\n                core[\"Bc\" /* ɵɵtextInterpolate */](ctx.i18n.getDayNumerals(ctx.date));\n            }\n        }, styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:0 0}[ngbDatepickerDayView].outside{opacity:.5}\"], encapsulation: 2, changeDetection: 0 });\n    return NgbDatepickerDayView;\n})();\nlet ng_bootstrap_NgbDatepickerNavigationSelect = /*@__PURE__*/ (() => {\n    let NgbDatepickerNavigationSelect = class NgbDatepickerNavigationSelect {\n        constructor(i18n, _renderer) {\n            this.i18n = i18n;\n            this._renderer = _renderer;\n            this.select = new core[\"o\" /* EventEmitter */]();\n            this._month = -1;\n            this._year = -1;\n        }\n        changeMonth(month) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n        changeYear(year) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n        ngAfterViewChecked() {\n            if (this.date) {\n                if (this.date.month !== this._month) {\n                    this._month = this.date.month;\n                    this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n                }\n                if (this.date.year !== this._year) {\n                    this._year = this.date.year;\n                    this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n                }\n            }\n        }\n    };\n    NgbDatepickerNavigationSelect.ɵfac = function NgbDatepickerNavigationSelect_Factory(t) { return new (t || NgbDatepickerNavigationSelect)(core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbDatepickerI18n), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"G\" /* Renderer2 */])); };\n    NgbDatepickerNavigationSelect.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbDatepickerNavigationSelect, selectors: [[\"ngb-datepicker-navigation-select\"]], viewQuery: function NgbDatepickerNavigationSelect_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Fc\" /* ɵɵviewQuery */](_c19, 3, core[\"m\" /* ElementRef */]);\n                core[\"Fc\" /* ɵɵviewQuery */](_c20, 3, core[\"m\" /* ElementRef */]);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.monthSelect = _t.first);\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.yearSelect = _t.first);\n            }\n        }, inputs: { date: \"date\", disabled: \"disabled\", months: \"months\", years: \"years\" }, outputs: { select: \"select\" }, decls: 6, vars: 4, consts: function () {\n            let i18n_21;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_22 = goog.getMsg(\"Select month\");\n                i18n_21 = MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_22;\n            }\n            else {\n                i18n_21 = $localize `:@@ngb.datepicker.select-month␟1dbc84807f35518112f62e5775d1daebd3d8462b␟2253869508135064750:Select month`;\n            }\n            let i18n_23;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_24 = goog.getMsg(\"Select month\");\n                i18n_23 = MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_24;\n            }\n            else {\n                i18n_23 = $localize `:@@ngb.datepicker.select-month␟1dbc84807f35518112f62e5775d1daebd3d8462b␟2253869508135064750:Select month`;\n            }\n            let i18n_25;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_26 = goog.getMsg(\"Select year\");\n                i18n_25 = MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_26;\n            }\n            else {\n                i18n_25 = $localize `:@@ngb.datepicker.select-year␟8ceb09d002bf0c5d1cac171dfbffe1805d2b3962␟8852264961585484321:Select year`;\n            }\n            let i18n_27;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_28 = goog.getMsg(\"Select year\");\n                i18n_27 = MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_28;\n            }\n            else {\n                i18n_27 = $localize `:@@ngb.datepicker.select-year␟8ceb09d002bf0c5d1cac171dfbffe1805d2b3962␟8852264961585484321:Select year`;\n            }\n            return [[\"aria-label\", i18n_21, \"title\", i18n_23, 1, \"custom-select\", 3, \"disabled\", \"change\"], [\"month\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"aria-label\", i18n_25, \"title\", i18n_27, 1, \"custom-select\", 3, \"disabled\", \"change\"], [\"year\", \"\"], [3, \"value\"]];\n        }, template: function NgbDatepickerNavigationSelect_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Sb\" /* ɵɵelementStart */](0, \"select\", 0, 1);\n                core[\"cc\" /* ɵɵlistener */](\"change\", function NgbDatepickerNavigationSelect_Template_select_change_0_listener($event) { return ctx.changeMonth($event.target.value); });\n                core[\"yc\" /* ɵɵtemplate */](2, NgbDatepickerNavigationSelect_option_2_Template, 2, 3, \"option\", 2);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n                core[\"Sb\" /* ɵɵelementStart */](3, \"select\", 3, 4);\n                core[\"cc\" /* ɵɵlistener */](\"change\", function NgbDatepickerNavigationSelect_Template_select_change_3_listener($event) { return ctx.changeYear($event.target.value); });\n                core[\"yc\" /* ɵɵtemplate */](5, NgbDatepickerNavigationSelect_option_5_Template, 2, 2, \"option\", 2);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"kc\" /* ɵɵproperty */](\"disabled\", ctx.disabled);\n                core[\"Ab\" /* ɵɵadvance */](2);\n                core[\"kc\" /* ɵɵproperty */](\"ngForOf\", ctx.months);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"disabled\", ctx.disabled);\n                core[\"Ab\" /* ɵɵadvance */](2);\n                core[\"kc\" /* ɵɵproperty */](\"ngForOf\", ctx.years);\n            }\n        }, directives: [common[\"l\" /* NgForOf */], fesm2015_forms[\"n\" /* NgSelectOption */], fesm2015_forms[\"s\" /* ɵangular_packages_forms_forms_z */]], styles: [\"ngb-datepicker-navigation-select>.custom-select{-ms-flex:1 1 auto;flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.custom-select:focus{z-index:1}ngb-datepicker-navigation-select>.custom-select::-ms-value{background-color:transparent!important}\"], encapsulation: 2, changeDetection: 0 });\n    return NgbDatepickerNavigationSelect;\n})();\nlet ng_bootstrap_NgbCalendarHijri = /*@__PURE__*/ (() => {\n    let NgbCalendarHijri = class NgbCalendarHijri extends ng_bootstrap_NgbCalendar {\n        getDaysPerWeek() { return 7; }\n        getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n        getWeeksPerMonth() { return 6; }\n        getNext(date, period = 'd', number = 1) {\n            date = new NgbDate(date.year, date.month, date.day);\n            switch (period) {\n                case 'y':\n                    date = this._setYear(date, date.year + number);\n                    date.month = 1;\n                    date.day = 1;\n                    return date;\n                case 'm':\n                    date = this._setMonth(date, date.month + number);\n                    date.day = 1;\n                    return date;\n                case 'd':\n                    return this._setDay(date, date.day + number);\n                default:\n                    return date;\n            }\n        }\n        getPrev(date, period = 'd', number = 1) { return this.getNext(date, period, -number); }\n        getWeekday(date) {\n            const day = this.toGregorian(date).getDay();\n            // in JS Date Sun=0, in ISO 8601 Sun=7\n            return day === 0 ? 7 : day;\n        }\n        getWeekNumber(week, firstDayOfWeek) {\n            // in JS Date Sun=0, in ISO 8601 Sun=7\n            if (firstDayOfWeek === 7) {\n                firstDayOfWeek = 0;\n            }\n            const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n            const date = week[thursdayIndex];\n            const jsDate = this.toGregorian(date);\n            jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n            const time = jsDate.getTime();\n            const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1)); // Compare with Muharram 1\n            return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n        }\n        getToday() { return this.fromGregorian(new Date()); }\n        isValid(date) {\n            return date != null && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n                !isNaN(this.toGregorian(date).getTime());\n        }\n        _setDay(date, day) {\n            day = +day;\n            let mDays = this.getDaysPerMonth(date.month, date.year);\n            if (day <= 0) {\n                while (day <= 0) {\n                    date = this._setMonth(date, date.month - 1);\n                    mDays = this.getDaysPerMonth(date.month, date.year);\n                    day += mDays;\n                }\n            }\n            else if (day > mDays) {\n                while (day > mDays) {\n                    day -= mDays;\n                    date = this._setMonth(date, date.month + 1);\n                    mDays = this.getDaysPerMonth(date.month, date.year);\n                }\n            }\n            date.day = day;\n            return date;\n        }\n        _setMonth(date, month) {\n            month = +month;\n            date.year = date.year + Math.floor((month - 1) / 12);\n            date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n            return date;\n        }\n        _setYear(date, year) {\n            date.year = +year;\n            return date;\n        }\n    };\n    NgbCalendarHijri.ɵfac = function NgbCalendarHijri_Factory(t) { return ɵNgbCalendarHijri_BaseFactory(t || NgbCalendarHijri); };\n    NgbCalendarHijri.ɵprov = core[\"Jb\" /* ɵɵdefineInjectable */]({ token: NgbCalendarHijri, factory: function (t) { return NgbCalendarHijri.ɵfac(t); } });\n    return NgbCalendarHijri;\n})();\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear) {\n    return (14 + 11 * hYear) % 30 < 11;\n}\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear(gDate) {\n    const year = gDate.getFullYear();\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear, hMonth) {\n    return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year) {\n    return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\nfunction mod(a, b) {\n    return a - b * Math.floor(a / b);\n}\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\nlet ng_bootstrap_NgbCalendarIslamicCivil = /*@__PURE__*/ (() => {\n    let NgbCalendarIslamicCivil = class NgbCalendarIslamicCivil extends ng_bootstrap_NgbCalendarHijri {\n        /**\n         * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n         * `gDate` is a JS Date to be converted to Hijri.\n         */\n        fromGregorian(gDate) {\n            const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n            let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n                -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n                Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n            julianDay = Math.floor(julianDay) + 0.5;\n            const days = julianDay - ISLAMIC_EPOCH;\n            const hYear = Math.floor((30 * days + 10646) / 10631.0);\n            let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n            hMonth = Math.min(hMonth, 11);\n            const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n        }\n        /**\n         * Returns the equivalent JS date value for a give input islamic(civil) date.\n         * `hDate` is an islamic(civil) date to be converted to Gregorian.\n         */\n        toGregorian(hDate) {\n            const hYear = hDate.year;\n            const hMonth = hDate.month - 1;\n            const hDay = hDate.day;\n            const julianDay = hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n            const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH, quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524), dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461), yindex = Math.floor(dquad / 365);\n            let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n            if (!(cent === 4 || yindex === 4)) {\n                year++;\n            }\n            const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n                Math.floor((year - 1) / 400);\n            const yearday = wjd - gYearStart;\n            const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n                Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n            const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n            const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n            const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n                Math.floor((year - 1) / 400) +\n                Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n                    1);\n            const day = wjd - tjd2 + 1;\n            return new Date(year, month - 1, day);\n        }\n        /**\n         * Returns the number of days in a specific Hijri month.\n         * `month` is 1 for Muharram, 2 for Safar, etc.\n         * `year` is any Hijri year.\n         */\n        getDaysPerMonth(month, year) {\n            year = year + Math.floor(month / 13);\n            month = ((month - 1) % 12) + 1;\n            let length = 29 + month % 2;\n            if (month === 12 && isIslamicLeapYear(year)) {\n                length++;\n            }\n            return length;\n        }\n    };\n    NgbCalendarIslamicCivil.ɵfac = function NgbCalendarIslamicCivil_Factory(t) { return ɵNgbCalendarIslamicCivil_BaseFactory(t || NgbCalendarIslamicCivil); };\n    NgbCalendarIslamicCivil.ɵprov = core[\"Jb\" /* ɵɵdefineInjectable */]({ token: NgbCalendarIslamicCivil, factory: function (t) { return NgbCalendarIslamicCivil.ɵfac(t); } });\n    return NgbCalendarIslamicCivil;\n})();\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\nconst MONTH_LENGTH = [\n    // 1300-1304\n    '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n    // 1305-1309\n    '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n    // 1310-1314\n    '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n    // 1315-1319\n    '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n    // 1320-1324\n    '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n    // 1325-1329\n    '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n    // 1330-1334\n    '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n    // 1335-1339\n    '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n    // 1340-1344\n    '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n    // 1345-1349\n    '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n    // 1350-1354\n    '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n    // 1355-1359\n    '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n    // 1360-1364\n    '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n    // 1365-1369\n    '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n    // 1370-1374\n    '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n    // 1375-1379\n    '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n    // 1380-1384\n    '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n    // 1385-1389\n    '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n    // 1390-1394\n    '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n    // 1395-1399\n    '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n    // 1400-1404\n    '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n    // 1405-1409\n    '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n    // 1410-1414\n    '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n    // 1415-1419\n    '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n    // 1420-1424\n    '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n    // 1425-1429\n    '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n    // 1430-1434\n    '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n    // 1435-1439\n    '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n    // 1440-1444\n    '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n    // 1445-1449\n    '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n    // 1450-1454\n    '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n    // 1455-1459\n    '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n    // 1460-1464\n    '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n    // 1465-1469\n    '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n    // 1470-1474\n    '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n    // 1475-1479\n    '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n    // 1480-1484\n    '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n    // 1485-1489\n    '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n    // 1490-1494\n    '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n    // 1495-1499\n    '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n    // 1500-1504\n    '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n    // 1505-1509\n    '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n    // 1510-1514\n    '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n    // 1515-1519\n    '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n    // 1520-1524\n    '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n    // 1525-1529\n    '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n    // 1530-1534\n    '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n    // 1535-1539\n    '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n    // 1540-1544\n    '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n    // 1545-1549\n    '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n    // 1550-1554\n    '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n    // 1555-1559\n    '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n    // 1560-1564\n    '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n    // 1565-1569\n    '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n    // 1570-1574\n    '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n    // 1575-1579\n    '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n    // 1580-1584\n    '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n    // 1585-1589\n    '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n    // 1590-1594\n    '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n    // 1595-1599\n    '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n    // 1600\n    '001010011101'\n];\nfunction getDaysDiff(date1, date2) {\n    // Ignores the time part in date1 and date2:\n    const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n    const diff = Math.abs(time1 - time2);\n    return Math.round(diff / ONE_DAY);\n}\nlet ng_bootstrap_NgbCalendarIslamicUmalqura = /*@__PURE__*/ (() => {\n    let NgbCalendarIslamicUmalqura = class NgbCalendarIslamicUmalqura extends ng_bootstrap_NgbCalendarIslamicCivil {\n        /**\n        * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n        * `gdate` is s JS Date to be converted to Hijri.\n        */\n        fromGregorian(gDate) {\n            let hDay = 1, hMonth = 0, hYear = 1300;\n            let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n            if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n                let year = 1300;\n                for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n                    for (let j = 0; j < 12; j++) {\n                        let numOfDays = +MONTH_LENGTH[i][j] + 29;\n                        if (daysDiff <= numOfDays) {\n                            hDay = daysDiff + 1;\n                            if (hDay > numOfDays) {\n                                hDay = 1;\n                                j++;\n                            }\n                            if (j > 11) {\n                                j = 0;\n                                year++;\n                            }\n                            hMonth = j;\n                            hYear = year;\n                            return new NgbDate(hYear, hMonth + 1, hDay);\n                        }\n                        daysDiff = daysDiff - numOfDays;\n                    }\n                }\n                return null;\n            }\n            else {\n                return super.fromGregorian(gDate);\n            }\n        }\n        /**\n        * Converts the current Hijri date to Gregorian.\n        */\n        toGregorian(hDate) {\n            const hYear = hDate.year;\n            const hMonth = hDate.month - 1;\n            const hDay = hDate.day;\n            let gDate = new Date(GREGORIAN_FIRST_DATE);\n            let dayDiff = hDay - 1;\n            if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n                for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n                    for (let m = 0; m < 12; m++) {\n                        dayDiff += +MONTH_LENGTH[y][m] + 29;\n                    }\n                }\n                for (let m = 0; m < hMonth; m++) {\n                    dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n                }\n                gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n            }\n            else {\n                gDate = super.toGregorian(hDate);\n            }\n            return gDate;\n        }\n        /**\n        * Returns the number of days in a specific Hijri hMonth.\n        * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n        * `hYear` is any Hijri hYear.\n        */\n        getDaysPerMonth(hMonth, hYear) {\n            if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n                const pos = hYear - HIJRI_BEGIN;\n                return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n            }\n            return super.getDaysPerMonth(hMonth, hYear);\n        }\n    };\n    NgbCalendarIslamicUmalqura.ɵfac = function NgbCalendarIslamicUmalqura_Factory(t) { return ɵNgbCalendarIslamicUmalqura_BaseFactory(t || NgbCalendarIslamicUmalqura); };\n    NgbCalendarIslamicUmalqura.ɵprov = core[\"Jb\" /* ɵɵdefineInjectable */]({ token: NgbCalendarIslamicUmalqura, factory: function (t) { return NgbCalendarIslamicUmalqura.ɵfac(t); } });\n    return NgbCalendarIslamicUmalqura;\n})();\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nfunction toGregorian(jalaliDate) {\n    let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n    let date = julianToGregorian(jdn);\n    date.setHours(6, 30, 3, 200);\n    return date;\n}\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nfunction fromGregorian(gdate) {\n    let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n    return julianToJalali(g2d);\n}\nfunction setJalaliYear(date, yearValue) {\n    date.year = +yearValue;\n    return date;\n}\nfunction setJalaliMonth(date, month) {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n}\nfunction setJalaliDay(date, day) {\n    let mDays = getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n        while (day <= 0) {\n            date = setJalaliMonth(date, date.month - 1);\n            mDays = getDaysPerMonth(date.month, date.year);\n            day += mDays;\n        }\n    }\n    else if (day > mDays) {\n        while (day > mDays) {\n            day -= mDays;\n            date = setJalaliMonth(date, date.month + 1);\n            mDays = getDaysPerMonth(date.month, date.year);\n        }\n    }\n    date.day = day;\n    return date;\n}\nfunction mod$1(a, b) {\n    return a - b * Math.floor(a / b);\n}\nfunction div(a, b) {\n    return Math.trunc(a / b);\n}\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear) {\n    // Jalali years starting the 33-year rule.\n    let breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n    const breaksLength = breaks.length;\n    const gYear = jalaliYear + 621;\n    let leapJ = -14;\n    let jp = breaks[0];\n    if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n        throw new Error('Invalid Jalali year ' + jalaliYear);\n    }\n    // Find the limiting years for the Jalali year jalaliYear.\n    let jump;\n    for (let i = 1; i < breaksLength; i += 1) {\n        const jm = breaks[i];\n        jump = jm - jp;\n        if (jalaliYear < jm) {\n            break;\n        }\n        leapJ = leapJ + div(jump, 33) * 8 + div(mod$1(jump, 33), 4);\n        jp = jm;\n    }\n    let n = jalaliYear - jp;\n    // Find the number of leap years from AD 621 to the beginning\n    // of the current Jalali year in the Persian calendar.\n    leapJ = leapJ + div(n, 33) * 8 + div(mod$1(n, 33) + 3, 4);\n    if (mod$1(jump, 33) === 4 && jump - n === 4) {\n        leapJ += 1;\n    }\n    // And the same in the Gregorian calendar (until the year gYear).\n    const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n    // Determine the Gregorian date of Farvardin the 1st.\n    const march = 20 + leapJ - leapG;\n    // Find how many years have passed since the last leap year.\n    if (jump - n < 6) {\n        n = n - jump + div(jump + 4, 33) * 33;\n    }\n    let leap = mod$1(mod$1(n + 1, 33) - 1, 4);\n    if (leap === -1) {\n        leap = 4;\n    }\n    return { leap: leap, gy: gYear, march: march };\n}\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber) {\n    let j = 4 * julianDayNumber + 139361631;\n    j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n    const i = div(mod$1(j, 1461), 4) * 5 + 308;\n    const gDay = div(mod$1(i, 153), 5) + 1;\n    const gMonth = mod$1(div(i, 153), 12) + 1;\n    const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n    return new Date(gYear, gMonth - 1, gDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy, gm, gd) {\n    let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod$1(gm + 9, 12) + 2, 5) + gd - 34840408;\n    d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n    return d;\n}\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber) {\n    let gy = julianToGregorian(julianDayNumber).getFullYear() // Calculate Gregorian year (gy).\n    , jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay, jalaliMonth, numberOfDays;\n    // Find number of days that passed since 1 Farvardin.\n    numberOfDays = julianDayNumber - gregorianDay;\n    if (numberOfDays >= 0) {\n        if (numberOfDays <= 185) {\n            // The first 6 months.\n            jalaliMonth = 1 + div(numberOfDays, 31);\n            jalaliDay = mod$1(numberOfDays, 31) + 1;\n            return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n        }\n        else {\n            // The remaining months.\n            numberOfDays -= 186;\n        }\n    }\n    else {\n        // Previous Jalali year.\n        jalaliYear -= 1;\n        numberOfDays += 179;\n        if (r.leap === 1) {\n            numberOfDays += 1;\n        }\n    }\n    jalaliMonth = 7 + div(numberOfDays, 30);\n    jalaliDay = mod$1(numberOfDays, 30) + 1;\n    return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear, jMonth, jDay) {\n    let r = jalCal(jYear);\n    return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month, year) {\n    if (month <= 6) {\n        return 31;\n    }\n    if (month <= 11) {\n        return 30;\n    }\n    if (jalCal(year).leap === 0) {\n        return 30;\n    }\n    return 29;\n}\nlet ng_bootstrap_NgbCalendarPersian = /*@__PURE__*/ (() => {\n    let NgbCalendarPersian = class NgbCalendarPersian extends ng_bootstrap_NgbCalendar {\n        getDaysPerWeek() { return 7; }\n        getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n        getWeeksPerMonth() { return 6; }\n        getNext(date, period = 'd', number = 1) {\n            date = new NgbDate(date.year, date.month, date.day);\n            switch (period) {\n                case 'y':\n                    date = setJalaliYear(date, date.year + number);\n                    date.month = 1;\n                    date.day = 1;\n                    return date;\n                case 'm':\n                    date = setJalaliMonth(date, date.month + number);\n                    date.day = 1;\n                    return date;\n                case 'd':\n                    return setJalaliDay(date, date.day + number);\n                default:\n                    return date;\n            }\n        }\n        getPrev(date, period = 'd', number = 1) { return this.getNext(date, period, -number); }\n        getWeekday(date) {\n            const day = toGregorian(date).getDay();\n            // in JS Date Sun=0, in ISO 8601 Sun=7\n            return day === 0 ? 7 : day;\n        }\n        getWeekNumber(week, firstDayOfWeek) {\n            // in JS Date Sun=0, in ISO 8601 Sun=7\n            if (firstDayOfWeek === 7) {\n                firstDayOfWeek = 0;\n            }\n            const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n            const date = week[thursdayIndex];\n            const jsDate = toGregorian(date);\n            jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n            const time = jsDate.getTime();\n            const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n            return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n        }\n        getToday() { return fromGregorian(new Date()); }\n        isValid(date) {\n            return date != null && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n                !isNaN(toGregorian(date).getTime());\n        }\n    };\n    NgbCalendarPersian.ɵfac = function NgbCalendarPersian_Factory(t) { return ɵNgbCalendarPersian_BaseFactory(t || NgbCalendarPersian); };\n    NgbCalendarPersian.ɵprov = core[\"Jb\" /* ɵɵdefineInjectable */]({ token: NgbCalendarPersian, factory: function (t) { return NgbCalendarPersian.ɵfac(t); } });\n    return NgbCalendarPersian;\n})();\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH$1 = 1721425.5;\nfunction isGregorianLeapYear$1(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nfunction numberOfFirstDayInYear(year) {\n    let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n    let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n    let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n    let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n    let dayOfWeek = dayNumber % 7; // 0 == Monday\n    if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n        dayNumber++;\n        dayOfWeek = dayNumber % 7;\n    }\n    if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n        dayNumber += 2;\n    }\n    else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n        dayNumber++;\n    }\n    return dayNumber;\n}\nfunction getDaysInGregorianMonth(month, year) {\n    let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (isGregorianLeapYear$1(year)) {\n        days[1]++;\n    }\n    return days[month - 1];\n}\nfunction getHebrewMonths(year) {\n    return isHebrewLeapYear(year) ? 13 : 12;\n}\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year) {\n    return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\nfunction isHebrewLeapYear(year) {\n    if (year != null) {\n        let b = (year * 12 + 17) % 19;\n        return b >= ((b < 0) ? -7 : 12);\n    }\n    return false;\n}\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewMonth(month, year) {\n    let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n    let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n    let leapYear = isHebrewLeapYear(year);\n    let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n        [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n    if (yearType > 0) {\n        daysInMonth[2]++; // Kislev gets an extra day in normal or complete years.\n    }\n    if (yearType > 1) {\n        daysInMonth[1]++; // Heshvan gets an extra day in complete years only.\n    }\n    return daysInMonth[month - 1];\n}\nfunction getDayNumberInHebrewYear(date) {\n    let numberOfDay = 0;\n    for (let i = 1; i < date.month; i++) {\n        numberOfDay += getDaysInHebrewMonth(i, date.year);\n    }\n    return numberOfDay + date.day;\n}\nfunction setHebrewMonth(date, val) {\n    let after = val >= 0;\n    if (!after) {\n        val = -val;\n    }\n    while (val > 0) {\n        if (after) {\n            if (val > getHebrewMonths(date.year) - date.month) {\n                val -= getHebrewMonths(date.year) - date.month + 1;\n                date.year++;\n                date.month = 1;\n            }\n            else {\n                date.month += val;\n                val = 0;\n            }\n        }\n        else {\n            if (val >= date.month) {\n                date.year--;\n                val -= date.month;\n                date.month = getHebrewMonths(date.year);\n            }\n            else {\n                date.month -= val;\n                val = 0;\n            }\n        }\n    }\n    return date;\n}\nfunction setHebrewDay(date, val) {\n    let after = val >= 0;\n    if (!after) {\n        val = -val;\n    }\n    while (val > 0) {\n        if (after) {\n            if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n                val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n                date.year++;\n                date.month = 1;\n                date.day = 1;\n            }\n            else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n                val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n                date.month++;\n                date.day = 1;\n            }\n            else {\n                date.day += val;\n                val = 0;\n            }\n        }\n        else {\n            if (val >= date.day) {\n                val -= date.day;\n                date.month--;\n                if (date.month === 0) {\n                    date.year--;\n                    date.month = getHebrewMonths(date.year);\n                }\n                date.day = getDaysInHebrewMonth(date.month, date.year);\n            }\n            else {\n                date.day -= val;\n                val = 0;\n            }\n        }\n    }\n    return date;\n}\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nfunction fromGregorian$1(gdate) {\n    const date = new Date(gdate);\n    const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n    let julianDay = GREGORIAN_EPOCH$1 - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n        Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear$1(gYear) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay + 0.5);\n    let daysSinceHebEpoch = julianDay - 347997;\n    let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n    let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n    let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n    while (dayOfYear < 1) {\n        hYear--;\n        firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n        dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n    }\n    let hMonth = 1;\n    let hDay = dayOfYear;\n    while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n        hDay -= getDaysInHebrewMonth(hMonth, hYear);\n        hMonth++;\n    }\n    return new NgbDate(hYear, hMonth, hDay);\n}\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nfunction toGregorian$1(hebrewDate) {\n    const hYear = hebrewDate.year;\n    const hMonth = hebrewDate.month;\n    const hDay = hebrewDate.day;\n    let days = numberOfFirstDayInYear(hYear);\n    for (let i = 1; i < hMonth; i++) {\n        days += getDaysInHebrewMonth(i, hYear);\n    }\n    days += hDay;\n    let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n    let after = diffDays >= 0;\n    if (!after) {\n        diffDays = -diffDays;\n    }\n    let gYear = 1970;\n    let gMonth = 1;\n    let gDay = 1;\n    while (diffDays > 0) {\n        if (after) {\n            if (diffDays >= (isGregorianLeapYear$1(gYear) ? 366 : 365)) {\n                diffDays -= isGregorianLeapYear$1(gYear) ? 366 : 365;\n                gYear++;\n            }\n            else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n                diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n                gMonth++;\n            }\n            else {\n                gDay += diffDays;\n                diffDays = 0;\n            }\n        }\n        else {\n            if (diffDays >= (isGregorianLeapYear$1(gYear - 1) ? 366 : 365)) {\n                diffDays -= isGregorianLeapYear$1(gYear - 1) ? 366 : 365;\n                gYear--;\n            }\n            else {\n                if (gMonth > 1) {\n                    gMonth--;\n                }\n                else {\n                    gMonth = 12;\n                    gYear--;\n                }\n                if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n                    diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n                }\n                else {\n                    gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n                    diffDays = 0;\n                }\n            }\n        }\n    }\n    return new Date(gYear, gMonth - 1, gDay);\n}\nfunction hebrewNumerals(numerals) {\n    if (!numerals) {\n        return '';\n    }\n    const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n    const hArray10_19 = [\n        '\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6',\n        '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'\n    ];\n    const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n    const hArray100_900 = [\n        '', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea',\n        '\\u05ea\\u05ea\\u05e7'\n    ];\n    const hArray1000_9000 = [\n        '', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1',\n        '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'\n    ];\n    const geresh = '\\u05f3', gershaim = '\\u05f4';\n    let mem = 0;\n    let result = [];\n    let step = 0;\n    while (numerals > 0) {\n        let m = numerals % 10;\n        if (step === 0) {\n            mem = m;\n        }\n        else if (step === 1) {\n            if (m !== 1) {\n                result.unshift(hArray20_90[m], hArray0_9[mem]);\n            }\n            else {\n                result.unshift(hArray10_19[mem]);\n            }\n        }\n        else if (step === 2) {\n            result.unshift(hArray100_900[m]);\n        }\n        else {\n            if (m !== 5) {\n                result.unshift(hArray1000_9000[m], geresh, ' ');\n            }\n            break;\n        }\n        numerals = Math.floor(numerals / 10);\n        if (step === 0 && numerals === 0) {\n            result.unshift(hArray0_9[m]);\n        }\n        step++;\n    }\n    result = result.join('').split('');\n    if (result.length === 1) {\n        result.push(geresh);\n    }\n    else if (result.length > 1) {\n        result.splice(result.length - 1, 0, gershaim);\n    }\n    return result.join('');\n}\nlet ng_bootstrap_NgbCalendarHebrew = /*@__PURE__*/ (() => {\n    /**\n     * @since 3.2.0\n     */\n    let NgbCalendarHebrew = class NgbCalendarHebrew extends ng_bootstrap_NgbCalendar {\n        getDaysPerWeek() { return 7; }\n        getMonths(year) {\n            if (year && isHebrewLeapYear(year)) {\n                return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n            }\n            else {\n                return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n            }\n        }\n        getWeeksPerMonth() { return 6; }\n        isValid(date) {\n            if (date != null) {\n                let b = isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n                b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n                b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n                return b && !isNaN(toGregorian$1(date).getTime());\n            }\n            return false;\n        }\n        getNext(date, period = 'd', number = 1) {\n            date = new NgbDate(date.year, date.month, date.day);\n            switch (period) {\n                case 'y':\n                    date.year += number;\n                    date.month = 1;\n                    date.day = 1;\n                    return date;\n                case 'm':\n                    date = setHebrewMonth(date, number);\n                    date.day = 1;\n                    return date;\n                case 'd':\n                    return setHebrewDay(date, number);\n                default:\n                    return date;\n            }\n        }\n        getPrev(date, period = 'd', number = 1) { return this.getNext(date, period, -number); }\n        getWeekday(date) {\n            const day = toGregorian$1(date).getDay();\n            // in JS Date Sun=0, in ISO 8601 Sun=7\n            return day === 0 ? 7 : day;\n        }\n        getWeekNumber(week, firstDayOfWeek) {\n            const date = week[week.length - 1];\n            return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n        }\n        getToday() { return fromGregorian$1(new Date()); }\n        /**\n         * @since 3.4.0\n         */\n        toGregorian(date) { return fromJSDate(toGregorian$1(date)); }\n        /**\n         * @since 3.4.0\n         */\n        fromGregorian(date) { return fromGregorian$1(toJSDate(date)); }\n    };\n    NgbCalendarHebrew.ɵfac = function NgbCalendarHebrew_Factory(t) { return ɵNgbCalendarHebrew_BaseFactory(t || NgbCalendarHebrew); };\n    NgbCalendarHebrew.ɵprov = core[\"Jb\" /* ɵɵdefineInjectable */]({ token: NgbCalendarHebrew, factory: function (t) { return NgbCalendarHebrew.ɵfac(t); } });\n    return NgbCalendarHebrew;\n})();\nconst WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\nconst MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nconst MONTHS_LEAP = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nlet ng_bootstrap_NgbDatepickerI18nHebrew = /*@__PURE__*/ (() => {\n    /**\n     * @since 3.2.0\n     */\n    let NgbDatepickerI18nHebrew = class NgbDatepickerI18nHebrew extends ng_bootstrap_NgbDatepickerI18n {\n        getMonthShortName(month, year) { return this.getMonthFullName(month, year); }\n        getMonthFullName(month, year) {\n            return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] || '' : MONTHS[month - 1] || '';\n        }\n        getWeekdayShortName(weekday) { return WEEKDAYS[weekday - 1] || ''; }\n        getDayAriaLabel(date) {\n            return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n        }\n        getDayNumerals(date) { return hebrewNumerals(date.day); }\n        getWeekNumerals(weekNumber) { return hebrewNumerals(weekNumber); }\n        getYearNumerals(year) { return hebrewNumerals(year); }\n    };\n    NgbDatepickerI18nHebrew.ɵfac = function NgbDatepickerI18nHebrew_Factory(t) { return ɵNgbDatepickerI18nHebrew_BaseFactory(t || NgbDatepickerI18nHebrew); };\n    NgbDatepickerI18nHebrew.ɵprov = core[\"Jb\" /* ɵɵdefineInjectable */]({ token: NgbDatepickerI18nHebrew, factory: function (t) { return NgbDatepickerI18nHebrew.ɵfac(t); } });\n    return NgbDatepickerI18nHebrew;\n})();\nlet ng_bootstrap_NgbDateNativeAdapter = /*@__PURE__*/ (() => {\n    /**\n     * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n     * native javascript dates as a user date model.\n     */\n    let NgbDateNativeAdapter = class NgbDateNativeAdapter extends ng_bootstrap_NgbDateAdapter {\n        /**\n         * Converts a native `Date` to a `NgbDateStruct`.\n         */\n        fromModel(date) {\n            return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n        }\n        /**\n         * Converts a `NgbDateStruct` to a native `Date`.\n         */\n        toModel(date) {\n            return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n                null;\n        }\n        _fromNativeDate(date) {\n            return { year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate() };\n        }\n        _toNativeDate(date) {\n            const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n            // avoid 30 -> 1930 conversion\n            jsDate.setFullYear(date.year);\n            return jsDate;\n        }\n    };\n    NgbDateNativeAdapter.ɵfac = function NgbDateNativeAdapter_Factory(t) { return ɵNgbDateNativeAdapter_BaseFactory(t || NgbDateNativeAdapter); };\n    NgbDateNativeAdapter.ɵprov = core[\"Jb\" /* ɵɵdefineInjectable */]({ token: NgbDateNativeAdapter, factory: function (t) { return NgbDateNativeAdapter.ɵfac(t); } });\n    return NgbDateNativeAdapter;\n})();\nlet ng_bootstrap_NgbDateNativeUTCAdapter = /*@__PURE__*/ (() => {\n    /**\n     * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n     *\n     * @since 3.2.0\n     */\n    let NgbDateNativeUTCAdapter = class NgbDateNativeUTCAdapter extends ng_bootstrap_NgbDateNativeAdapter {\n        _fromNativeDate(date) {\n            return { year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate() };\n        }\n        _toNativeDate(date) {\n            const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n            // avoid 30 -> 1930 conversion\n            jsDate.setUTCFullYear(date.year);\n            return jsDate;\n        }\n    };\n    NgbDateNativeUTCAdapter.ɵfac = function NgbDateNativeUTCAdapter_Factory(t) { return ɵNgbDateNativeUTCAdapter_BaseFactory(t || NgbDateNativeUTCAdapter); };\n    NgbDateNativeUTCAdapter.ɵprov = core[\"Jb\" /* ɵɵdefineInjectable */]({ token: NgbDateNativeUTCAdapter, factory: function (t) { return NgbDateNativeUTCAdapter.ɵfac(t); } });\n    return NgbDateNativeUTCAdapter;\n})();\nlet ng_bootstrap_NgbDatepickerModule = /*@__PURE__*/ (() => {\n    let NgbDatepickerModule = class NgbDatepickerModule {\n    };\n    NgbDatepickerModule.ɵfac = function NgbDatepickerModule_Factory(t) { return new (t || NgbDatepickerModule)(); };\n    NgbDatepickerModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbDatepickerModule });\n    NgbDatepickerModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({ imports: [[common[\"b\" /* CommonModule */], fesm2015_forms[\"f\" /* FormsModule */]]] });\n    return NgbDatepickerModule;\n})();\nlet ng_bootstrap_NgbDropdownConfig = /*@__PURE__*/ (() => {\n    /**\n     * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n     *\n     * You can inject this service, typically in your root component, and customize the values of its properties in\n     * order to provide default values for all the dropdowns used in the application.\n     */\n    let NgbDropdownConfig = class NgbDropdownConfig {\n        constructor() {\n            this.autoClose = true;\n            this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n        }\n    };\n    NgbDropdownConfig.ɵfac = function NgbDropdownConfig_Factory(t) { return new (t || NgbDropdownConfig)(); };\n    NgbDropdownConfig.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbDropdownConfig_Factory() { return new NgbDropdownConfig(); }, token: NgbDropdownConfig, providedIn: \"root\" });\n    return NgbDropdownConfig;\n})();\nvar NgbDropdownToggle_1;\nlet ng_bootstrap_NgbNavbar = /*@__PURE__*/ (() => {\n    let NgbNavbar = class NgbNavbar {\n    };\n    NgbNavbar.ɵfac = function NgbNavbar_Factory(t) { return new (t || NgbNavbar)(); };\n    NgbNavbar.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbNavbar, selectors: [[\"\", 8, \"navbar\"]] });\n    return NgbNavbar;\n})();\nlet ng_bootstrap_NgbDropdownItem = /*@__PURE__*/ (() => {\n    /**\n     * A directive you should put on a dropdown item to enable keyboard navigation.\n     * Arrow keys will move focus between items marked with this directive.\n     *\n     * @since 4.1.0\n     */\n    let NgbDropdownItem = class NgbDropdownItem {\n        constructor(elementRef) {\n            this.elementRef = elementRef;\n            this._disabled = false;\n        }\n        set disabled(value) {\n            this._disabled = value === '' || value === true; // accept an empty attribute as true\n        }\n        get disabled() { return this._disabled; }\n    };\n    NgbDropdownItem.ɵfac = function NgbDropdownItem_Factory(t) { return new (t || NgbDropdownItem)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */])); };\n    NgbDropdownItem.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbDropdownItem, selectors: [[\"\", \"ngbDropdownItem\", \"\"]], hostAttrs: [1, \"dropdown-item\"], hostVars: 2, hostBindings: function NgbDropdownItem_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Fb\" /* ɵɵclassProp */](\"disabled\", ctx.disabled);\n            }\n        }, inputs: { disabled: \"disabled\" } });\n    return NgbDropdownItem;\n})();\nlet ng_bootstrap_NgbDropdownMenu = /*@__PURE__*/ (() => {\n    /**\n     * A directive that wraps dropdown menu content and dropdown items.\n     */\n    let NgbDropdownMenu = class NgbDropdownMenu {\n        constructor(dropdown, _elementRef) {\n            this.dropdown = dropdown;\n            this.placement = 'bottom';\n            this.isOpen = false;\n            this.nativeElement = _elementRef.nativeElement;\n        }\n    };\n    NgbDropdownMenu.ɵfac = function NgbDropdownMenu_Factory(t) { return new (t || NgbDropdownMenu)(core[\"Nb\" /* ɵɵdirectiveInject */](Object(core[\"V\" /* forwardRef */])(() => ng_bootstrap_NgbDropdown)), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */])); };\n    NgbDropdownMenu.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbDropdownMenu, selectors: [[\"\", \"ngbDropdownMenu\", \"\"]], contentQueries: function NgbDropdownMenu_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbDropdownItem, 0);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.menuItems = _t);\n            }\n        }, hostVars: 5, hostBindings: function NgbDropdownMenu_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"cc\" /* ɵɵlistener */](\"keydown.ArrowUp\", function NgbDropdownMenu_keydown_ArrowUp_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.ArrowDown\", function NgbDropdownMenu_keydown_ArrowDown_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.Home\", function NgbDropdownMenu_keydown_Home_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.End\", function NgbDropdownMenu_keydown_End_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.Enter\", function NgbDropdownMenu_keydown_Enter_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.Space\", function NgbDropdownMenu_keydown_Space_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.Tab\", function NgbDropdownMenu_keydown_Tab_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.Shift.Tab\", function NgbDropdownMenu_keydown_Shift_Tab_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); });\n            }\n            if (rf & 2) {\n                core[\"Bb\" /* ɵɵattribute */](\"x-placement\", ctx.placement);\n                core[\"Fb\" /* ɵɵclassProp */](\"dropdown-menu\", true)(\"show\", ctx.dropdown.isOpen());\n            }\n        } });\n    NgbDropdownMenu = __decorate([__param(0, Object(core[\"r\" /* Inject */])(Object(core[\"V\" /* forwardRef */])(() => ng_bootstrap_NgbDropdown)))\n    ], NgbDropdownMenu);\n    return NgbDropdownMenu;\n})();\nlet ng_bootstrap_NgbDropdownAnchor = /*@__PURE__*/ (() => {\n    /**\n     * A directive to mark an element to which dropdown menu will be anchored.\n     *\n     * This is a simple version of the `NgbDropdownToggle` directive.\n     * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n     * for events other than click.\n     *\n     * @since 1.1.0\n     */\n    let NgbDropdownAnchor = class NgbDropdownAnchor {\n        constructor(dropdown, _elementRef) {\n            this.dropdown = dropdown;\n            this.nativeElement = _elementRef.nativeElement;\n        }\n    };\n    NgbDropdownAnchor.ɵfac = function NgbDropdownAnchor_Factory(t) { return new (t || NgbDropdownAnchor)(core[\"Nb\" /* ɵɵdirectiveInject */](Object(core[\"V\" /* forwardRef */])(() => ng_bootstrap_NgbDropdown)), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */])); };\n    NgbDropdownAnchor.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbDropdownAnchor, selectors: [[\"\", \"ngbDropdownAnchor\", \"\"]], hostAttrs: [1, \"dropdown-toggle\"], hostVars: 1, hostBindings: function NgbDropdownAnchor_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Bb\" /* ɵɵattribute */](\"aria-expanded\", ctx.dropdown.isOpen());\n            }\n        } });\n    NgbDropdownAnchor = __decorate([__param(0, Object(core[\"r\" /* Inject */])(Object(core[\"V\" /* forwardRef */])(() => ng_bootstrap_NgbDropdown)))\n    ], NgbDropdownAnchor);\n    return NgbDropdownAnchor;\n})();\nlet ng_bootstrap_NgbDropdownToggle = /*@__PURE__*/ (() => {\n    /**\n     * A directive to mark an element that will toggle dropdown via the `click` event.\n     *\n     * You can also use `NgbDropdownAnchor` as an alternative.\n     */\n    let NgbDropdownToggle = NgbDropdownToggle_1 = class NgbDropdownToggle extends ng_bootstrap_NgbDropdownAnchor {\n        constructor(dropdown, elementRef) {\n            super(dropdown, elementRef);\n        }\n    };\n    NgbDropdownToggle.ɵfac = function NgbDropdownToggle_Factory(t) { return new (t || NgbDropdownToggle)(core[\"Nb\" /* ɵɵdirectiveInject */](Object(core[\"V\" /* forwardRef */])(() => ng_bootstrap_NgbDropdown)), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */])); };\n    NgbDropdownToggle.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbDropdownToggle, selectors: [[\"\", \"ngbDropdownToggle\", \"\"]], hostAttrs: [1, \"dropdown-toggle\"], hostVars: 1, hostBindings: function NgbDropdownToggle_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"cc\" /* ɵɵlistener */](\"click\", function NgbDropdownToggle_click_HostBindingHandler() { return ctx.dropdown.toggle(); })(\"keydown.ArrowUp\", function NgbDropdownToggle_keydown_ArrowUp_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.ArrowDown\", function NgbDropdownToggle_keydown_ArrowDown_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.Home\", function NgbDropdownToggle_keydown_Home_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.End\", function NgbDropdownToggle_keydown_End_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.Tab\", function NgbDropdownToggle_keydown_Tab_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.Shift.Tab\", function NgbDropdownToggle_keydown_Shift_Tab_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); });\n            }\n            if (rf & 2) {\n                core[\"Bb\" /* ɵɵattribute */](\"aria-expanded\", ctx.dropdown.isOpen());\n            }\n        }, features: [core[\"zb\" /* ɵɵProvidersFeature */]([{ provide: ng_bootstrap_NgbDropdownAnchor, useExisting: Object(core[\"V\" /* forwardRef */])(() => NgbDropdownToggle_1) }]), core[\"xb\" /* ɵɵInheritDefinitionFeature */]] });\n    NgbDropdownToggle = NgbDropdownToggle_1 = __decorate([__param(0, Object(core[\"r\" /* Inject */])(Object(core[\"V\" /* forwardRef */])(() => ng_bootstrap_NgbDropdown)))\n    ], NgbDropdownToggle);\n    return NgbDropdownToggle;\n})();\nlet ng_bootstrap_NgbDropdown = /*@__PURE__*/ (() => {\n    /**\n     * A directive that provides contextual overlays for displaying lists of links and more.\n     */\n    let NgbDropdown = class NgbDropdown {\n        constructor(_changeDetector, config, _document, _ngZone, _elementRef, _renderer, ngbNavbar) {\n            this._changeDetector = _changeDetector;\n            this._document = _document;\n            this._ngZone = _ngZone;\n            this._elementRef = _elementRef;\n            this._renderer = _renderer;\n            this._closed$ = new Subject[\"a\" /* Subject */]();\n            this._bodyContainer = null;\n            /**\n             * Defines whether or not the dropdown menu is opened initially.\n             */\n            this._open = false;\n            /**\n             * An event fired when the dropdown is opened or closed.\n             *\n             * The event payload is a `boolean`:\n             * * `true` - the dropdown was opened\n             * * `false` - the dropdown was closed\n             */\n            this.openChange = new core[\"o\" /* EventEmitter */]();\n            this.placement = config.placement;\n            this.container = config.container;\n            this.autoClose = config.autoClose;\n            this.display = ngbNavbar ? 'static' : 'dynamic';\n            this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n        }\n        ngAfterContentInit() {\n            this._ngZone.onStable.pipe(Object(take[\"a\" /* take */])(1)).subscribe(() => {\n                this._applyPlacementClasses();\n                if (this._open) {\n                    this._setCloseHandlers();\n                }\n            });\n        }\n        ngOnChanges(changes) {\n            if (changes.container && this._open) {\n                this._applyContainer(this.container);\n            }\n            if (changes.placement && !changes.placement.isFirstChange) {\n                this._applyPlacementClasses();\n            }\n        }\n        /**\n         * Checks if the dropdown menu is open.\n         */\n        isOpen() { return this._open; }\n        /**\n         * Opens the dropdown menu.\n         */\n        open() {\n            if (!this._open) {\n                this._open = true;\n                this._applyContainer(this.container);\n                this.openChange.emit(true);\n                this._setCloseHandlers();\n                if (this._anchor) {\n                    this._anchor.nativeElement.focus();\n                }\n            }\n        }\n        _setCloseHandlers() {\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, (source) => {\n                this.close();\n                if (source === 0 /* ESCAPE */) {\n                    this._anchor.nativeElement.focus();\n                }\n            }, this._closed$, this._menu ? [this._menu.nativeElement] : [], this._anchor ? [this._anchor.nativeElement] : [], '.dropdown-item,.dropdown-divider');\n        }\n        /**\n         * Closes the dropdown menu.\n         */\n        close() {\n            if (this._open) {\n                this._open = false;\n                this._resetContainer();\n                this._closed$.next();\n                this.openChange.emit(false);\n                this._changeDetector.markForCheck();\n            }\n        }\n        /**\n         * Toggles the dropdown menu.\n         */\n        toggle() {\n            if (this.isOpen()) {\n                this.close();\n            }\n            else {\n                this.open();\n            }\n        }\n        ngOnDestroy() {\n            this._resetContainer();\n            this._closed$.next();\n            this._zoneSubscription.unsubscribe();\n        }\n        onKeyDown(event) {\n            // tslint:disable-next-line:deprecation\n            const key = event.which;\n            const itemElements = this._getMenuElements();\n            let position = -1;\n            let itemElement = null;\n            const isEventFromToggle = this._isEventFromToggle(event);\n            if (!isEventFromToggle && itemElements.length) {\n                itemElements.forEach((item, index) => {\n                    if (item.contains(event.target)) {\n                        itemElement = item;\n                    }\n                    if (item === this._document.activeElement) {\n                        position = index;\n                    }\n                });\n            }\n            // closing on Enter / Space\n            if (key === Key.Space || key === Key.Enter) {\n                if (itemElement && (this.autoClose === true || this.autoClose === 'inside')) {\n                    // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n                    // So we have to register a one-time click handler that will fire after any user defined click handlers\n                    // to close the dropdown\n                    fromEvent(itemElement, 'click').pipe(Object(take[\"a\" /* take */])(1)).subscribe(() => this.close());\n                }\n                return;\n            }\n            if (key === Key.Tab) {\n                if (event.target && this.isOpen() && this.autoClose) {\n                    if (this._anchor.nativeElement === event.target) {\n                        if (this.container === 'body' && !event.shiftKey) {\n                            /* This case is special: user is using [Tab] from the anchor/toggle.\n                               User expects the next focusable element in the dropdown menu to get focus.\n                               But the menu is not a sibling to anchor/toggle, it is at the end of the body.\n                               Trick is to synchronously focus the menu element, and let the [keydown.Tab] go\n                               so that browser will focus the proper element (first one focusable in the menu) */\n                            this._renderer.setAttribute(this._menu.nativeElement, 'tabindex', '0');\n                            this._menu.nativeElement.focus();\n                            this._renderer.removeAttribute(this._menu.nativeElement, 'tabindex');\n                        }\n                        else if (event.shiftKey) {\n                            this.close();\n                        }\n                        return;\n                    }\n                    else if (this.container === 'body') {\n                        const focusableElements = this._menu.nativeElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n                        if (event.shiftKey && event.target === focusableElements[0]) {\n                            this._anchor.nativeElement.focus();\n                            event.preventDefault();\n                        }\n                        else if (!event.shiftKey && event.target === focusableElements[focusableElements.length - 1]) {\n                            this._anchor.nativeElement.focus();\n                            this.close();\n                        }\n                    }\n                    else {\n                        fromEvent(event.target, 'focusout').pipe(Object(take[\"a\" /* take */])(1)).subscribe(({ relatedTarget }) => {\n                            if (!this._elementRef.nativeElement.contains(relatedTarget)) {\n                                this.close();\n                            }\n                        });\n                    }\n                }\n                return;\n            }\n            // opening / navigating\n            if (isEventFromToggle || itemElement) {\n                this.open();\n                if (itemElements.length) {\n                    switch (key) {\n                        case Key.ArrowDown:\n                            position = Math.min(position + 1, itemElements.length - 1);\n                            break;\n                        case Key.ArrowUp:\n                            if (this._isDropup() && position === -1) {\n                                position = itemElements.length - 1;\n                                break;\n                            }\n                            position = Math.max(position - 1, 0);\n                            break;\n                        case Key.Home:\n                            position = 0;\n                            break;\n                        case Key.End:\n                            position = itemElements.length - 1;\n                            break;\n                    }\n                    itemElements[position].focus();\n                }\n                event.preventDefault();\n            }\n        }\n        _isDropup() { return this._elementRef.nativeElement.classList.contains('dropup'); }\n        _isEventFromToggle(event) {\n            return this._anchor.nativeElement.contains(event.target);\n        }\n        _getMenuElements() {\n            const menu = this._menu;\n            if (menu == null) {\n                return [];\n            }\n            return menu.menuItems.filter(item => !item.disabled).map(item => item.elementRef.nativeElement);\n        }\n        _positionMenu() {\n            const menu = this._menu;\n            if (this.isOpen() && menu) {\n                this._applyPlacementClasses(this.display === 'dynamic' ? positionElements(this._anchor.nativeElement, this._bodyContainer || this._menu.nativeElement, this.placement, this.container === 'body') :\n                    this._getFirstPlacement(this.placement));\n            }\n        }\n        _getFirstPlacement(placement) {\n            return Array.isArray(placement) ? placement[0] : placement.split(' ')[0];\n        }\n        _resetContainer() {\n            const renderer = this._renderer;\n            if (this._menu) {\n                const dropdownElement = this._elementRef.nativeElement;\n                const dropdownMenuElement = this._menu.nativeElement;\n                renderer.appendChild(dropdownElement, dropdownMenuElement);\n                renderer.removeStyle(dropdownMenuElement, 'position');\n                renderer.removeStyle(dropdownMenuElement, 'transform');\n            }\n            if (this._bodyContainer) {\n                renderer.removeChild(this._document.body, this._bodyContainer);\n                this._bodyContainer = null;\n            }\n        }\n        _applyContainer(container = null) {\n            this._resetContainer();\n            if (container === 'body') {\n                const renderer = this._renderer;\n                const dropdownMenuElement = this._menu.nativeElement;\n                const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div');\n                // Override some styles to have the positionning working\n                renderer.setStyle(bodyContainer, 'position', 'absolute');\n                renderer.setStyle(dropdownMenuElement, 'position', 'static');\n                renderer.setStyle(bodyContainer, 'z-index', '1050');\n                renderer.appendChild(bodyContainer, dropdownMenuElement);\n                renderer.appendChild(this._document.body, bodyContainer);\n            }\n        }\n        _applyPlacementClasses(placement) {\n            const menu = this._menu;\n            if (menu) {\n                if (!placement) {\n                    placement = this._getFirstPlacement(this.placement);\n                }\n                const renderer = this._renderer;\n                const dropdownElement = this._elementRef.nativeElement;\n                // remove the current placement classes\n                renderer.removeClass(dropdownElement, 'dropup');\n                renderer.removeClass(dropdownElement, 'dropdown');\n                menu.placement = this.display === 'static' ? null : placement;\n                /*\n                * apply the new placement\n                * in case of top use up-arrow or down-arrow otherwise\n                */\n                const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n                renderer.addClass(dropdownElement, dropdownClass);\n                const bodyContainer = this._bodyContainer;\n                if (bodyContainer) {\n                    renderer.removeClass(bodyContainer, 'dropup');\n                    renderer.removeClass(bodyContainer, 'dropdown');\n                    renderer.addClass(bodyContainer, dropdownClass);\n                }\n            }\n        }\n    };\n    NgbDropdown.ɵfac = function NgbDropdown_Factory(t) { return new (t || NgbDropdown)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"i\" /* ChangeDetectorRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbDropdownConfig), core[\"Nb\" /* ɵɵdirectiveInject */](common[\"c\" /* DOCUMENT */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"C\" /* NgZone */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"G\" /* Renderer2 */]), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbNavbar, 8)); };\n    NgbDropdown.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbDropdown, selectors: [[\"\", \"ngbDropdown\", \"\"]], contentQueries: function NgbDropdown_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbDropdownMenu, 1);\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbDropdownAnchor, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx._menu = _t.first);\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx._anchor = _t.first);\n            }\n        }, hostVars: 2, hostBindings: function NgbDropdown_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Fb\" /* ɵɵclassProp */](\"show\", ctx.isOpen());\n            }\n        }, inputs: { _open: [\"open\", \"_open\"], placement: \"placement\", container: \"container\", autoClose: \"autoClose\", display: \"display\" }, outputs: { openChange: \"openChange\" }, exportAs: [\"ngbDropdown\"], features: [core[\"yb\" /* ɵɵNgOnChangesFeature */]] });\n    NgbDropdown = __decorate([__param(2, Object(core[\"r\" /* Inject */])(common[\"c\" /* DOCUMENT */])),\n        __param(6, Object(core[\"D\" /* Optional */])())\n    ], NgbDropdown);\n    return NgbDropdown;\n})();\nconst NGB_DROPDOWN_DIRECTIVES = [ng_bootstrap_NgbDropdown, ng_bootstrap_NgbDropdownAnchor, ng_bootstrap_NgbDropdownToggle, ng_bootstrap_NgbDropdownMenu, ng_bootstrap_NgbDropdownItem, ng_bootstrap_NgbNavbar];\nlet ng_bootstrap_NgbDropdownModule = /*@__PURE__*/ (() => {\n    let NgbDropdownModule = class NgbDropdownModule {\n    };\n    NgbDropdownModule.ɵfac = function NgbDropdownModule_Factory(t) { return new (t || NgbDropdownModule)(); };\n    NgbDropdownModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbDropdownModule });\n    NgbDropdownModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({});\n    return NgbDropdownModule;\n})();\nlet ng_bootstrap_NgbModalConfig = /*@__PURE__*/ (() => {\n    /**\n     * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n     *\n     * You can inject this service, typically in your root component, and customize the values of its properties in\n     * order to provide default values for all modals used in the application.\n    *\n    * @since 3.1.0\n    */\n    let NgbModalConfig = class NgbModalConfig {\n        constructor() {\n            this.backdrop = true;\n            this.keyboard = true;\n        }\n    };\n    NgbModalConfig.ɵfac = function NgbModalConfig_Factory(t) { return new (t || NgbModalConfig)(); };\n    NgbModalConfig.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbModalConfig_Factory() { return new NgbModalConfig(); }, token: NgbModalConfig, providedIn: \"root\" });\n    return NgbModalConfig;\n})();\nclass ContentRef {\n    constructor(nodes, viewRef, componentRef) {\n        this.nodes = nodes;\n        this.viewRef = viewRef;\n        this.componentRef = componentRef;\n    }\n}\nclass ng_bootstrap_PopupService {\n    constructor(_type, _injector, _viewContainerRef, _renderer, _componentFactoryResolver, _applicationRef) {\n        this._type = _type;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._applicationRef = _applicationRef;\n        this._windowRef = null;\n        this._contentRef = null;\n    }\n    open(content, context) {\n        if (!this._windowRef) {\n            this._contentRef = this._getContentRef(content, context);\n            this._windowRef = this._viewContainerRef.createComponent(this._componentFactoryResolver.resolveComponentFactory(this._type), this._viewContainerRef.length, this._injector, this._contentRef.nodes);\n        }\n        return this._windowRef;\n    }\n    close() {\n        var _a;\n        if (this._windowRef) {\n            this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n            this._windowRef = null;\n            if ((_a = this._contentRef) === null || _a === void 0 ? void 0 : _a.viewRef) {\n                this._applicationRef.detachView(this._contentRef.viewRef);\n                this._contentRef.viewRef.destroy();\n                this._contentRef = null;\n            }\n        }\n    }\n    _getContentRef(content, context) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof core[\"N\" /* TemplateRef */]) {\n            const viewRef = content.createEmbeddedView(context);\n            this._applicationRef.attachView(viewRef);\n            return new ContentRef([viewRef.rootNodes], viewRef);\n        }\n        else {\n            return new ContentRef([[this._renderer.createText(`${content}`)]]);\n        }\n    }\n}\nconst ng_bootstrap_noop = () => { };\nconst ɵ0$1 = ng_bootstrap_noop;\nlet ng_bootstrap_ScrollBar = /*@__PURE__*/ (() => {\n    /**\n     * Utility to handle the scrollbar.\n     *\n     * It allows to compensate the lack of a vertical scrollbar by adding an\n     * equivalent padding on the right of the body, and to remove this compensation.\n     */\n    let ScrollBar = class ScrollBar {\n        constructor(_document) {\n            this._document = _document;\n        }\n        /**\n         * To be called right before a potential vertical scrollbar would be removed:\n         *\n         * - if there was a scrollbar, adds some compensation padding to the body\n         * to keep the same layout as when the scrollbar is there\n         * - if there was none, there is nothing to do\n         *\n         * @return a callback used to revert the compensation (noop if there was none,\n         * otherwise a function removing the padding)\n         */\n        compensate() {\n            const width = this._getWidth();\n            return !this._isPresent(width) ? ng_bootstrap_noop : this._adjustBody(width);\n        }\n        /**\n         * Adds a padding of the given width on the right of the body.\n         *\n         * @return a callback used to revert the padding to its previous value\n         */\n        _adjustBody(scrollbarWidth) {\n            const body = this._document.body;\n            const userSetPaddingStyle = body.style.paddingRight;\n            const actualPadding = parseFloat(window.getComputedStyle(body)['padding-right']);\n            body.style['padding-right'] = `${actualPadding + scrollbarWidth}px`;\n            return () => body.style['padding-right'] = userSetPaddingStyle;\n        }\n        /**\n         * Tells whether a scrollbar is currently present on the body.\n         *\n         * @return true if scrollbar is present, false otherwise\n         */\n        _isPresent(scrollbarWidth) {\n            const rect = this._document.body.getBoundingClientRect();\n            const bodyToViewportGap = window.innerWidth - (rect.left + rect.right);\n            const uncertainty = 0.1 * scrollbarWidth;\n            return bodyToViewportGap >= scrollbarWidth - uncertainty;\n        }\n        /**\n         * Calculates and returns the width of a scrollbar.\n         *\n         * @return the width of a scrollbar on this page\n         */\n        _getWidth() {\n            const measurer = this._document.createElement('div');\n            measurer.className = 'modal-scrollbar-measure';\n            const body = this._document.body;\n            body.appendChild(measurer);\n            const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n            body.removeChild(measurer);\n            return width;\n        }\n    };\n    ScrollBar.ɵfac = function ScrollBar_Factory(t) { return new (t || ScrollBar)(core[\"Zb\" /* ɵɵinject */](common[\"c\" /* DOCUMENT */])); };\n    ScrollBar.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function ScrollBar_Factory() { return new ScrollBar(Object(core[\"Zb\" /* ɵɵinject */])(common[\"c\" /* DOCUMENT */])); }, token: ScrollBar, providedIn: \"root\" });\n    ScrollBar = __decorate([__param(0, Object(core[\"r\" /* Inject */])(common[\"c\" /* DOCUMENT */]))\n    ], ScrollBar);\n    return ScrollBar;\n})();\nlet ng_bootstrap_NgbModalBackdrop = /*@__PURE__*/ (() => {\n    let NgbModalBackdrop = class NgbModalBackdrop {\n    };\n    NgbModalBackdrop.ɵfac = function NgbModalBackdrop_Factory(t) { return new (t || NgbModalBackdrop)(); };\n    NgbModalBackdrop.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbModalBackdrop, selectors: [[\"ngb-modal-backdrop\"]], hostAttrs: [2, \"z-index\", \"1050\"], hostVars: 2, hostBindings: function NgbModalBackdrop_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Cb\" /* ɵɵclassMap */](\"modal-backdrop fade show\" + (ctx.backdropClass ? \" \" + ctx.backdropClass : \"\"));\n            }\n        }, inputs: { backdropClass: \"backdropClass\" }, decls: 0, vars: 0, template: function NgbModalBackdrop_Template(rf, ctx) { }, encapsulation: 2 });\n    return NgbModalBackdrop;\n})();\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\nclass NgbActiveModal {\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     */\n    close(result) { }\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) { }\n}\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nclass NgbModalRef {\n    constructor(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n        this._windowCmptRef = _windowCmptRef;\n        this._contentRef = _contentRef;\n        this._backdropCmptRef = _backdropCmptRef;\n        this._beforeDismiss = _beforeDismiss;\n        _windowCmptRef.instance.dismissEvent.subscribe((reason) => { this.dismiss(reason); });\n        this.result = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this.result.then(null, () => { });\n    }\n    /**\n     * The instance of a component used for the modal content.\n     *\n     * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n     */\n    get componentInstance() {\n        if (this._contentRef && this._contentRef.componentRef) {\n            return this._contentRef.componentRef.instance;\n        }\n    }\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     */\n    close(result) {\n        if (this._windowCmptRef) {\n            this._resolve(result);\n            this._removeModalElements();\n        }\n    }\n    _dismiss(reason) {\n        this._reject(reason);\n        this._removeModalElements();\n    }\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) {\n        if (this._windowCmptRef) {\n            if (!this._beforeDismiss) {\n                this._dismiss(reason);\n            }\n            else {\n                const dismiss = this._beforeDismiss();\n                if (dismiss && dismiss.then) {\n                    dismiss.then(result => {\n                        if (result !== false) {\n                            this._dismiss(reason);\n                        }\n                    }, () => { });\n                }\n                else if (dismiss !== false) {\n                    this._dismiss(reason);\n                }\n            }\n        }\n    }\n    _removeModalElements() {\n        const windowNativeEl = this._windowCmptRef.location.nativeElement;\n        windowNativeEl.parentNode.removeChild(windowNativeEl);\n        this._windowCmptRef.destroy();\n        if (this._backdropCmptRef) {\n            const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n            backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n            this._backdropCmptRef.destroy();\n        }\n        if (this._contentRef && this._contentRef.viewRef) {\n            this._contentRef.viewRef.destroy();\n        }\n        this._windowCmptRef = null;\n        this._backdropCmptRef = null;\n        this._contentRef = null;\n    }\n}\nvar ModalDismissReasons = /*@__PURE__*/ (function (ModalDismissReasons) {\n    ModalDismissReasons[ModalDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n    ModalDismissReasons[ModalDismissReasons[\"ESC\"] = 1] = \"ESC\";\n    return ModalDismissReasons;\n})({});\nlet ng_bootstrap_NgbModalWindow = /*@__PURE__*/ (() => {\n    let NgbModalWindow = class NgbModalWindow {\n        constructor(_document, _elRef, _zone) {\n            this._document = _document;\n            this._elRef = _elRef;\n            this._zone = _zone;\n            this._closed$ = new Subject[\"a\" /* Subject */]();\n            this._elWithFocus = null; // element that is focused prior to modal opening\n            this.backdrop = true;\n            this.keyboard = true;\n            this.dismissEvent = new core[\"o\" /* EventEmitter */]();\n        }\n        dismiss(reason) { this.dismissEvent.emit(reason); }\n        ngOnInit() { this._elWithFocus = this._document.activeElement; }\n        ngAfterViewInit() {\n            const { nativeElement } = this._elRef;\n            this._zone.runOutsideAngular(() => {\n                fromEvent(nativeElement, 'keydown')\n                    .pipe(takeUntil(this._closed$), \n                // tslint:disable-next-line:deprecation\n                Object(filter[\"a\" /* filter */])(e => e.which === Key.Escape && this.keyboard))\n                    .subscribe(event => requestAnimationFrame(() => {\n                    if (!event.defaultPrevented) {\n                        this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n                    }\n                }));\n                // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n                // inside the modal dialog and releasing it outside\n                let preventClose = false;\n                fromEvent(this._dialogEl.nativeElement, 'mousedown')\n                    .pipe(takeUntil(this._closed$), Object(tap[\"a\" /* tap */])(() => preventClose = false), Object(switchMap[\"a\" /* switchMap */])(() => fromEvent(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), Object(take[\"a\" /* take */])(1))), Object(filter[\"a\" /* filter */])(({ target }) => nativeElement === target))\n                    .subscribe(() => { preventClose = true; });\n                // We're listening to 'click' to dismiss modal on modal window click, except when:\n                // 1. clicking on modal dialog itself\n                // 2. closing was prevented by mousedown/up handlers\n                // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n                fromEvent(nativeElement, 'click').pipe(takeUntil(this._closed$)).subscribe(({ target }) => {\n                    if (this.backdrop === true && nativeElement === target && !preventClose) {\n                        this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n                    }\n                    preventClose = false;\n                });\n            });\n            if (!nativeElement.contains(document.activeElement)) {\n                const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`);\n                const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n                const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n                elementToFocus.focus();\n            }\n        }\n        ngOnDestroy() {\n            const body = this._document.body;\n            const elWithFocus = this._elWithFocus;\n            let elementToFocus;\n            if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n                elementToFocus = elWithFocus;\n            }\n            else {\n                elementToFocus = body;\n            }\n            this._zone.runOutsideAngular(() => {\n                setTimeout(() => elementToFocus.focus());\n                this._elWithFocus = null;\n            });\n            this._closed$.next();\n        }\n    };\n    NgbModalWindow.ɵfac = function NgbModalWindow_Factory(t) { return new (t || NgbModalWindow)(core[\"Nb\" /* ɵɵdirectiveInject */](common[\"c\" /* DOCUMENT */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"C\" /* NgZone */])); };\n    NgbModalWindow.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbModalWindow, selectors: [[\"ngb-modal-window\"]], viewQuery: function NgbModalWindow_Query(rf, ctx) {\n            if (rf & 1) {\n                core[\"Fc\" /* ɵɵviewQuery */](_c29, 3);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx._dialogEl = _t.first);\n            }\n        }, hostAttrs: [\"role\", \"dialog\", \"tabindex\", \"-1\"], hostVars: 5, hostBindings: function NgbModalWindow_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Bb\" /* ɵɵattribute */](\"aria-modal\", true)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-describedby\", ctx.ariaDescribedBy);\n                core[\"Cb\" /* ɵɵclassMap */](\"modal fade show d-block\" + (ctx.windowClass ? \" \" + ctx.windowClass : \"\"));\n            }\n        }, inputs: { backdrop: \"backdrop\", keyboard: \"keyboard\", ariaLabelledBy: \"ariaLabelledBy\", ariaDescribedBy: \"ariaDescribedBy\", centered: \"centered\", scrollable: \"scrollable\", size: \"size\", windowClass: \"windowClass\" }, outputs: { dismissEvent: \"dismiss\" }, ngContentSelectors: _c3, decls: 4, vars: 2, consts: [[\"role\", \"document\"], [\"dialog\", \"\"], [1, \"modal-content\"]], template: function NgbModalWindow_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"jc\" /* ɵɵprojectionDef */]();\n                core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 0, 1);\n                core[\"Sb\" /* ɵɵelementStart */](2, \"div\", 2);\n                core[\"ic\" /* ɵɵprojection */](3);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n                core[\"Rb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"Cb\" /* ɵɵclassMap */](\"modal-dialog\" + (ctx.size ? \" modal-\" + ctx.size : \"\") + (ctx.centered ? \" modal-dialog-centered\" : \"\") + (ctx.scrollable ? \" modal-dialog-scrollable\" : \"\"));\n            }\n        }, styles: [\"ngb-modal-window .component-host-scrollable{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;overflow:hidden}\"], encapsulation: 2 });\n    NgbModalWindow = __decorate([__param(0, Object(core[\"r\" /* Inject */])(common[\"c\" /* DOCUMENT */]))\n    ], NgbModalWindow);\n    return NgbModalWindow;\n})();\nlet ng_bootstrap_NgbModalStack = /*@__PURE__*/ (() => {\n    let NgbModalStack = class NgbModalStack {\n        constructor(_applicationRef, _injector, _document, _scrollBar, _rendererFactory, _ngZone) {\n            this._applicationRef = _applicationRef;\n            this._injector = _injector;\n            this._document = _document;\n            this._scrollBar = _scrollBar;\n            this._rendererFactory = _rendererFactory;\n            this._ngZone = _ngZone;\n            this._activeWindowCmptHasChanged = new Subject[\"a\" /* Subject */]();\n            this._ariaHiddenValues = new Map();\n            this._backdropAttributes = ['backdropClass'];\n            this._modalRefs = [];\n            this._windowAttributes = ['ariaLabelledBy', 'ariaDescribedBy', 'backdrop', 'centered', 'keyboard', 'scrollable', 'size', 'windowClass'];\n            this._windowCmpts = [];\n            this._activeInstances = new core[\"o\" /* EventEmitter */]();\n            // Trap focus on active WindowCmpt\n            this._activeWindowCmptHasChanged.subscribe(() => {\n                if (this._windowCmpts.length) {\n                    const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n                    ngbFocusTrap(this._ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n                    this._revertAriaHidden();\n                    this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n                }\n            });\n        }\n        open(moduleCFR, contentInjector, content, options) {\n            const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ?\n                this._document.querySelector(options.container) :\n                this._document.body;\n            const renderer = this._rendererFactory.createRenderer(null, null);\n            const revertPaddingForScrollBar = this._scrollBar.compensate();\n            const removeBodyClass = () => {\n                if (!this._modalRefs.length) {\n                    renderer.removeClass(this._document.body, 'modal-open');\n                    this._revertAriaHidden();\n                }\n            };\n            if (!containerEl) {\n                throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n            }\n            const activeModal = new NgbActiveModal();\n            const contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\n            let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : undefined;\n            let windowCmptRef = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n            let ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n            this._registerModalRef(ngbModalRef);\n            this._registerWindowCmpt(windowCmptRef);\n            ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n            ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n            activeModal.close = (result) => { ngbModalRef.close(result); };\n            activeModal.dismiss = (reason) => { ngbModalRef.dismiss(reason); };\n            this._applyWindowOptions(windowCmptRef.instance, options);\n            if (this._modalRefs.length === 1) {\n                renderer.addClass(this._document.body, 'modal-open');\n            }\n            if (backdropCmptRef && backdropCmptRef.instance) {\n                this._applyBackdropOptions(backdropCmptRef.instance, options);\n            }\n            return ngbModalRef;\n        }\n        get activeInstances() { return this._activeInstances; }\n        dismissAll(reason) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\n        hasOpenModals() { return this._modalRefs.length > 0; }\n        _attachBackdrop(moduleCFR, containerEl) {\n            let backdropFactory = moduleCFR.resolveComponentFactory(ng_bootstrap_NgbModalBackdrop);\n            let backdropCmptRef = backdropFactory.create(this._injector);\n            this._applicationRef.attachView(backdropCmptRef.hostView);\n            containerEl.appendChild(backdropCmptRef.location.nativeElement);\n            return backdropCmptRef;\n        }\n        _attachWindowComponent(moduleCFR, containerEl, contentRef) {\n            let windowFactory = moduleCFR.resolveComponentFactory(ng_bootstrap_NgbModalWindow);\n            let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n            this._applicationRef.attachView(windowCmptRef.hostView);\n            containerEl.appendChild(windowCmptRef.location.nativeElement);\n            return windowCmptRef;\n        }\n        _applyWindowOptions(windowInstance, options) {\n            this._windowAttributes.forEach((optionName) => {\n                if (isDefined(options[optionName])) {\n                    windowInstance[optionName] = options[optionName];\n                }\n            });\n        }\n        _applyBackdropOptions(backdropInstance, options) {\n            this._backdropAttributes.forEach((optionName) => {\n                if (isDefined(options[optionName])) {\n                    backdropInstance[optionName] = options[optionName];\n                }\n            });\n        }\n        _getContentRef(moduleCFR, contentInjector, content, activeModal, options) {\n            if (!content) {\n                return new ContentRef([]);\n            }\n            else if (content instanceof core[\"N\" /* TemplateRef */]) {\n                return this._createFromTemplateRef(content, activeModal);\n            }\n            else if (isString(content)) {\n                return this._createFromString(content);\n            }\n            else {\n                return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\n            }\n        }\n        _createFromTemplateRef(content, activeModal) {\n            const context = {\n                $implicit: activeModal,\n                close(result) { activeModal.close(result); },\n                dismiss(reason) { activeModal.dismiss(reason); }\n            };\n            const viewRef = content.createEmbeddedView(context);\n            this._applicationRef.attachView(viewRef);\n            return new ContentRef([viewRef.rootNodes], viewRef);\n        }\n        _createFromString(content) {\n            const component = this._document.createTextNode(`${content}`);\n            return new ContentRef([[component]]);\n        }\n        _createFromComponent(moduleCFR, contentInjector, content, context, options) {\n            const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n            const modalContentInjector = core[\"u\" /* Injector */].create({ providers: [{ provide: NgbActiveModal, useValue: context }], parent: contentInjector });\n            const componentRef = contentCmptFactory.create(modalContentInjector);\n            const componentNativeEl = componentRef.location.nativeElement;\n            if (options.scrollable) {\n                componentNativeEl.classList.add('component-host-scrollable');\n            }\n            this._applicationRef.attachView(componentRef.hostView);\n            // FIXME: we should here get rid of the component nativeElement\n            // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n            return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n        }\n        _setAriaHidden(element) {\n            const parent = element.parentElement;\n            if (parent && element !== this._document.body) {\n                Array.from(parent.children).forEach(sibling => {\n                    if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n                        this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n                        sibling.setAttribute('aria-hidden', 'true');\n                    }\n                });\n                this._setAriaHidden(parent);\n            }\n        }\n        _revertAriaHidden() {\n            this._ariaHiddenValues.forEach((value, element) => {\n                if (value) {\n                    element.setAttribute('aria-hidden', value);\n                }\n                else {\n                    element.removeAttribute('aria-hidden');\n                }\n            });\n            this._ariaHiddenValues.clear();\n        }\n        _registerModalRef(ngbModalRef) {\n            const unregisterModalRef = () => {\n                const index = this._modalRefs.indexOf(ngbModalRef);\n                if (index > -1) {\n                    this._modalRefs.splice(index, 1);\n                    this._activeInstances.emit(this._modalRefs);\n                }\n            };\n            this._modalRefs.push(ngbModalRef);\n            this._activeInstances.emit(this._modalRefs);\n            ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n        }\n        _registerWindowCmpt(ngbWindowCmpt) {\n            this._windowCmpts.push(ngbWindowCmpt);\n            this._activeWindowCmptHasChanged.next();\n            ngbWindowCmpt.onDestroy(() => {\n                const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n                if (index > -1) {\n                    this._windowCmpts.splice(index, 1);\n                    this._activeWindowCmptHasChanged.next();\n                }\n            });\n        }\n    };\n    NgbModalStack.ɵfac = function NgbModalStack_Factory(t) { return new (t || NgbModalStack)(core[\"Zb\" /* ɵɵinject */](core[\"g\" /* ApplicationRef */]), core[\"Zb\" /* ɵɵinject */](core[\"u\" /* Injector */]), core[\"Zb\" /* ɵɵinject */](common[\"c\" /* DOCUMENT */]), core[\"Zb\" /* ɵɵinject */](ng_bootstrap_ScrollBar), core[\"Zb\" /* ɵɵinject */](core[\"H\" /* RendererFactory2 */]), core[\"Zb\" /* ɵɵinject */](core[\"C\" /* NgZone */])); };\n    NgbModalStack.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbModalStack_Factory() { return new NgbModalStack(Object(core[\"Zb\" /* ɵɵinject */])(core[\"g\" /* ApplicationRef */]), Object(core[\"Zb\" /* ɵɵinject */])(core[\"q\" /* INJECTOR */]), Object(core[\"Zb\" /* ɵɵinject */])(common[\"c\" /* DOCUMENT */]), Object(core[\"Zb\" /* ɵɵinject */])(ng_bootstrap_ScrollBar), Object(core[\"Zb\" /* ɵɵinject */])(core[\"H\" /* RendererFactory2 */]), Object(core[\"Zb\" /* ɵɵinject */])(core[\"C\" /* NgZone */])); }, token: NgbModalStack, providedIn: \"root\" });\n    NgbModalStack = __decorate([__param(2, Object(core[\"r\" /* Inject */])(common[\"c\" /* DOCUMENT */]))\n    ], NgbModalStack);\n    return NgbModalStack;\n})();\nlet ng_bootstrap_NgbModal = /*@__PURE__*/ (() => {\n    /**\n     * A service for opening modal windows.\n     *\n     * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n     * the `.open()` method.\n     */\n    let NgbModal = class NgbModal {\n        constructor(_moduleCFR, _injector, _modalStack, _config) {\n            this._moduleCFR = _moduleCFR;\n            this._injector = _injector;\n            this._modalStack = _modalStack;\n            this._config = _config;\n        }\n        /**\n         * Opens a new modal window with the specified content and supplied options.\n         *\n         * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n         * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n         * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n         *\n         * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n         */\n        open(content, options = {}) {\n            const combinedOptions = Object.assign({}, this._config, options);\n            return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n        }\n        /**\n         * Returns an observable that holds the active modal instances.\n         */\n        get activeInstances() { return this._modalStack.activeInstances; }\n        /**\n         * Dismisses all currently displayed modal windows with the supplied reason.\n         *\n         * @since 3.1.0\n         */\n        dismissAll(reason) { this._modalStack.dismissAll(reason); }\n        /**\n         * Indicates if there are currently any open modal windows in the application.\n         *\n         * @since 3.3.0\n         */\n        hasOpenModals() { return this._modalStack.hasOpenModals(); }\n    };\n    NgbModal.ɵfac = function NgbModal_Factory(t) { return new (t || NgbModal)(core[\"Zb\" /* ɵɵinject */](core[\"k\" /* ComponentFactoryResolver */]), core[\"Zb\" /* ɵɵinject */](core[\"u\" /* Injector */]), core[\"Zb\" /* ɵɵinject */](ng_bootstrap_NgbModalStack), core[\"Zb\" /* ɵɵinject */](ng_bootstrap_NgbModalConfig)); };\n    NgbModal.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbModal_Factory() { return new NgbModal(Object(core[\"Zb\" /* ɵɵinject */])(core[\"k\" /* ComponentFactoryResolver */]), Object(core[\"Zb\" /* ɵɵinject */])(core[\"q\" /* INJECTOR */]), Object(core[\"Zb\" /* ɵɵinject */])(ng_bootstrap_NgbModalStack), Object(core[\"Zb\" /* ɵɵinject */])(ng_bootstrap_NgbModalConfig)); }, token: NgbModal, providedIn: \"root\" });\n    return NgbModal;\n})();\nlet ng_bootstrap_NgbModalModule = /*@__PURE__*/ (() => {\n    let NgbModalModule = class NgbModalModule {\n    };\n    NgbModalModule.ɵfac = function NgbModalModule_Factory(t) { return new (t || NgbModalModule)(); };\n    NgbModalModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbModalModule });\n    NgbModalModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({ providers: [ng_bootstrap_NgbModal] });\n    return NgbModalModule;\n})();\nlet ng_bootstrap_NgbNavConfig = /*@__PURE__*/ (() => {\n    /**\n     * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n     *\n     * You can inject this service, typically in your root component, and customize the values of its properties in\n     * order to provide default values for all the navs used in the application.\n     *\n     * @since 5.2.0\n     */\n    let NgbNavConfig = class NgbNavConfig {\n        constructor() {\n            this.destroyOnHide = true;\n            this.orientation = 'horizontal';\n            this.roles = 'tablist';\n            this.keyboard = false;\n        }\n    };\n    NgbNavConfig.ɵfac = function NgbNavConfig_Factory(t) { return new (t || NgbNavConfig)(); };\n    NgbNavConfig.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbNavConfig_Factory() { return new NgbNavConfig(); }, token: NgbNavConfig, providedIn: \"root\" });\n    return NgbNavConfig;\n})();\nconst isValidNavId = (id) => isDefined(id) && id !== '';\nconst ɵ0$2 = isValidNavId;\nlet navCounter = 0;\nlet ng_bootstrap_NgbNavContent = /*@__PURE__*/ (() => {\n    /**\n     * This directive must be used to wrap content to be displayed in the nav.\n     *\n     * @since 5.2.0\n     */\n    let NgbNavContent = class NgbNavContent {\n        constructor(templateRef) {\n            this.templateRef = templateRef;\n        }\n    };\n    NgbNavContent.ɵfac = function NgbNavContent_Factory(t) { return new (t || NgbNavContent)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    NgbNavContent.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbNavContent, selectors: [[\"ng-template\", \"ngbNavContent\", \"\"]] });\n    return NgbNavContent;\n})();\nlet ng_bootstrap_NgbNavItem = /*@__PURE__*/ (() => {\n    /**\n     * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n     *\n     * @since 5.2.0\n     */\n    let NgbNavItem = class NgbNavItem {\n        constructor(nav, elementRef) {\n            this.elementRef = elementRef;\n            /**\n             * If `true`, the current nav item is disabled and can't be toggled by user.\n             *\n             * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n             */\n            this.disabled = false;\n            // TODO: cf https://github.com/angular/angular/issues/30106\n            this._nav = nav;\n        }\n        ngAfterContentChecked() {\n            // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n            // only @ContentChildren allows us to specify the {descendants: false} option.\n            // Without {descendants: false} we are hitting bugs described in:\n            // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n            this.contentTpl = this.contentTpls.first;\n        }\n        ngOnInit() {\n            if (!isDefined(this.domId)) {\n                this.domId = `ngb-nav-${navCounter++}`;\n            }\n        }\n        get active() { return this._nav.activeId === this.id; }\n        get id() { return isValidNavId(this._id) ? this._id : this.domId; }\n        get panelDomId() { return `${this.domId}-panel`; }\n        isPanelInDom() {\n            return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n        }\n    };\n    NgbNavItem.ɵfac = function NgbNavItem_Factory(t) { return new (t || NgbNavItem)(core[\"Nb\" /* ɵɵdirectiveInject */](Object(core[\"V\" /* forwardRef */])(() => ng_bootstrap_NgbNav)), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */])); };\n    NgbNavItem.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbNavItem, selectors: [[\"\", \"ngbNavItem\", \"\"]], contentQueries: function NgbNavItem_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbNavContent, 0);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.contentTpls = _t);\n            }\n        }, hostVars: 2, hostBindings: function NgbNavItem_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Fb\" /* ɵɵclassProp */](\"nav-item\", true);\n            }\n        }, inputs: { disabled: \"disabled\", domId: \"domId\", destroyOnHide: \"destroyOnHide\", _id: [\"ngbNavItem\", \"_id\"] }, exportAs: [\"ngbNavItem\"] });\n    NgbNavItem = __decorate([__param(0, Object(core[\"r\" /* Inject */])(Object(core[\"V\" /* forwardRef */])(() => ng_bootstrap_NgbNav)))\n    ], NgbNavItem);\n    return NgbNavItem;\n})();\nlet ng_bootstrap_NgbNav = /*@__PURE__*/ (() => {\n    /**\n     * A nav directive that helps with implementing tabbed navigation components.\n     *\n     * @since 5.2.0\n     */\n    let NgbNav = class NgbNav {\n        constructor(role, config, _cd, _document) {\n            this.role = role;\n            this._cd = _cd;\n            this._document = _document;\n            /**\n             * The event emitted after the active nav changes\n             * The payload of the event is the newly active nav id\n             *\n             * If you want to prevent nav change, you should use `(navChange)` event\n             */\n            this.activeIdChange = new core[\"o\" /* EventEmitter */]();\n            /**\n             * The nav change event emitted right before the nav change happens on user click.\n             *\n             * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n             *\n             * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n             */\n            this.navChange = new core[\"o\" /* EventEmitter */]();\n            this.destroyOnHide = config.destroyOnHide;\n            this.orientation = config.orientation;\n            this.roles = config.roles;\n            this.keyboard = config.keyboard;\n        }\n        click(item) {\n            if (!item.disabled) {\n                this._updateActiveId(item.id);\n            }\n        }\n        onKeyDown(event) {\n            if (this.roles !== 'tablist' || !this.keyboard) {\n                return;\n            }\n            // tslint:disable-next-line: deprecation\n            const key = event.which;\n            const enabledLinks = this.links.filter(link => !link.navItem.disabled);\n            const { length } = enabledLinks;\n            let position = -1;\n            enabledLinks.forEach((link, index) => {\n                if (link.elRef.nativeElement === this._document.activeElement) {\n                    position = index;\n                }\n            });\n            if (length) {\n                switch (key) {\n                    case Key.ArrowLeft:\n                        if (this.orientation === 'vertical') {\n                            return;\n                        }\n                        position = (position - 1 + length) % length;\n                        break;\n                    case Key.ArrowRight:\n                        if (this.orientation === 'vertical') {\n                            return;\n                        }\n                        position = (position + 1) % length;\n                        break;\n                    case Key.ArrowDown:\n                        if (this.orientation === 'horizontal') {\n                            return;\n                        }\n                        position = (position + 1) % length;\n                        break;\n                    case Key.ArrowUp:\n                        if (this.orientation === 'horizontal') {\n                            return;\n                        }\n                        position = (position - 1 + length) % length;\n                        break;\n                    case Key.Home:\n                        position = 0;\n                        break;\n                    case Key.End:\n                        position = length - 1;\n                        break;\n                }\n                if (this.keyboard === 'changeWithArrows') {\n                    this.select(enabledLinks[position].navItem.id);\n                }\n                enabledLinks[position].elRef.nativeElement.focus();\n                event.preventDefault();\n            }\n        }\n        /**\n         * Selects the nav with the given id and shows its associated pane.\n         * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n         */\n        select(id) { this._updateActiveId(id, false); }\n        ngAfterContentInit() {\n            if (!isDefined(this.activeId)) {\n                const nextId = this.items.first ? this.items.first.id : null;\n                if (isValidNavId(nextId)) {\n                    this._updateActiveId(nextId, false);\n                    this._cd.detectChanges();\n                }\n            }\n        }\n        _updateActiveId(nextId, emitNavChange = true) {\n            if (this.activeId !== nextId) {\n                let defaultPrevented = false;\n                if (emitNavChange) {\n                    this.navChange.emit({ activeId: this.activeId, nextId, preventDefault: () => { defaultPrevented = true; } });\n                }\n                if (!defaultPrevented) {\n                    this.activeId = nextId;\n                    this.activeIdChange.emit(nextId);\n                }\n            }\n        }\n    };\n    NgbNav.ɵfac = function NgbNav_Factory(t) { return new (t || NgbNav)(core[\"ac\" /* ɵɵinjectAttribute */]('role'), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbNavConfig), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"i\" /* ChangeDetectorRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](common[\"c\" /* DOCUMENT */])); };\n    NgbNav.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbNav, selectors: [[\"\", \"ngbNav\", \"\"]], contentQueries: function NgbNav_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbNavItem, 0);\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbNavLink, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.items = _t);\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.links = _t);\n            }\n        }, hostVars: 6, hostBindings: function NgbNav_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"cc\" /* ɵɵlistener */](\"keydown.arrowLeft\", function NgbNav_keydown_arrowLeft_HostBindingHandler($event) { return ctx.onKeyDown($event); })(\"keydown.arrowRight\", function NgbNav_keydown_arrowRight_HostBindingHandler($event) { return ctx.onKeyDown($event); })(\"keydown.arrowDown\", function NgbNav_keydown_arrowDown_HostBindingHandler($event) { return ctx.onKeyDown($event); })(\"keydown.arrowUp\", function NgbNav_keydown_arrowUp_HostBindingHandler($event) { return ctx.onKeyDown($event); })(\"keydown.Home\", function NgbNav_keydown_Home_HostBindingHandler($event) { return ctx.onKeyDown($event); })(\"keydown.End\", function NgbNav_keydown_End_HostBindingHandler($event) { return ctx.onKeyDown($event); });\n            }\n            if (rf & 2) {\n                core[\"Bb\" /* ɵɵattribute */](\"aria-orientation\", ctx.orientation === \"vertical\" && ctx.roles === \"tablist\" ? \"vertical\" : undefined)(\"role\", ctx.role ? ctx.role : ctx.roles ? \"tablist\" : undefined);\n                core[\"Fb\" /* ɵɵclassProp */](\"nav\", true)(\"flex-column\", ctx.orientation === \"vertical\");\n            }\n        }, inputs: { destroyOnHide: \"destroyOnHide\", orientation: \"orientation\", roles: \"roles\", keyboard: \"keyboard\", activeId: \"activeId\" }, outputs: { activeIdChange: \"activeIdChange\", navChange: \"navChange\" }, exportAs: [\"ngbNav\"] });\n    NgbNav = __decorate([__param(0, Object(core[\"h\" /* Attribute */])('role')),\n        __param(3, Object(core[\"r\" /* Inject */])(common[\"c\" /* DOCUMENT */]))\n    ], NgbNav);\n    return NgbNav;\n})();\nlet ng_bootstrap_NgbNavLink = /*@__PURE__*/ (() => {\n    /**\n     * A directive to put on the nav link.\n     *\n     * @since 5.2.0\n     */\n    let NgbNavLink = class NgbNavLink {\n        constructor(role, navItem, nav, elRef) {\n            this.role = role;\n            this.navItem = navItem;\n            this.nav = nav;\n            this.elRef = elRef;\n        }\n        hasNavItemClass() {\n            // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n            return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n        }\n    };\n    NgbNavLink.ɵfac = function NgbNavLink_Factory(t) { return new (t || NgbNavLink)(core[\"ac\" /* ɵɵinjectAttribute */]('role'), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbNavItem), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbNav), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */])); };\n    NgbNavLink.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbNavLink, selectors: [[\"a\", \"ngbNavLink\", \"\"]], hostAttrs: [\"href\", \"\"], hostVars: 14, hostBindings: function NgbNavLink_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"cc\" /* ɵɵlistener */](\"click\", function NgbNavLink_click_HostBindingHandler($event) { ctx.nav.click(ctx.navItem); return $event.preventDefault(); });\n            }\n            if (rf & 2) {\n                core[\"Vb\" /* ɵɵhostProperty */](\"id\", ctx.navItem.domId);\n                core[\"Bb\" /* ɵɵattribute */](\"role\", ctx.role ? ctx.role : ctx.nav.roles ? \"tab\" : undefined)(\"tabindex\", ctx.navItem.disabled ? -1 : undefined)(\"aria-controls\", ctx.navItem.isPanelInDom() ? ctx.navItem.panelDomId : null)(\"aria-selected\", ctx.navItem.active)(\"aria-disabled\", ctx.navItem.disabled);\n                core[\"Fb\" /* ɵɵclassProp */](\"nav-link\", true)(\"nav-item\", ctx.hasNavItemClass())(\"active\", ctx.navItem.active)(\"disabled\", ctx.navItem.disabled);\n            }\n        } });\n    NgbNavLink = __decorate([__param(0, Object(core[\"h\" /* Attribute */])('role'))\n    ], NgbNavLink);\n    return NgbNavLink;\n})();\nlet ng_bootstrap_NgbNavOutlet = /*@__PURE__*/ (() => {\n    /**\n     * The outlet where currently active nav content will be displayed.\n     *\n     * @since 5.2.0\n     */\n    let NgbNavOutlet = class NgbNavOutlet {\n    };\n    NgbNavOutlet.ɵfac = function NgbNavOutlet_Factory(t) { return new (t || NgbNavOutlet)(); };\n    NgbNavOutlet.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbNavOutlet, selectors: [[\"\", \"ngbNavOutlet\", \"\"]], hostVars: 2, hostBindings: function NgbNavOutlet_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Fb\" /* ɵɵclassProp */](\"tab-content\", true);\n            }\n        }, inputs: { paneRole: \"paneRole\", nav: [\"ngbNavOutlet\", \"nav\"] }, attrs: _c30, decls: 1, vars: 1, consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"tab-pane\", 3, \"id\", \"active\", 4, \"ngIf\"], [1, \"tab-pane\", 3, \"id\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]], template: function NgbNavOutlet_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"yc\" /* ɵɵtemplate */](0, NgbNavOutlet_ng_template_0_Template, 1, 1, \"ng-template\", 0);\n            }\n            if (rf & 2) {\n                core[\"kc\" /* ɵɵproperty */](\"ngForOf\", ctx.nav.items);\n            }\n        }, directives: [common[\"l\" /* NgForOf */], common[\"m\" /* NgIf */], common[\"n\" /* NgTemplateOutlet */]], encapsulation: 2 });\n    return NgbNavOutlet;\n})();\nconst NGB_NAV_DIRECTIVES = [ng_bootstrap_NgbNavContent, ng_bootstrap_NgbNav, ng_bootstrap_NgbNavItem, ng_bootstrap_NgbNavLink, ng_bootstrap_NgbNavOutlet];\nlet ng_bootstrap_NgbNavModule = /*@__PURE__*/ (() => {\n    let NgbNavModule = class NgbNavModule {\n    };\n    NgbNavModule.ɵfac = function NgbNavModule_Factory(t) { return new (t || NgbNavModule)(); };\n    NgbNavModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbNavModule });\n    NgbNavModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({ imports: [[common[\"b\" /* CommonModule */]]] });\n    return NgbNavModule;\n})();\nlet ng_bootstrap_NgbPaginationConfig = /*@__PURE__*/ (() => {\n    /**\n     * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n     *\n     * You can inject this service, typically in your root component, and customize the values of its properties in\n     * order to provide default values for all the paginations used in the application.\n     */\n    let NgbPaginationConfig = class NgbPaginationConfig {\n        constructor() {\n            this.disabled = false;\n            this.boundaryLinks = false;\n            this.directionLinks = true;\n            this.ellipses = true;\n            this.maxSize = 0;\n            this.pageSize = 10;\n            this.rotate = false;\n        }\n    };\n    NgbPaginationConfig.ɵfac = function NgbPaginationConfig_Factory(t) { return new (t || NgbPaginationConfig)(); };\n    NgbPaginationConfig.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbPaginationConfig_Factory() { return new NgbPaginationConfig(); }, token: NgbPaginationConfig, providedIn: \"root\" });\n    return NgbPaginationConfig;\n})();\nlet ng_bootstrap_NgbPaginationEllipsis = /*@__PURE__*/ (() => {\n    /**\n     * A directive to match the 'ellipsis' link template\n     *\n     * @since 4.1.0\n     */\n    let NgbPaginationEllipsis = class NgbPaginationEllipsis {\n        constructor(templateRef) {\n            this.templateRef = templateRef;\n        }\n    };\n    NgbPaginationEllipsis.ɵfac = function NgbPaginationEllipsis_Factory(t) { return new (t || NgbPaginationEllipsis)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    NgbPaginationEllipsis.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbPaginationEllipsis, selectors: [[\"ng-template\", \"ngbPaginationEllipsis\", \"\"]] });\n    return NgbPaginationEllipsis;\n})();\nlet ng_bootstrap_NgbPaginationFirst = /*@__PURE__*/ (() => {\n    /**\n     * A directive to match the 'first' link template\n     *\n     * @since 4.1.0\n     */\n    let NgbPaginationFirst = class NgbPaginationFirst {\n        constructor(templateRef) {\n            this.templateRef = templateRef;\n        }\n    };\n    NgbPaginationFirst.ɵfac = function NgbPaginationFirst_Factory(t) { return new (t || NgbPaginationFirst)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    NgbPaginationFirst.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbPaginationFirst, selectors: [[\"ng-template\", \"ngbPaginationFirst\", \"\"]] });\n    return NgbPaginationFirst;\n})();\nlet ng_bootstrap_NgbPaginationLast = /*@__PURE__*/ (() => {\n    /**\n     * A directive to match the 'last' link template\n     *\n     * @since 4.1.0\n     */\n    let NgbPaginationLast = class NgbPaginationLast {\n        constructor(templateRef) {\n            this.templateRef = templateRef;\n        }\n    };\n    NgbPaginationLast.ɵfac = function NgbPaginationLast_Factory(t) { return new (t || NgbPaginationLast)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    NgbPaginationLast.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbPaginationLast, selectors: [[\"ng-template\", \"ngbPaginationLast\", \"\"]] });\n    return NgbPaginationLast;\n})();\nlet ng_bootstrap_NgbPaginationNext = /*@__PURE__*/ (() => {\n    /**\n     * A directive to match the 'next' link template\n     *\n     * @since 4.1.0\n     */\n    let NgbPaginationNext = class NgbPaginationNext {\n        constructor(templateRef) {\n            this.templateRef = templateRef;\n        }\n    };\n    NgbPaginationNext.ɵfac = function NgbPaginationNext_Factory(t) { return new (t || NgbPaginationNext)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    NgbPaginationNext.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbPaginationNext, selectors: [[\"ng-template\", \"ngbPaginationNext\", \"\"]] });\n    return NgbPaginationNext;\n})();\nlet ng_bootstrap_NgbPaginationNumber = /*@__PURE__*/ (() => {\n    /**\n     * A directive to match the page 'number' link template\n     *\n     * @since 4.1.0\n     */\n    let NgbPaginationNumber = class NgbPaginationNumber {\n        constructor(templateRef) {\n            this.templateRef = templateRef;\n        }\n    };\n    NgbPaginationNumber.ɵfac = function NgbPaginationNumber_Factory(t) { return new (t || NgbPaginationNumber)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    NgbPaginationNumber.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbPaginationNumber, selectors: [[\"ng-template\", \"ngbPaginationNumber\", \"\"]] });\n    return NgbPaginationNumber;\n})();\nlet ng_bootstrap_NgbPaginationPrevious = /*@__PURE__*/ (() => {\n    /**\n     * A directive to match the 'previous' link template\n     *\n     * @since 4.1.0\n     */\n    let NgbPaginationPrevious = class NgbPaginationPrevious {\n        constructor(templateRef) {\n            this.templateRef = templateRef;\n        }\n    };\n    NgbPaginationPrevious.ɵfac = function NgbPaginationPrevious_Factory(t) { return new (t || NgbPaginationPrevious)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    NgbPaginationPrevious.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbPaginationPrevious, selectors: [[\"ng-template\", \"ngbPaginationPrevious\", \"\"]] });\n    return NgbPaginationPrevious;\n})();\nlet ng_bootstrap_NgbPagination = /*@__PURE__*/ (() => {\n    /**\n     * A component that displays page numbers and allows to customize them in several ways.\n     */\n    let NgbPagination = class NgbPagination {\n        constructor(config) {\n            this.pageCount = 0;\n            this.pages = [];\n            /**\n             *  The current page.\n             *\n             *  Page numbers start with `1`.\n             */\n            this.page = 1;\n            /**\n             *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n             *\n             *  Event payload is the number of the newly selected page.\n             *\n             *  Page numbers start with `1`.\n             */\n            this.pageChange = new core[\"o\" /* EventEmitter */](true);\n            this.disabled = config.disabled;\n            this.boundaryLinks = config.boundaryLinks;\n            this.directionLinks = config.directionLinks;\n            this.ellipses = config.ellipses;\n            this.maxSize = config.maxSize;\n            this.pageSize = config.pageSize;\n            this.rotate = config.rotate;\n            this.size = config.size;\n        }\n        hasPrevious() { return this.page > 1; }\n        hasNext() { return this.page < this.pageCount; }\n        nextDisabled() { return !this.hasNext() || this.disabled; }\n        previousDisabled() { return !this.hasPrevious() || this.disabled; }\n        selectPage(pageNumber) { this._updatePages(pageNumber); }\n        ngOnChanges(changes) { this._updatePages(this.page); }\n        isEllipsis(pageNumber) { return pageNumber === -1; }\n        /**\n         * Appends ellipses and first/last page number to the displayed pages\n         */\n        _applyEllipses(start, end) {\n            if (this.ellipses) {\n                if (start > 0) {\n                    // The first page will always be included. If the displayed range\n                    // starts after the third page, then add ellipsis. But if the range\n                    // starts on the third page, then add the second page instead of\n                    // an ellipsis, because the ellipsis would only hide a single page.\n                    if (start > 2) {\n                        this.pages.unshift(-1);\n                    }\n                    else if (start === 2) {\n                        this.pages.unshift(2);\n                    }\n                    this.pages.unshift(1);\n                }\n                if (end < this.pageCount) {\n                    // The last page will always be included. If the displayed range\n                    // ends before the third-last page, then add ellipsis. But if the range\n                    // ends on third-last page, then add the second-last page instead of\n                    // an ellipsis, because the ellipsis would only hide a single page.\n                    if (end < (this.pageCount - 2)) {\n                        this.pages.push(-1);\n                    }\n                    else if (end === (this.pageCount - 2)) {\n                        this.pages.push(this.pageCount - 1);\n                    }\n                    this.pages.push(this.pageCount);\n                }\n            }\n        }\n        /**\n         * Rotates page numbers based on maxSize items visible.\n         * Currently selected page stays in the middle:\n         *\n         * Ex. for selected page = 6:\n         * [5,*6*,7] for maxSize = 3\n         * [4,5,*6*,7] for maxSize = 4\n         */\n        _applyRotation() {\n            let start = 0;\n            let end = this.pageCount;\n            let leftOffset = Math.floor(this.maxSize / 2);\n            let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n            if (this.page <= leftOffset) {\n                // very beginning, no rotation -> [0..maxSize]\n                end = this.maxSize;\n            }\n            else if (this.pageCount - this.page < leftOffset) {\n                // very end, no rotation -> [len-maxSize..len]\n                start = this.pageCount - this.maxSize;\n            }\n            else {\n                // rotate\n                start = this.page - leftOffset - 1;\n                end = this.page + rightOffset;\n            }\n            return [start, end];\n        }\n        /**\n         * Paginates page numbers based on maxSize items per page.\n         */\n        _applyPagination() {\n            let page = Math.ceil(this.page / this.maxSize) - 1;\n            let start = page * this.maxSize;\n            let end = start + this.maxSize;\n            return [start, end];\n        }\n        _setPageInRange(newPageNo) {\n            const prevPageNo = this.page;\n            this.page = getValueInRange(newPageNo, this.pageCount, 1);\n            if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n                this.pageChange.emit(this.page);\n            }\n        }\n        _updatePages(newPage) {\n            this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n            if (!isNumber(this.pageCount)) {\n                this.pageCount = 0;\n            }\n            // fill-in model needed to render pages\n            this.pages.length = 0;\n            for (let i = 1; i <= this.pageCount; i++) {\n                this.pages.push(i);\n            }\n            // set page within 1..max range\n            this._setPageInRange(newPage);\n            // apply maxSize if necessary\n            if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n                let start = 0;\n                let end = this.pageCount;\n                // either paginating or rotating page numbers\n                if (this.rotate) {\n                    [start, end] = this._applyRotation();\n                }\n                else {\n                    [start, end] = this._applyPagination();\n                }\n                this.pages = this.pages.slice(start, end);\n                // adding ellipses\n                this._applyEllipses(start, end);\n            }\n        }\n    };\n    NgbPagination.ɵfac = function NgbPagination_Factory(t) { return new (t || NgbPagination)(core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbPaginationConfig)); };\n    NgbPagination.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbPagination, selectors: [[\"ngb-pagination\"]], contentQueries: function NgbPagination_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbPaginationEllipsis, 1);\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbPaginationFirst, 1);\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbPaginationLast, 1);\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbPaginationNext, 1);\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbPaginationNumber, 1);\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbPaginationPrevious, 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.tplEllipsis = _t.first);\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.tplFirst = _t.first);\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.tplLast = _t.first);\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.tplNext = _t.first);\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.tplNumber = _t.first);\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.tplPrevious = _t.first);\n            }\n        }, hostAttrs: [\"role\", \"navigation\"], inputs: { page: \"page\", disabled: \"disabled\", boundaryLinks: \"boundaryLinks\", directionLinks: \"directionLinks\", ellipses: \"ellipses\", maxSize: \"maxSize\", pageSize: \"pageSize\", rotate: \"rotate\", size: \"size\", collectionSize: \"collectionSize\" }, outputs: { pageChange: \"pageChange\" }, features: [core[\"yb\" /* ɵɵNgOnChangesFeature */]], decls: 18, vars: 7, consts: function () {\n            let i18n_32;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_pagination_first$$FESM2015_NG_BOOTSTRAP_JS__33 = goog.getMsg(\"\\u00AB\\u00AB\");\n                i18n_32 = MSG_EXTERNAL_ngb_pagination_first$$FESM2015_NG_BOOTSTRAP_JS__33;\n            }\n            else {\n                i18n_32 = $localize `:@@ngb.pagination.first␟656506dfd46380956a655f919f1498d018f75ca0␟6867721956102594380:««`;\n            }\n            let i18n_34;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_pagination_previous$$FESM2015_NG_BOOTSTRAP_JS__35 = goog.getMsg(\"\\u00AB\");\n                i18n_34 = MSG_EXTERNAL_ngb_pagination_previous$$FESM2015_NG_BOOTSTRAP_JS__35;\n            }\n            else {\n                i18n_34 = $localize `:@@ngb.pagination.previous␟6e52b6ee77a4848d899dd21b591c6fd499e3aef3␟6479320895410098858:«`;\n            }\n            let i18n_36;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_pagination_next$$FESM2015_NG_BOOTSTRAP_JS__37 = goog.getMsg(\"\\u00BB\");\n                i18n_36 = MSG_EXTERNAL_ngb_pagination_next$$FESM2015_NG_BOOTSTRAP_JS__37;\n            }\n            else {\n                i18n_36 = $localize `:@@ngb.pagination.next␟ba9cbb4ff311464308a3627e4f1c3345d9fe6d7d␟5458177150283468089:»`;\n            }\n            let i18n_38;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_pagination_last$$FESM2015_NG_BOOTSTRAP_JS__39 = goog.getMsg(\"\\u00BB\\u00BB\");\n                i18n_38 = MSG_EXTERNAL_ngb_pagination_last$$FESM2015_NG_BOOTSTRAP_JS__39;\n            }\n            else {\n                i18n_38 = $localize `:@@ngb.pagination.last␟49f27a460bc97e7e00be5b37098bfa79884fc7d9␟5277020320267646988:»»`;\n            }\n            let i18n_40;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_pagination_first_aria$$FESM2015_NG_BOOTSTRAP_JS__41 = goog.getMsg(\"First\");\n                i18n_40 = MSG_EXTERNAL_ngb_pagination_first_aria$$FESM2015_NG_BOOTSTRAP_JS__41;\n            }\n            else {\n                i18n_40 = $localize `:@@ngb.pagination.first-aria␟f2f852318759c6396b5d3d17031d53817d7b38cc␟2241508602425256033:First`;\n            }\n            let i18n_43;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_pagination_previous_aria$$FESM2015_NG_BOOTSTRAP_JS__44 = goog.getMsg(\"Previous\");\n                i18n_43 = MSG_EXTERNAL_ngb_pagination_previous_aria$$FESM2015_NG_BOOTSTRAP_JS__44;\n            }\n            else {\n                i18n_43 = $localize `:@@ngb.pagination.previous-aria␟680d5c75b7fd8d37961083608b9fcdc4167b4c43␟4452427314943113135:Previous`;\n            }\n            let i18n_48;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_pagination_next_aria$$FESM2015_NG_BOOTSTRAP_JS__49 = goog.getMsg(\"Next\");\n                i18n_48 = MSG_EXTERNAL_ngb_pagination_next_aria$$FESM2015_NG_BOOTSTRAP_JS__49;\n            }\n            else {\n                i18n_48 = $localize `:@@ngb.pagination.next-aria␟f732c304c7433e5a83ffcd862c3dce709a0f4982␟3885497195825665706:Next`;\n            }\n            let i18n_50;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_pagination_last_aria$$FESM2015_NG_BOOTSTRAP_JS__51 = goog.getMsg(\"Last\");\n                i18n_50 = MSG_EXTERNAL_ngb_pagination_last_aria$$FESM2015_NG_BOOTSTRAP_JS__51;\n            }\n            else {\n                i18n_50 = $localize `:@@ngb.pagination.last-aria␟5c729788ba138508aca1bec050b610f7bf81db3e␟4882268002141858767:Last`;\n            }\n            return [[\"first\", \"\"], [\"previous\", \"\"], [\"next\", \"\"], [\"last\", \"\"], [\"ellipsis\", \"\"], [\"defaultNumber\", \"\"], [\"class\", \"page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"page-item\", 3, \"active\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], i18n_32, i18n_34, i18n_36, i18n_38, [\"class\", \"sr-only\", 4, \"ngIf\"], [1, \"sr-only\"], [1, \"page-item\"], [\"aria-label\", i18n_40, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"aria-label\", i18n_43, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"class\", \"page-link\", \"tabindex\", \"-1\", \"aria-disabled\", \"true\", 4, \"ngIf\"], [\"class\", \"page-link\", \"href\", \"\", 3, \"click\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"aria-disabled\", \"true\", 1, \"page-link\"], [\"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_48, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_50, \"href\", \"\", 1, \"page-link\", 3, \"click\"]];\n        }, template: function NgbPagination_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"yc\" /* ɵɵtemplate */](0, NgbPagination_ng_template_0_Template, 2, 0, \"ng-template\", null, 0, core[\"zc\" /* ɵɵtemplateRefExtractor */]);\n                core[\"yc\" /* ɵɵtemplate */](2, NgbPagination_ng_template_2_Template, 2, 0, \"ng-template\", null, 1, core[\"zc\" /* ɵɵtemplateRefExtractor */]);\n                core[\"yc\" /* ɵɵtemplate */](4, NgbPagination_ng_template_4_Template, 2, 0, \"ng-template\", null, 2, core[\"zc\" /* ɵɵtemplateRefExtractor */]);\n                core[\"yc\" /* ɵɵtemplate */](6, NgbPagination_ng_template_6_Template, 2, 0, \"ng-template\", null, 3, core[\"zc\" /* ɵɵtemplateRefExtractor */]);\n                core[\"yc\" /* ɵɵtemplate */](8, NgbPagination_ng_template_8_Template, 1, 0, \"ng-template\", null, 4, core[\"zc\" /* ɵɵtemplateRefExtractor */]);\n                core[\"yc\" /* ɵɵtemplate */](10, NgbPagination_ng_template_10_Template, 2, 2, \"ng-template\", null, 5, core[\"zc\" /* ɵɵtemplateRefExtractor */]);\n                core[\"Sb\" /* ɵɵelementStart */](12, \"ul\");\n                core[\"yc\" /* ɵɵtemplate */](13, NgbPagination_li_13_Template, 3, 9, \"li\", 6);\n                core[\"yc\" /* ɵɵtemplate */](14, NgbPagination_li_14_Template, 3, 8, \"li\", 6);\n                core[\"yc\" /* ɵɵtemplate */](15, NgbPagination_li_15_Template, 3, 7, \"li\", 7);\n                core[\"yc\" /* ɵɵtemplate */](16, NgbPagination_li_16_Template, 3, 9, \"li\", 6);\n                core[\"yc\" /* ɵɵtemplate */](17, NgbPagination_li_17_Template, 3, 9, \"li\", 6);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"Ab\" /* ɵɵadvance */](12);\n                core[\"Cb\" /* ɵɵclassMap */](\"pagination\" + (ctx.size ? \" pagination-\" + ctx.size : \"\"));\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.boundaryLinks);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.directionLinks);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngForOf\", ctx.pages);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.directionLinks);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.boundaryLinks);\n            }\n        }, directives: [common[\"m\" /* NgIf */], common[\"l\" /* NgForOf */], common[\"n\" /* NgTemplateOutlet */]], encapsulation: 2, changeDetection: 0 });\n    return NgbPagination;\n})();\nconst DIRECTIVES = [\n    ng_bootstrap_NgbPagination, ng_bootstrap_NgbPaginationEllipsis, ng_bootstrap_NgbPaginationFirst, ng_bootstrap_NgbPaginationLast, ng_bootstrap_NgbPaginationNext, ng_bootstrap_NgbPaginationNumber,\n    ng_bootstrap_NgbPaginationPrevious\n];\nlet ng_bootstrap_NgbPaginationModule = /*@__PURE__*/ (() => {\n    let NgbPaginationModule = class NgbPaginationModule {\n    };\n    NgbPaginationModule.ɵfac = function NgbPaginationModule_Factory(t) { return new (t || NgbPaginationModule)(); };\n    NgbPaginationModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbPaginationModule });\n    NgbPaginationModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({ imports: [[common[\"b\" /* CommonModule */]]] });\n    return NgbPaginationModule;\n})();\nclass Trigger {\n    constructor(open, close) {\n        this.open = open;\n        this.close = close;\n        if (!close) {\n            this.close = open;\n        }\n    }\n    isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\nconst DEFAULT_ALIASES = {\n    'hover': ['mouseenter', 'mouseleave'],\n    'focus': ['focusin', 'focusout'],\n};\nfunction parseTriggers(triggers, aliases = DEFAULT_ALIASES) {\n    const trimmedTriggers = (triggers || '').trim();\n    if (trimmedTriggers.length === 0) {\n        return [];\n    }\n    const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n        let alias = aliases[triggerPair[0]] || triggerPair;\n        return new Trigger(alias[0], alias[1]);\n    });\n    const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n    if (manualTriggers.length > 1) {\n        throw 'Triggers parse error: only one manual trigger is allowed';\n    }\n    if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n        throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n    }\n    return parsedTriggers;\n}\nfunction observeTriggers(renderer, nativeElement, triggers, isOpenedFn) {\n    return new Observable[\"a\" /* Observable */](subscriber => {\n        const listeners = [];\n        const openFn = () => subscriber.next(true);\n        const closeFn = () => subscriber.next(false);\n        const toggleFn = () => subscriber.next(!isOpenedFn());\n        triggers.forEach((trigger) => {\n            if (trigger.open === trigger.close) {\n                listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n            }\n            else {\n                listeners.push(renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n            }\n        });\n        return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n    });\n}\nconst delayOrNoop = (time) => time > 0 ? delay_delay(time) : (a) => a;\nconst ɵ0$3 = delayOrNoop;\nfunction triggerDelay(openDelay, closeDelay, isOpenedFn) {\n    return (input$) => {\n        let pending = null;\n        const filteredInput$ = input$.pipe(Object(map[\"a\" /* map */])(open => ({ open })), Object(filter[\"a\" /* filter */])(event => {\n            const currentlyOpen = isOpenedFn();\n            if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n                pending = event;\n                return true;\n            }\n            if (pending && pending.open !== event.open) {\n                pending = null;\n            }\n            return false;\n        }), Object(share[\"a\" /* share */])());\n        const delayedOpen$ = filteredInput$.pipe(Object(filter[\"a\" /* filter */])(event => event.open), delayOrNoop(openDelay));\n        const delayedClose$ = filteredInput$.pipe(Object(filter[\"a\" /* filter */])(event => !event.open), delayOrNoop(closeDelay));\n        return Object(merge[\"a\" /* merge */])(delayedOpen$, delayedClose$)\n            .pipe(Object(filter[\"a\" /* filter */])(event => {\n            if (event === pending) {\n                pending = null;\n                return event.open !== isOpenedFn();\n            }\n            return false;\n        }), Object(map[\"a\" /* map */])(event => event.open));\n    };\n}\nfunction listenToTriggers(renderer, nativeElement, triggers, isOpenedFn, openFn, closeFn, openDelay = 0, closeDelay = 0) {\n    const parsedTriggers = parseTriggers(triggers);\n    if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n        return () => { };\n    }\n    const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn)\n        .pipe(triggerDelay(openDelay, closeDelay, isOpenedFn))\n        .subscribe(open => (open ? openFn() : closeFn()));\n    return () => subscription.unsubscribe();\n}\nlet ng_bootstrap_NgbPopoverConfig = /*@__PURE__*/ (() => {\n    /**\n     * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n     *\n     * You can inject this service, typically in your root component, and customize the values of its properties in\n     * order to provide default values for all the popovers used in the application.\n     */\n    let NgbPopoverConfig = class NgbPopoverConfig {\n        constructor() {\n            this.autoClose = true;\n            this.placement = 'auto';\n            this.triggers = 'click';\n            this.disablePopover = false;\n            this.openDelay = 0;\n            this.closeDelay = 0;\n        }\n    };\n    NgbPopoverConfig.ɵfac = function NgbPopoverConfig_Factory(t) { return new (t || NgbPopoverConfig)(); };\n    NgbPopoverConfig.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbPopoverConfig_Factory() { return new NgbPopoverConfig(); }, token: NgbPopoverConfig, providedIn: \"root\" });\n    return NgbPopoverConfig;\n})();\nlet nextId$3 = 0;\nlet ng_bootstrap_NgbPopoverWindow = /*@__PURE__*/ (() => {\n    let NgbPopoverWindow = class NgbPopoverWindow {\n        isTitleTemplate() { return this.title instanceof core[\"N\" /* TemplateRef */]; }\n    };\n    NgbPopoverWindow.ɵfac = function NgbPopoverWindow_Factory(t) { return new (t || NgbPopoverWindow)(); };\n    NgbPopoverWindow.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbPopoverWindow, selectors: [[\"ngb-popover-window\"]], hostAttrs: [\"role\", \"tooltip\"], hostVars: 3, hostBindings: function NgbPopoverWindow_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Vb\" /* ɵɵhostProperty */](\"id\", ctx.id);\n                core[\"Cb\" /* ɵɵclassMap */](\"popover\" + (ctx.popoverClass ? \" \" + ctx.popoverClass : \"\"));\n            }\n        }, inputs: { title: \"title\", id: \"id\", popoverClass: \"popoverClass\", context: \"context\" }, ngContentSelectors: _c3, decls: 4, vars: 1, consts: [[1, \"arrow\"], [\"class\", \"popover-header\", 4, \"ngIf\"], [1, \"popover-body\"], [1, \"popover-header\"], [\"simpleTitle\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]], template: function NgbPopoverWindow_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"jc\" /* ɵɵprojectionDef */]();\n                core[\"Ob\" /* ɵɵelement */](0, \"div\", 0);\n                core[\"yc\" /* ɵɵtemplate */](1, NgbPopoverWindow_h3_1_Template, 4, 2, \"h3\", 1);\n                core[\"Sb\" /* ɵɵelementStart */](2, \"div\", 2);\n                core[\"ic\" /* ɵɵprojection */](3);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.title != null);\n            }\n        }, directives: [common[\"m\" /* NgIf */], common[\"n\" /* NgTemplateOutlet */]], styles: [\"ngb-popover-window.bs-popover-bottom>.arrow,ngb-popover-window.bs-popover-top>.arrow{left:50%;margin-left:-.5rem}ngb-popover-window.bs-popover-bottom-left>.arrow,ngb-popover-window.bs-popover-top-left>.arrow{left:2em}ngb-popover-window.bs-popover-bottom-right>.arrow,ngb-popover-window.bs-popover-top-right>.arrow{left:auto;right:2em}ngb-popover-window.bs-popover-left>.arrow,ngb-popover-window.bs-popover-right>.arrow{top:50%;margin-top:-.5rem}ngb-popover-window.bs-popover-left-top>.arrow,ngb-popover-window.bs-popover-right-top>.arrow{top:.7em}ngb-popover-window.bs-popover-left-bottom>.arrow,ngb-popover-window.bs-popover-right-bottom>.arrow{top:auto;bottom:.7em}\"], encapsulation: 2, changeDetection: 0 });\n    return NgbPopoverWindow;\n})();\nlet ng_bootstrap_NgbPopover = /*@__PURE__*/ (() => {\n    /**\n     * A lightweight and extensible directive for fancy popover creation.\n     */\n    let NgbPopover = class NgbPopover {\n        constructor(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n            this._elementRef = _elementRef;\n            this._renderer = _renderer;\n            this._ngZone = _ngZone;\n            this._document = _document;\n            this._changeDetector = _changeDetector;\n            /**\n             * An event emitted when the popover is shown. Contains no payload.\n             */\n            this.shown = new core[\"o\" /* EventEmitter */]();\n            /**\n             * An event emitted when the popover is hidden. Contains no payload.\n             */\n            this.hidden = new core[\"o\" /* EventEmitter */]();\n            this._ngbPopoverWindowId = `ngb-popover-${nextId$3++}`;\n            this._windowRef = null;\n            this.autoClose = config.autoClose;\n            this.placement = config.placement;\n            this.triggers = config.triggers;\n            this.container = config.container;\n            this.disablePopover = config.disablePopover;\n            this.popoverClass = config.popoverClass;\n            this.openDelay = config.openDelay;\n            this.closeDelay = config.closeDelay;\n            this._popupService = new ng_bootstrap_PopupService(ng_bootstrap_NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n            this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n                if (this._windowRef) {\n                    positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body', 'bs-popover');\n                }\n            });\n        }\n        _isDisabled() {\n            if (this.disablePopover) {\n                return true;\n            }\n            if (!this.ngbPopover && !this.popoverTitle) {\n                return true;\n            }\n            return false;\n        }\n        /**\n         * Opens the popover.\n         *\n         * This is considered to be a \"manual\" triggering.\n         * The `context` is an optional value to be injected into the popover template when it is created.\n         */\n        open(context) {\n            if (!this._windowRef && !this._isDisabled()) {\n                this._windowRef = this._popupService.open(this.ngbPopover, context);\n                this._windowRef.instance.title = this.popoverTitle;\n                this._windowRef.instance.context = context;\n                this._windowRef.instance.popoverClass = this.popoverClass;\n                this._windowRef.instance.id = this._ngbPopoverWindowId;\n                this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n                if (this.container === 'body') {\n                    this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n                }\n                // We need to detect changes, because we don't know where .open() might be called from.\n                // Ex. opening popover from one of lifecycle hooks that run after the CD\n                // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n                this._windowRef.changeDetectorRef.detectChanges();\n                // We need to mark for check, because popover won't work inside the OnPush component.\n                // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n                // inside the template of an OnPush component and we change the popover from\n                // open -> closed, the expression in question won't be updated unless we explicitly\n                // mark the parent component to be checked.\n                this._windowRef.changeDetectorRef.markForCheck();\n                ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [this._windowRef.location.nativeElement]);\n                this.shown.emit();\n            }\n        }\n        /**\n         * Closes the popover.\n         *\n         * This is considered to be a \"manual\" triggering of the popover.\n         */\n        close() {\n            if (this._windowRef) {\n                this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n                this._popupService.close();\n                this._windowRef = null;\n                this.hidden.emit();\n                this._changeDetector.markForCheck();\n            }\n        }\n        /**\n         * Toggles the popover.\n         *\n         * This is considered to be a \"manual\" triggering of the popover.\n         */\n        toggle() {\n            if (this._windowRef) {\n                this.close();\n            }\n            else {\n                this.open();\n            }\n        }\n        /**\n         * Returns `true`, if the popover is currently shown.\n         */\n        isOpen() { return this._windowRef != null; }\n        ngOnInit() {\n            this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n        }\n        ngOnChanges({ ngbPopover, popoverTitle, disablePopover, popoverClass }) {\n            if (popoverClass && this.isOpen()) {\n                this._windowRef.instance.popoverClass = popoverClass.currentValue;\n            }\n            // close popover if title and content become empty, or disablePopover set to true\n            if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n                this.close();\n            }\n        }\n        ngOnDestroy() {\n            this.close();\n            // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n            // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n            if (this._unregisterListenersFn) {\n                this._unregisterListenersFn();\n            }\n            this._zoneSubscription.unsubscribe();\n        }\n    };\n    NgbPopover.ɵfac = function NgbPopover_Factory(t) { return new (t || NgbPopover)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"G\" /* Renderer2 */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"u\" /* Injector */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"k\" /* ComponentFactoryResolver */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"R\" /* ViewContainerRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbPopoverConfig), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"C\" /* NgZone */]), core[\"Nb\" /* ɵɵdirectiveInject */](common[\"c\" /* DOCUMENT */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"i\" /* ChangeDetectorRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"g\" /* ApplicationRef */])); };\n    NgbPopover.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbPopover, selectors: [[\"\", \"ngbPopover\", \"\"]], inputs: { autoClose: \"autoClose\", placement: \"placement\", triggers: \"triggers\", container: \"container\", disablePopover: \"disablePopover\", popoverClass: \"popoverClass\", openDelay: \"openDelay\", closeDelay: \"closeDelay\", ngbPopover: \"ngbPopover\", popoverTitle: \"popoverTitle\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, exportAs: [\"ngbPopover\"], features: [core[\"yb\" /* ɵɵNgOnChangesFeature */]] });\n    NgbPopover = __decorate([__param(7, Object(core[\"r\" /* Inject */])(common[\"c\" /* DOCUMENT */]))\n    ], NgbPopover);\n    return NgbPopover;\n})();\nlet ng_bootstrap_NgbPopoverModule = /*@__PURE__*/ (() => {\n    let NgbPopoverModule = class NgbPopoverModule {\n    };\n    NgbPopoverModule.ɵfac = function NgbPopoverModule_Factory(t) { return new (t || NgbPopoverModule)(); };\n    NgbPopoverModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbPopoverModule });\n    NgbPopoverModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({ imports: [[common[\"b\" /* CommonModule */]]] });\n    return NgbPopoverModule;\n})();\nlet ng_bootstrap_NgbProgressbarConfig = /*@__PURE__*/ (() => {\n    /**\n     * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n     *\n     * You can inject this service, typically in your root component, and customize the values of its properties in\n     * order to provide default values for all the progress bars used in the application.\n     */\n    let NgbProgressbarConfig = class NgbProgressbarConfig {\n        constructor() {\n            this.max = 100;\n            this.animated = false;\n            this.striped = false;\n            this.showValue = false;\n        }\n    };\n    NgbProgressbarConfig.ɵfac = function NgbProgressbarConfig_Factory(t) { return new (t || NgbProgressbarConfig)(); };\n    NgbProgressbarConfig.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbProgressbarConfig_Factory() { return new NgbProgressbarConfig(); }, token: NgbProgressbarConfig, providedIn: \"root\" });\n    return NgbProgressbarConfig;\n})();\nlet ng_bootstrap_NgbProgressbar = /*@__PURE__*/ (() => {\n    /**\n     * A directive that provides feedback on the progress of a workflow or an action.\n     */\n    let NgbProgressbar = class NgbProgressbar {\n        constructor(config) {\n            /**\n             * The current value for the progress bar.\n             *\n             * Should be in the `[0, max]` range.\n             */\n            this.value = 0;\n            this.max = config.max;\n            this.animated = config.animated;\n            this.striped = config.striped;\n            this.textType = config.textType;\n            this.type = config.type;\n            this.showValue = config.showValue;\n            this.height = config.height;\n        }\n        /**\n         * The maximal value to be displayed in the progress bar.\n         *\n         * Should be a positive number. Will default to 100 otherwise.\n         */\n        set max(max) {\n            this._max = !isNumber(max) || max <= 0 ? 100 : max;\n        }\n        get max() { return this._max; }\n        getValue() { return getValueInRange(this.value, this.max); }\n        getPercentValue() { return 100 * this.getValue() / this.max; }\n    };\n    NgbProgressbar.ɵfac = function NgbProgressbar_Factory(t) { return new (t || NgbProgressbar)(core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbProgressbarConfig)); };\n    NgbProgressbar.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbProgressbar, selectors: [[\"ngb-progressbar\"]], inputs: { value: \"value\", max: \"max\", animated: \"animated\", striped: \"striped\", textType: \"textType\", type: \"type\", showValue: \"showValue\", height: \"height\" }, ngContentSelectors: _c3, decls: 4, vars: 13, consts: function () {\n            let i18n_52;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_progressbar_value$$FESM2015_NG_BOOTSTRAP_JS__53 = goog.getMsg(\"{$interpolation}\", { \"interpolation\": \"\\uFFFD0\\uFFFD\" });\n                i18n_52 = MSG_EXTERNAL_ngb_progressbar_value$$FESM2015_NG_BOOTSTRAP_JS__53;\n            }\n            else {\n                i18n_52 = $localize `:@@ngb.progressbar.value␟f8e9a947b9db4252c0e9905765338712f2fd032f␟3720830768741091151:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n            }\n            return [[1, \"progress\"], [\"role\", \"progressbar\", \"aria-valuemin\", \"0\"], [4, \"ngIf\"], i18n_52];\n        }, template: function NgbProgressbar_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"jc\" /* ɵɵprojectionDef */]();\n                core[\"Sb\" /* ɵɵelementStart */](0, \"div\", 0);\n                core[\"Sb\" /* ɵɵelementStart */](1, \"div\", 1);\n                core[\"yc\" /* ɵɵtemplate */](2, NgbProgressbar_span_2_Template, 3, 3, \"span\", 2);\n                core[\"ic\" /* ɵɵprojection */](3);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n                core[\"Rb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"xc\" /* ɵɵstyleProp */](\"height\", ctx.height);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"Eb\" /* ɵɵclassMapInterpolate4 */](\"progress-bar\", ctx.type ? \" bg-\" + ctx.type : \"\", \"\", ctx.textType ? \" text-\" + ctx.textType : \"\", \"\\n      \", ctx.animated ? \" progress-bar-animated\" : \"\", \"\", ctx.striped ? \" progress-bar-striped\" : \"\", \"\");\n                core[\"xc\" /* ɵɵstyleProp */](\"width\", ctx.getPercentValue(), \"%\");\n                core[\"Bb\" /* ɵɵattribute */](\"aria-valuenow\", ctx.getValue())(\"aria-valuemax\", ctx.max);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.showValue);\n            }\n        }, directives: [common[\"m\" /* NgIf */]], pipes: [common[\"p\" /* PercentPipe */]], encapsulation: 2, changeDetection: 0 });\n    return NgbProgressbar;\n})();\nlet ng_bootstrap_NgbProgressbarModule = /*@__PURE__*/ (() => {\n    let NgbProgressbarModule = class NgbProgressbarModule {\n    };\n    NgbProgressbarModule.ɵfac = function NgbProgressbarModule_Factory(t) { return new (t || NgbProgressbarModule)(); };\n    NgbProgressbarModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbProgressbarModule });\n    NgbProgressbarModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({ imports: [[common[\"b\" /* CommonModule */]]] });\n    return NgbProgressbarModule;\n})();\nlet ng_bootstrap_NgbRatingConfig = /*@__PURE__*/ (() => {\n    /**\n     * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n     *\n     * You can inject this service, typically in your root component, and customize the values of its properties in\n     * order to provide default values for all the ratings used in the application.\n     */\n    let NgbRatingConfig = class NgbRatingConfig {\n        constructor() {\n            this.max = 10;\n            this.readonly = false;\n            this.resettable = false;\n        }\n    };\n    NgbRatingConfig.ɵfac = function NgbRatingConfig_Factory(t) { return new (t || NgbRatingConfig)(); };\n    NgbRatingConfig.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbRatingConfig_Factory() { return new NgbRatingConfig(); }, token: NgbRatingConfig, providedIn: \"root\" });\n    return NgbRatingConfig;\n})();\nconst NGB_RATING_VALUE_ACCESSOR = {\n    provide: fesm2015_forms[\"i\" /* NG_VALUE_ACCESSOR */],\n    useExisting: Object(core[\"V\" /* forwardRef */])(() => ng_bootstrap_NgbRating),\n    multi: true\n};\nlet ng_bootstrap_NgbRating = /*@__PURE__*/ (() => {\n    /**\n     * A directive that helps visualising and interacting with a star rating bar.\n     */\n    let NgbRating = class NgbRating {\n        constructor(config, _changeDetectorRef) {\n            this._changeDetectorRef = _changeDetectorRef;\n            this.contexts = [];\n            this.disabled = false;\n            /**\n             * An event emitted when the user is hovering over a given rating.\n             *\n             * Event payload equals to the rating being hovered over.\n             */\n            this.hover = new core[\"o\" /* EventEmitter */]();\n            /**\n             * An event emitted when the user stops hovering over a given rating.\n             *\n             * Event payload equals to the rating of the last item being hovered over.\n             */\n            this.leave = new core[\"o\" /* EventEmitter */]();\n            /**\n             * An event emitted when the user selects a new rating.\n             *\n             * Event payload equals to the newly selected rating.\n             */\n            this.rateChange = new core[\"o\" /* EventEmitter */](true);\n            this.onChange = (_) => { };\n            this.onTouched = () => { };\n            this.max = config.max;\n            this.readonly = config.readonly;\n        }\n        ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n        enter(value) {\n            if (!this.readonly && !this.disabled) {\n                this._updateState(value);\n            }\n            this.hover.emit(value);\n        }\n        handleBlur() { this.onTouched(); }\n        handleClick(value) {\n            if (!this.readonly && !this.disabled) {\n                this.update(this.resettable && this.rate === value ? 0 : value);\n            }\n        }\n        handleKeyDown(event) {\n            // tslint:disable-next-line:deprecation\n            switch (event.which) {\n                case Key.ArrowDown:\n                case Key.ArrowLeft:\n                    this.update(this.rate - 1);\n                    break;\n                case Key.ArrowUp:\n                case Key.ArrowRight:\n                    this.update(this.rate + 1);\n                    break;\n                case Key.Home:\n                    this.update(0);\n                    break;\n                case Key.End:\n                    this.update(this.max);\n                    break;\n                default:\n                    return;\n            }\n            // note 'return' in default case\n            event.preventDefault();\n        }\n        ngOnChanges(changes) {\n            if (changes['rate']) {\n                this.update(this.rate);\n            }\n        }\n        ngOnInit() {\n            this.contexts = Array.from({ length: this.max }, (v, k) => ({ fill: 0, index: k }));\n            this._updateState(this.rate);\n        }\n        registerOnChange(fn) { this.onChange = fn; }\n        registerOnTouched(fn) { this.onTouched = fn; }\n        reset() {\n            this.leave.emit(this.nextRate);\n            this._updateState(this.rate);\n        }\n        setDisabledState(isDisabled) { this.disabled = isDisabled; }\n        update(value, internalChange = true) {\n            const newRate = getValueInRange(value, this.max, 0);\n            if (!this.readonly && !this.disabled && this.rate !== newRate) {\n                this.rate = newRate;\n                this.rateChange.emit(this.rate);\n            }\n            if (internalChange) {\n                this.onChange(this.rate);\n                this.onTouched();\n            }\n            this._updateState(this.rate);\n        }\n        writeValue(value) {\n            this.update(value, false);\n            this._changeDetectorRef.markForCheck();\n        }\n        _getFillValue(index) {\n            const diff = this.nextRate - index;\n            if (diff >= 1) {\n                return 100;\n            }\n            if (diff < 1 && diff > 0) {\n                return parseInt((diff * 100).toFixed(2), 10);\n            }\n            return 0;\n        }\n        _updateState(nextValue) {\n            this.nextRate = nextValue;\n            this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n        }\n    };\n    NgbRating.ɵfac = function NgbRating_Factory(t) { return new (t || NgbRating)(core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbRatingConfig), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"i\" /* ChangeDetectorRef */])); };\n    NgbRating.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbRating, selectors: [[\"ngb-rating\"]], contentQueries: function NgbRating_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, core[\"N\" /* TemplateRef */], 1);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.starTemplateFromContent = _t.first);\n            }\n        }, hostAttrs: [\"role\", \"slider\", \"aria-valuemin\", \"0\", 1, \"d-inline-flex\"], hostVars: 5, hostBindings: function NgbRating_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"cc\" /* ɵɵlistener */](\"blur\", function NgbRating_blur_HostBindingHandler() { return ctx.handleBlur(); })(\"keydown\", function NgbRating_keydown_HostBindingHandler($event) { return ctx.handleKeyDown($event); })(\"mouseleave\", function NgbRating_mouseleave_HostBindingHandler() { return ctx.reset(); });\n            }\n            if (rf & 2) {\n                core[\"Vb\" /* ɵɵhostProperty */](\"tabindex\", ctx.disabled ? -1 : 0);\n                core[\"Bb\" /* ɵɵattribute */](\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.nextRate)(\"aria-valuetext\", ctx.ariaValueText())(\"aria-disabled\", ctx.readonly ? true : null);\n            }\n        }, inputs: { max: \"max\", readonly: \"readonly\", rate: \"rate\", resettable: \"resettable\", starTemplate: \"starTemplate\" }, outputs: { hover: \"hover\", leave: \"leave\", rateChange: \"rateChange\" }, features: [core[\"zb\" /* ɵɵProvidersFeature */]([NGB_RATING_VALUE_ACCESSOR]), core[\"yb\" /* ɵɵNgOnChangesFeature */]], decls: 3, vars: 1, consts: [[\"t\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"sr-only\"], [3, \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]], template: function NgbRating_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"yc\" /* ɵɵtemplate */](0, NgbRating_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, core[\"zc\" /* ɵɵtemplateRefExtractor */]);\n                core[\"yc\" /* ɵɵtemplate */](2, NgbRating_ng_template_2_Template, 4, 5, \"ng-template\", 1);\n            }\n            if (rf & 2) {\n                core[\"Ab\" /* ɵɵadvance */](2);\n                core[\"kc\" /* ɵɵproperty */](\"ngForOf\", ctx.contexts);\n            }\n        }, directives: [common[\"l\" /* NgForOf */], common[\"n\" /* NgTemplateOutlet */]], encapsulation: 2, changeDetection: 0 });\n    return NgbRating;\n})();\nlet ng_bootstrap_NgbRatingModule = /*@__PURE__*/ (() => {\n    let NgbRatingModule = class NgbRatingModule {\n    };\n    NgbRatingModule.ɵfac = function NgbRatingModule_Factory(t) { return new (t || NgbRatingModule)(); };\n    NgbRatingModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbRatingModule });\n    NgbRatingModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({ imports: [[common[\"b\" /* CommonModule */]]] });\n    return NgbRatingModule;\n})();\nlet ng_bootstrap_NgbTabsetConfig = /*@__PURE__*/ (() => {\n    /**\n     * A configuration service for the [`NgbTabset`](#/components/tabset/api#NgbTabset) component.\n     *\n     * You can inject this service, typically in your root component, and customize the values of its properties in\n     * order to provide default values for all the tabsets used in the application.\n     *\n     * @deprecated 6.0.0 Please use NgbNav instead\n     */\n    let NgbTabsetConfig = class NgbTabsetConfig {\n        constructor() {\n            this.justify = 'start';\n            this.orientation = 'horizontal';\n            this.type = 'tabs';\n        }\n    };\n    NgbTabsetConfig.ɵfac = function NgbTabsetConfig_Factory(t) { return new (t || NgbTabsetConfig)(); };\n    NgbTabsetConfig.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbTabsetConfig_Factory() { return new NgbTabsetConfig(); }, token: NgbTabsetConfig, providedIn: \"root\" });\n    return NgbTabsetConfig;\n})();\nlet nextId$4 = 0;\nlet ng_bootstrap_NgbTabTitle = /*@__PURE__*/ (() => {\n    /**\n     * A directive to wrap tab titles that need to contain HTML markup or other directives.\n     *\n     * Alternatively you could use the `NgbTab.title` input for string titles.\n     *\n     * @deprecated 6.0.0 Please use NgbNav instead\n     */\n    let NgbTabTitle = class NgbTabTitle {\n        constructor(templateRef) {\n            this.templateRef = templateRef;\n        }\n    };\n    NgbTabTitle.ɵfac = function NgbTabTitle_Factory(t) { return new (t || NgbTabTitle)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    NgbTabTitle.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbTabTitle, selectors: [[\"ng-template\", \"ngbTabTitle\", \"\"]] });\n    return NgbTabTitle;\n})();\nlet ng_bootstrap_NgbTabContent = /*@__PURE__*/ (() => {\n    /**\n     * A directive to wrap content to be displayed in a tab.\n     *\n     * @deprecated 6.0.0 Please use NgbNav instead\n     */\n    let NgbTabContent = class NgbTabContent {\n        constructor(templateRef) {\n            this.templateRef = templateRef;\n        }\n    };\n    NgbTabContent.ɵfac = function NgbTabContent_Factory(t) { return new (t || NgbTabContent)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"N\" /* TemplateRef */])); };\n    NgbTabContent.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbTabContent, selectors: [[\"ng-template\", \"ngbTabContent\", \"\"]] });\n    return NgbTabContent;\n})();\nlet ng_bootstrap_NgbTab = /*@__PURE__*/ (() => {\n    /**\n     * A directive representing an individual tab.\n     *\n     * @deprecated 6.0.0 Please use NgbNav instead\n     */\n    let NgbTab = class NgbTab {\n        constructor() {\n            /**\n             * The tab identifier.\n             *\n             * Must be unique for the entire document for proper accessibility support.\n             */\n            this.id = `ngb-tab-${nextId$4++}`;\n            /**\n             * If `true`, the current tab is disabled and can't be toggled.\n             */\n            this.disabled = false;\n        }\n        ngAfterContentChecked() {\n            // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n            // only @ContentChildren allows us to specify the {descendants: false} option.\n            // Without {descendants: false} we are hitting bugs described in:\n            // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n            this.titleTpl = this.titleTpls.first;\n            this.contentTpl = this.contentTpls.first;\n        }\n    };\n    NgbTab.ɵfac = function NgbTab_Factory(t) { return new (t || NgbTab)(); };\n    NgbTab.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbTab, selectors: [[\"ngb-tab\"]], contentQueries: function NgbTab_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbTabTitle, 0);\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbTabContent, 0);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.titleTpls = _t);\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.contentTpls = _t);\n            }\n        }, inputs: { id: \"id\", disabled: \"disabled\", title: \"title\" } });\n    return NgbTab;\n})();\nlet ng_bootstrap_NgbTabset = /*@__PURE__*/ (() => {\n    /**\n     * A component that makes it easy to create tabbed interface.\n     *\n     * @deprecated 6.0.0 Please use NgbNav instead\n     */\n    let NgbTabset = class NgbTabset {\n        constructor(config) {\n            /**\n             * If `true`, non-visible tabs content will be removed from DOM. Otherwise it will just be hidden.\n             */\n            this.destroyOnHide = true;\n            /**\n             * A tab change event emitted right before the tab change happens.\n             *\n             * See [`NgbTabChangeEvent`](#/components/tabset/api#NgbTabChangeEvent) for payload details.\n             */\n            this.tabChange = new core[\"o\" /* EventEmitter */]();\n            this.type = config.type;\n            this.justify = config.justify;\n            this.orientation = config.orientation;\n        }\n        /**\n         * The horizontal alignment of the tabs with flexbox utilities.\n         */\n        set justify(className) {\n            if (className === 'fill' || className === 'justified') {\n                this.justifyClass = `nav-${className}`;\n            }\n            else {\n                this.justifyClass = `justify-content-${className}`;\n            }\n        }\n        /**\n         * Selects the tab with the given id and shows its associated content panel.\n         *\n         * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n         * hidden depending on the `destroyOnHide` value.\n         */\n        select(tabId) {\n            let selectedTab = this._getTabById(tabId);\n            if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n                let defaultPrevented = false;\n                this.tabChange.emit({ activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; } });\n                if (!defaultPrevented) {\n                    this.activeId = selectedTab.id;\n                }\n            }\n        }\n        ngAfterContentChecked() {\n            // auto-correct activeId that might have been set incorrectly as input\n            let activeTab = this._getTabById(this.activeId);\n            this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n        }\n        _getTabById(id) {\n            let tabsWithId = this.tabs.filter(tab => tab.id === id);\n            return tabsWithId.length ? tabsWithId[0] : null;\n        }\n    };\n    NgbTabset.ɵfac = function NgbTabset_Factory(t) { return new (t || NgbTabset)(core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbTabsetConfig)); };\n    NgbTabset.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbTabset, selectors: [[\"ngb-tabset\"]], contentQueries: function NgbTabset_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbTab, 0);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.tabs = _t);\n            }\n        }, inputs: { destroyOnHide: \"destroyOnHide\", type: \"type\", justify: \"justify\", orientation: \"orientation\", activeId: \"activeId\" }, outputs: { tabChange: \"tabChange\" }, exportAs: [\"ngbTabset\"], decls: 4, vars: 4, consts: [[\"role\", \"tablist\"], [\"class\", \"nav-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"tab-content\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"nav-item\"], [\"href\", \"\", \"role\", \"tab\", 1, \"nav-link\", 3, \"id\", \"click\"], [3, \"ngTemplateOutlet\"], [\"role\", \"tabpanel\", 3, \"class\", \"id\", 4, \"ngIf\"], [\"role\", \"tabpanel\", 3, \"id\"]], template: function NgbTabset_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Sb\" /* ɵɵelementStart */](0, \"ul\", 0);\n                core[\"yc\" /* ɵɵtemplate */](1, NgbTabset_li_1_Template, 4, 11, \"li\", 1);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n                core[\"Sb\" /* ɵɵelementStart */](2, \"div\", 2);\n                core[\"yc\" /* ɵɵtemplate */](3, NgbTabset_ng_template_3_Template, 1, 1, \"ng-template\", 3);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"Cb\" /* ɵɵclassMap */](\"nav nav-\" + ctx.type + (ctx.orientation == \"horizontal\" ? \" \" + ctx.justifyClass : \" flex-column\"));\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngForOf\", ctx.tabs);\n                core[\"Ab\" /* ɵɵadvance */](2);\n                core[\"kc\" /* ɵɵproperty */](\"ngForOf\", ctx.tabs);\n            }\n        }, directives: [common[\"l\" /* NgForOf */], common[\"n\" /* NgTemplateOutlet */], common[\"m\" /* NgIf */]], encapsulation: 2 });\n    return NgbTabset;\n})();\nconst NGB_TABSET_DIRECTIVES = [ng_bootstrap_NgbTabset, ng_bootstrap_NgbTab, ng_bootstrap_NgbTabContent, ng_bootstrap_NgbTabTitle];\nlet ng_bootstrap_NgbTabsetModule = /*@__PURE__*/ (() => {\n    /**\n     * @deprecated 6.0.0 Please use NgbNavModule instead\n     */\n    let NgbTabsetModule = class NgbTabsetModule {\n    };\n    NgbTabsetModule.ɵfac = function NgbTabsetModule_Factory(t) { return new (t || NgbTabsetModule)(); };\n    NgbTabsetModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbTabsetModule });\n    NgbTabsetModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({ imports: [[common[\"b\" /* CommonModule */]]] });\n    return NgbTabsetModule;\n})();\nclass NgbTime {\n    constructor(hour, minute, second) {\n        this.hour = toInteger(hour);\n        this.minute = toInteger(minute);\n        this.second = toInteger(second);\n    }\n    changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n    updateHour(hour) {\n        if (isNumber(hour)) {\n            this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n        }\n        else {\n            this.hour = NaN;\n        }\n    }\n    changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n    updateMinute(minute) {\n        if (isNumber(minute)) {\n            this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n            this.changeHour(Math.floor(minute / 60));\n        }\n        else {\n            this.minute = NaN;\n        }\n    }\n    changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n    updateSecond(second) {\n        if (isNumber(second)) {\n            this.second = second < 0 ? 60 + second % 60 : second % 60;\n            this.changeMinute(Math.floor(second / 60));\n        }\n        else {\n            this.second = NaN;\n        }\n    }\n    isValid(checkSecs = true) {\n        return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n    }\n    toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\nlet ng_bootstrap_NgbTimepickerConfig = /*@__PURE__*/ (() => {\n    /**\n     * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n     *\n     * You can inject this service, typically in your root component, and customize the values of its properties in\n     * order to provide default values for all the timepickers used in the application.\n     */\n    let NgbTimepickerConfig = class NgbTimepickerConfig {\n        constructor() {\n            this.meridian = false;\n            this.spinners = true;\n            this.seconds = false;\n            this.hourStep = 1;\n            this.minuteStep = 1;\n            this.secondStep = 1;\n            this.disabled = false;\n            this.readonlyInputs = false;\n            this.size = 'medium';\n        }\n    };\n    NgbTimepickerConfig.ɵfac = function NgbTimepickerConfig_Factory(t) { return new (t || NgbTimepickerConfig)(); };\n    NgbTimepickerConfig.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbTimepickerConfig_Factory() { return new NgbTimepickerConfig(); }, token: NgbTimepickerConfig, providedIn: \"root\" });\n    return NgbTimepickerConfig;\n})();\nfunction NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n    return new ng_bootstrap_NgbTimeStructAdapter();\n}\nlet ng_bootstrap_NgbTimeAdapter = /*@__PURE__*/ (() => {\n    /**\n     * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n     * any provided user time model `T`, ex. a string, a native date, etc.\n     *\n     * The adapter is used **only** for conversion when binding timepicker to a form control,\n     * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n     *\n     * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n     *\n     * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n     *\n     * @since 2.2.0\n     */\n    let NgbTimeAdapter = class NgbTimeAdapter {\n    };\n    NgbTimeAdapter.ɵfac = function NgbTimeAdapter_Factory(t) { return new (t || NgbTimeAdapter)(); };\n    NgbTimeAdapter.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY, token: NgbTimeAdapter, providedIn: \"root\" });\n    return NgbTimeAdapter;\n})();\nlet ng_bootstrap_NgbTimeStructAdapter = /*@__PURE__*/ (() => {\n    let NgbTimeStructAdapter = class NgbTimeStructAdapter extends ng_bootstrap_NgbTimeAdapter {\n        /**\n         * Converts a NgbTimeStruct value into NgbTimeStruct value\n         */\n        fromModel(time) {\n            return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n                { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null } :\n                null;\n        }\n        /**\n         * Converts a NgbTimeStruct value into NgbTimeStruct value\n         */\n        toModel(time) {\n            return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n                { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null } :\n                null;\n        }\n    };\n    NgbTimeStructAdapter.ɵfac = function NgbTimeStructAdapter_Factory(t) { return ɵNgbTimeStructAdapter_BaseFactory(t || NgbTimeStructAdapter); };\n    NgbTimeStructAdapter.ɵprov = core[\"Jb\" /* ɵɵdefineInjectable */]({ token: NgbTimeStructAdapter, factory: function (t) { return NgbTimeStructAdapter.ɵfac(t); } });\n    return NgbTimeStructAdapter;\n})();\nfunction NGB_TIMEPICKER_I18N_FACTORY(locale) {\n    return new ng_bootstrap_NgbTimepickerI18nDefault(locale);\n}\nlet ng_bootstrap_NgbTimepickerI18n = /*@__PURE__*/ (() => {\n    /**\n     * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n     * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n     * as explained in the Angular i18n guide.\n     */\n    let NgbTimepickerI18n = class NgbTimepickerI18n {\n    };\n    NgbTimepickerI18n.ɵfac = function NgbTimepickerI18n_Factory(t) { return new (t || NgbTimepickerI18n)(); };\n    NgbTimepickerI18n.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbTimepickerI18n_Factory() { return NGB_TIMEPICKER_I18N_FACTORY(Object(core[\"Zb\" /* ɵɵinject */])(core[\"x\" /* LOCALE_ID */])); }, token: NgbTimepickerI18n, providedIn: \"root\" });\n    return NgbTimepickerI18n;\n})();\nlet ng_bootstrap_NgbTimepickerI18nDefault = /*@__PURE__*/ (() => {\n    let NgbTimepickerI18nDefault = class NgbTimepickerI18nDefault extends ng_bootstrap_NgbTimepickerI18n {\n        constructor(locale) {\n            super();\n            this._periods = Object(common[\"v\" /* getLocaleDayPeriods */])(locale, common[\"e\" /* FormStyle */].Standalone, common[\"r\" /* TranslationWidth */].Narrow);\n        }\n        getMorningPeriod() { return this._periods[0]; }\n        getAfternoonPeriod() { return this._periods[1]; }\n    };\n    NgbTimepickerI18nDefault.ɵfac = function NgbTimepickerI18nDefault_Factory(t) { return new (t || NgbTimepickerI18nDefault)(core[\"Zb\" /* ɵɵinject */](core[\"x\" /* LOCALE_ID */])); };\n    NgbTimepickerI18nDefault.ɵprov = core[\"Jb\" /* ɵɵdefineInjectable */]({ token: NgbTimepickerI18nDefault, factory: function (t) { return NgbTimepickerI18nDefault.ɵfac(t); } });\n    NgbTimepickerI18nDefault = __decorate([__param(0, Object(core[\"r\" /* Inject */])(core[\"x\" /* LOCALE_ID */]))\n    ], NgbTimepickerI18nDefault);\n    return NgbTimepickerI18nDefault;\n})();\nconst FILTER_REGEX = /[^0-9]/g;\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n    provide: fesm2015_forms[\"i\" /* NG_VALUE_ACCESSOR */],\n    useExisting: Object(core[\"V\" /* forwardRef */])(() => ng_bootstrap_NgbTimepicker),\n    multi: true\n};\nlet ng_bootstrap_NgbTimepicker = /*@__PURE__*/ (() => {\n    /**\n     * A directive that helps with wth picking hours, minutes and seconds.\n     */\n    let NgbTimepicker = class NgbTimepicker {\n        constructor(_config, _ngbTimeAdapter, _cd, i18n) {\n            this._config = _config;\n            this._ngbTimeAdapter = _ngbTimeAdapter;\n            this._cd = _cd;\n            this.i18n = i18n;\n            this.onChange = (_) => { };\n            this.onTouched = () => { };\n            this.meridian = _config.meridian;\n            this.spinners = _config.spinners;\n            this.seconds = _config.seconds;\n            this.hourStep = _config.hourStep;\n            this.minuteStep = _config.minuteStep;\n            this.secondStep = _config.secondStep;\n            this.disabled = _config.disabled;\n            this.readonlyInputs = _config.readonlyInputs;\n            this.size = _config.size;\n        }\n        /**\n         * The number of hours to add/subtract when clicking hour spinners.\n         */\n        set hourStep(step) {\n            this._hourStep = isInteger(step) ? step : this._config.hourStep;\n        }\n        get hourStep() { return this._hourStep; }\n        /**\n         * The number of minutes to add/subtract when clicking minute spinners.\n         */\n        set minuteStep(step) {\n            this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n        }\n        get minuteStep() { return this._minuteStep; }\n        /**\n         * The number of seconds to add/subtract when clicking second spinners.\n         */\n        set secondStep(step) {\n            this._secondStep = isInteger(step) ? step : this._config.secondStep;\n        }\n        get secondStep() { return this._secondStep; }\n        writeValue(value) {\n            const structValue = this._ngbTimeAdapter.fromModel(value);\n            this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n            if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n                this.model.second = 0;\n            }\n            this._cd.markForCheck();\n        }\n        registerOnChange(fn) { this.onChange = fn; }\n        registerOnTouched(fn) { this.onTouched = fn; }\n        setDisabledState(isDisabled) { this.disabled = isDisabled; }\n        changeHour(step) {\n            this.model.changeHour(step);\n            this.propagateModelChange();\n        }\n        changeMinute(step) {\n            this.model.changeMinute(step);\n            this.propagateModelChange();\n        }\n        changeSecond(step) {\n            this.model.changeSecond(step);\n            this.propagateModelChange();\n        }\n        updateHour(newVal) {\n            const isPM = this.model.hour >= 12;\n            const enteredHour = toInteger(newVal);\n            if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n                this.model.updateHour(enteredHour + 12);\n            }\n            else {\n                this.model.updateHour(enteredHour);\n            }\n            this.propagateModelChange();\n        }\n        updateMinute(newVal) {\n            this.model.updateMinute(toInteger(newVal));\n            this.propagateModelChange();\n        }\n        updateSecond(newVal) {\n            this.model.updateSecond(toInteger(newVal));\n            this.propagateModelChange();\n        }\n        toggleMeridian() {\n            if (this.meridian) {\n                this.changeHour(12);\n            }\n        }\n        formatInput(input) { input.value = input.value.replace(FILTER_REGEX, ''); }\n        formatHour(value) {\n            if (isNumber(value)) {\n                if (this.meridian) {\n                    return padNumber(value % 12 === 0 ? 12 : value % 12);\n                }\n                else {\n                    return padNumber(value % 24);\n                }\n            }\n            else {\n                return padNumber(NaN);\n            }\n        }\n        formatMinSec(value) { return padNumber(isNumber(value) ? value : NaN); }\n        get isSmallSize() { return this.size === 'small'; }\n        get isLargeSize() { return this.size === 'large'; }\n        ngOnChanges(changes) {\n            if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n                this.model.second = 0;\n                this.propagateModelChange(false);\n            }\n        }\n        propagateModelChange(touched = true) {\n            if (touched) {\n                this.onTouched();\n            }\n            if (this.model.isValid(this.seconds)) {\n                this.onChange(this._ngbTimeAdapter.toModel({ hour: this.model.hour, minute: this.model.minute, second: this.model.second }));\n            }\n            else {\n                this.onChange(this._ngbTimeAdapter.toModel(null));\n            }\n        }\n    };\n    NgbTimepicker.ɵfac = function NgbTimepicker_Factory(t) { return new (t || NgbTimepicker)(core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbTimepickerConfig), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbTimeAdapter), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"i\" /* ChangeDetectorRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbTimepickerI18n)); };\n    NgbTimepicker.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbTimepicker, selectors: [[\"ngb-timepicker\"]], inputs: { meridian: \"meridian\", spinners: \"spinners\", seconds: \"seconds\", hourStep: \"hourStep\", minuteStep: \"minuteStep\", secondStep: \"secondStep\", readonlyInputs: \"readonlyInputs\", size: \"size\" }, features: [core[\"zb\" /* ɵɵProvidersFeature */]([NGB_TIMEPICKER_VALUE_ACCESSOR]), core[\"yb\" /* ɵɵNgOnChangesFeature */]], decls: 16, vars: 25, consts: function () {\n            let i18n_54;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_timepicker_HH$$FESM2015_NG_BOOTSTRAP_JS_55 = goog.getMsg(\"HH\");\n                i18n_54 = MSG_EXTERNAL_ngb_timepicker_HH$$FESM2015_NG_BOOTSTRAP_JS_55;\n            }\n            else {\n                i18n_54 = $localize `:@@ngb.timepicker.HH␟ce676ab1d6d98f85c836381cf100a4a91ef95a1f␟4043638465245303811:HH`;\n            }\n            let i18n_56;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_timepicker_hours$$FESM2015_NG_BOOTSTRAP_JS_57 = goog.getMsg(\"Hours\");\n                i18n_56 = MSG_EXTERNAL_ngb_timepicker_hours$$FESM2015_NG_BOOTSTRAP_JS_57;\n            }\n            else {\n                i18n_56 = $localize `:@@ngb.timepicker.hours␟3bbce5fef7e1151da052a4e529453edb340e3912␟8070396816726827304:Hours`;\n            }\n            let i18n_58;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_timepicker_MM$$FESM2015_NG_BOOTSTRAP_JS_59 = goog.getMsg(\"MM\");\n                i18n_58 = MSG_EXTERNAL_ngb_timepicker_MM$$FESM2015_NG_BOOTSTRAP_JS_59;\n            }\n            else {\n                i18n_58 = $localize `:@@ngb.timepicker.MM␟72c8edf6a50068a05bde70991e36b1e881f4ca54␟1647282246509919852:MM`;\n            }\n            let i18n_60;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_timepicker_minutes$$FESM2015_NG_BOOTSTRAP_JS_61 = goog.getMsg(\"Minutes\");\n                i18n_60 = MSG_EXTERNAL_ngb_timepicker_minutes$$FESM2015_NG_BOOTSTRAP_JS_61;\n            }\n            else {\n                i18n_60 = $localize `:@@ngb.timepicker.minutes␟41e62daa962947c0d23ded0981975d1bddf0bf38␟5531237363767747080:Minutes`;\n            }\n            let i18n_62;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_timepicker_increment_hours$$FESM2015_NG_BOOTSTRAP_JS__63 = goog.getMsg(\"Increment hours\");\n                i18n_62 = MSG_EXTERNAL_ngb_timepicker_increment_hours$$FESM2015_NG_BOOTSTRAP_JS__63;\n            }\n            else {\n                i18n_62 = $localize `:@@ngb.timepicker.increment-hours␟cb74bc1d625a6c1742f0d7d47306cf495780c218␟5939278348542933629:Increment hours`;\n            }\n            let i18n_64;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_timepicker_decrement_hours$$FESM2015_NG_BOOTSTRAP_JS__65 = goog.getMsg(\"Decrement hours\");\n                i18n_64 = MSG_EXTERNAL_ngb_timepicker_decrement_hours$$FESM2015_NG_BOOTSTRAP_JS__65;\n            }\n            else {\n                i18n_64 = $localize `:@@ngb.timepicker.decrement-hours␟147c7a19429da7d999e247d22e33fee370b1691b␟3651829882940481818:Decrement hours`;\n            }\n            let i18n_66;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_timepicker_increment_minutes$$FESM2015_NG_BOOTSTRAP_JS__67 = goog.getMsg(\"Increment minutes\");\n                i18n_66 = MSG_EXTERNAL_ngb_timepicker_increment_minutes$$FESM2015_NG_BOOTSTRAP_JS__67;\n            }\n            else {\n                i18n_66 = $localize `:@@ngb.timepicker.increment-minutes␟f5a4a3bc05e053f6732475d0e74875ec01c3a348␟180147720391025024:Increment minutes`;\n            }\n            let i18n_68;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_timepicker_decrement_minutes$$FESM2015_NG_BOOTSTRAP_JS__69 = goog.getMsg(\"Decrement minutes\");\n                i18n_68 = MSG_EXTERNAL_ngb_timepicker_decrement_minutes$$FESM2015_NG_BOOTSTRAP_JS__69;\n            }\n            else {\n                i18n_68 = $localize `:@@ngb.timepicker.decrement-minutes␟c1a6899e529c096da5b660385d4e77fe1f7ad271␟7447789825403243588:Decrement minutes`;\n            }\n            let i18n_70;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_timepicker_SS$$FESM2015_NG_BOOTSTRAP_JS__71 = goog.getMsg(\"SS\");\n                i18n_70 = MSG_EXTERNAL_ngb_timepicker_SS$$FESM2015_NG_BOOTSTRAP_JS__71;\n            }\n            else {\n                i18n_70 = $localize `:@@ngb.timepicker.SS␟ebe38d36a40a2383c5fefa9b4608ffbda08bd4a3␟3628127143071124194:SS`;\n            }\n            let i18n_72;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_timepicker_seconds$$FESM2015_NG_BOOTSTRAP_JS__73 = goog.getMsg(\"Seconds\");\n                i18n_72 = MSG_EXTERNAL_ngb_timepicker_seconds$$FESM2015_NG_BOOTSTRAP_JS__73;\n            }\n            else {\n                i18n_72 = $localize `:@@ngb.timepicker.seconds␟4f2ed9e71a7c981db3e50ae2fedb28aff2ec4e6c␟8874012390997067175:Seconds`;\n            }\n            let i18n_74;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_timepicker_increment_seconds$$FESM2015_NG_BOOTSTRAP_JS___75 = goog.getMsg(\"Increment seconds\");\n                i18n_74 = MSG_EXTERNAL_ngb_timepicker_increment_seconds$$FESM2015_NG_BOOTSTRAP_JS___75;\n            }\n            else {\n                i18n_74 = $localize `:@@ngb.timepicker.increment-seconds␟912322ecee7d659d04dcf494a70e22e49d334b26␟5364772110539092174:Increment seconds`;\n            }\n            let i18n_76;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_timepicker_decrement_seconds$$FESM2015_NG_BOOTSTRAP_JS___77 = goog.getMsg(\"Decrement seconds\");\n                i18n_76 = MSG_EXTERNAL_ngb_timepicker_decrement_seconds$$FESM2015_NG_BOOTSTRAP_JS___77;\n            }\n            else {\n                i18n_76 = $localize `:@@ngb.timepicker.decrement-seconds␟5db47ac104294243a70eb9124fbea9d0004ddf69␟753633511487974857:Decrement seconds`;\n            }\n            let i18n_78;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_timepicker_PM$$FESM2015_NG_BOOTSTRAP_JS___79 = goog.getMsg(\"{$interpolation}\", { \"interpolation\": \"\\uFFFD0\\uFFFD\" });\n                i18n_78 = MSG_EXTERNAL_ngb_timepicker_PM$$FESM2015_NG_BOOTSTRAP_JS___79;\n            }\n            else {\n                i18n_78 = $localize `:@@ngb.timepicker.PM␟8d6e691e10306c1b34c6b26805151aaea320ef7f␟3564199131264287502:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n            }\n            let i18n_80;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_timepicker_AM$$FESM2015_NG_BOOTSTRAP_JS___81 = goog.getMsg(\"{$interpolation}\", { \"interpolation\": \"\\uFFFD0\\uFFFD\" });\n                i18n_80 = MSG_EXTERNAL_ngb_timepicker_AM$$FESM2015_NG_BOOTSTRAP_JS___81;\n            }\n            else {\n                i18n_80 = $localize `:@@ngb.timepicker.AM␟69a1f176a93998876952adac57c3bc3863b6105e␟4592818992509942761:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n            }\n            return [[3, \"disabled\"], [1, \"ngb-tp\"], [1, \"ngb-tp-input-container\", \"ngb-tp-hour\"], [\"tabindex\", \"-1\", \"type\", \"button\", \"class\", \"btn btn-link\", 3, \"btn-sm\", \"btn-lg\", \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_54, \"aria-label\", i18n_56, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], [1, \"ngb-tp-spacer\"], [1, \"ngb-tp-input-container\", \"ngb-tp-minute\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_58, \"aria-label\", i18n_60, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], [\"class\", \"ngb-tp-spacer\", 4, \"ngIf\"], [\"class\", \"ngb-tp-input-container ngb-tp-second\", 4, \"ngIf\"], [\"class\", \"ngb-tp-meridian\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"type\", \"button\", 1, \"btn\", \"btn-link\", 3, \"disabled\", \"click\"], [1, \"chevron\", \"ngb-tp-chevron\"], [1, \"sr-only\"], i18n_62, [1, \"chevron\", \"ngb-tp-chevron\", \"bottom\"], i18n_64, i18n_66, i18n_68, [1, \"ngb-tp-input-container\", \"ngb-tp-second\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_70, \"aria-label\", i18n_72, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], i18n_74, i18n_76, [1, \"ngb-tp-meridian\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 3, \"disabled\", \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"am\", \"\"], i18n_78, i18n_80];\n        }, template: function NgbTimepicker_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Sb\" /* ɵɵelementStart */](0, \"fieldset\", 0);\n                core[\"Sb\" /* ɵɵelementStart */](1, \"div\", 1);\n                core[\"Sb\" /* ɵɵelementStart */](2, \"div\", 2);\n                core[\"yc\" /* ɵɵtemplate */](3, NgbTimepicker_button_3_Template, 4, 7, \"button\", 3);\n                core[\"Sb\" /* ɵɵelementStart */](4, \"input\", 4);\n                core[\"cc\" /* ɵɵlistener */](\"change\", function NgbTimepicker_Template_input_change_4_listener($event) { return ctx.updateHour($event.target.value); })(\"input\", function NgbTimepicker_Template_input_input_4_listener($event) { return ctx.formatInput($event.target); })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_4_listener($event) { ctx.changeHour(ctx.hourStep); return $event.preventDefault(); })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_4_listener($event) { ctx.changeHour(-ctx.hourStep); return $event.preventDefault(); });\n                core[\"Rb\" /* ɵɵelementEnd */]();\n                core[\"yc\" /* ɵɵtemplate */](5, NgbTimepicker_button_5_Template, 4, 7, \"button\", 3);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n                core[\"Sb\" /* ɵɵelementStart */](6, \"div\", 5);\n                core[\"Ac\" /* ɵɵtext */](7, \":\");\n                core[\"Rb\" /* ɵɵelementEnd */]();\n                core[\"Sb\" /* ɵɵelementStart */](8, \"div\", 6);\n                core[\"yc\" /* ɵɵtemplate */](9, NgbTimepicker_button_9_Template, 4, 7, \"button\", 3);\n                core[\"Sb\" /* ɵɵelementStart */](10, \"input\", 7);\n                core[\"cc\" /* ɵɵlistener */](\"change\", function NgbTimepicker_Template_input_change_10_listener($event) { return ctx.updateMinute($event.target.value); })(\"input\", function NgbTimepicker_Template_input_input_10_listener($event) { return ctx.formatInput($event.target); })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_10_listener($event) { ctx.changeMinute(ctx.minuteStep); return $event.preventDefault(); })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_10_listener($event) { ctx.changeMinute(-ctx.minuteStep); return $event.preventDefault(); });\n                core[\"Rb\" /* ɵɵelementEnd */]();\n                core[\"yc\" /* ɵɵtemplate */](11, NgbTimepicker_button_11_Template, 4, 7, \"button\", 3);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n                core[\"yc\" /* ɵɵtemplate */](12, NgbTimepicker_div_12_Template, 2, 0, \"div\", 8);\n                core[\"yc\" /* ɵɵtemplate */](13, NgbTimepicker_div_13_Template, 4, 9, \"div\", 9);\n                core[\"yc\" /* ɵɵtemplate */](14, NgbTimepicker_div_14_Template, 1, 0, \"div\", 8);\n                core[\"yc\" /* ɵɵtemplate */](15, NgbTimepicker_div_15_Template, 5, 9, \"div\", 10);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n                core[\"Rb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"Fb\" /* ɵɵclassProp */](\"disabled\", ctx.disabled);\n                core[\"kc\" /* ɵɵproperty */](\"disabled\", ctx.disabled);\n                core[\"Ab\" /* ɵɵadvance */](3);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.spinners);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"Fb\" /* ɵɵclassProp */](\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n                core[\"kc\" /* ɵɵproperty */](\"value\", ctx.formatHour(ctx.model == null ? null : ctx.model.hour))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.spinners);\n                core[\"Ab\" /* ɵɵadvance */](4);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.spinners);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"Fb\" /* ɵɵclassProp */](\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n                core[\"kc\" /* ɵɵproperty */](\"value\", ctx.formatMinSec(ctx.model == null ? null : ctx.model.minute))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.spinners);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.seconds);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.seconds);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.meridian);\n                core[\"Ab\" /* ɵɵadvance */](1);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.meridian);\n            }\n        }, directives: [common[\"m\" /* NgIf */]], styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron::before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;-webkit-transform:rotate(135deg);transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\"], encapsulation: 2 });\n    return NgbTimepicker;\n})();\nlet ng_bootstrap_NgbTimepickerModule = /*@__PURE__*/ (() => {\n    let NgbTimepickerModule = class NgbTimepickerModule {\n    };\n    NgbTimepickerModule.ɵfac = function NgbTimepickerModule_Factory(t) { return new (t || NgbTimepickerModule)(); };\n    NgbTimepickerModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbTimepickerModule });\n    NgbTimepickerModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({ imports: [[common[\"b\" /* CommonModule */]]] });\n    return NgbTimepickerModule;\n})();\nlet ng_bootstrap_NgbToastConfig = /*@__PURE__*/ (() => {\n    /**\n     * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n     * and customize the values of its properties in order to provide default values for all the toasts used in the\n     * application.\n     *\n     * @since 5.0.0\n     */\n    let NgbToastConfig = class NgbToastConfig {\n        constructor() {\n            this.autohide = true;\n            this.delay = 500;\n            this.ariaLive = 'polite';\n        }\n    };\n    NgbToastConfig.ɵfac = function NgbToastConfig_Factory(t) { return new (t || NgbToastConfig)(); };\n    NgbToastConfig.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbToastConfig_Factory() { return new NgbToastConfig(); }, token: NgbToastConfig, providedIn: \"root\" });\n    return NgbToastConfig;\n})();\nlet ng_bootstrap_NgbToastHeader = /*@__PURE__*/ (() => {\n    /**\n     * This directive allows the usage of HTML markup or other directives\n     * inside of the toast's header.\n     *\n     * @since 5.0.0\n     */\n    let NgbToastHeader = class NgbToastHeader {\n    };\n    NgbToastHeader.ɵfac = function NgbToastHeader_Factory(t) { return new (t || NgbToastHeader)(); };\n    NgbToastHeader.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbToastHeader, selectors: [[\"\", \"ngbToastHeader\", \"\"]] });\n    return NgbToastHeader;\n})();\nlet ng_bootstrap_NgbToast = /*@__PURE__*/ (() => {\n    /**\n     * Toasts provide feedback messages as notifications to the user.\n     * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n     *\n     * @since 5.0.0\n     */\n    let NgbToast = class NgbToast {\n        constructor(ariaLive, config) {\n            this.ariaLive = ariaLive;\n            /**\n             * A template like `<ng-template ngbToastHeader></ng-template>` can be\n             * used in the projected content to allow markup usage.\n             */\n            this.contentHeaderTpl = null;\n            /**\n             * An event fired immediately when toast's `hide()` method has been called.\n             * It can only occur in 2 different scenarios:\n             * - `autohide` timeout fires\n             * - user clicks on a closing cross (&times)\n             *\n             * Additionally this output is purely informative. The toast won't disappear. It's up to the user to take care of\n             * that.\n             */\n            this.hideOutput = new core[\"o\" /* EventEmitter */]();\n            if (this.ariaLive == null) {\n                this.ariaLive = config.ariaLive;\n            }\n            this.delay = config.delay;\n            this.autohide = config.autohide;\n        }\n        ngAfterContentInit() { this._init(); }\n        ngOnChanges(changes) {\n            if ('autohide' in changes) {\n                this._clearTimeout();\n                this._init();\n            }\n        }\n        hide() {\n            this._clearTimeout();\n            this.hideOutput.emit();\n        }\n        _init() {\n            if (this.autohide && !this._timeoutID) {\n                this._timeoutID = setTimeout(() => this.hide(), this.delay);\n            }\n        }\n        _clearTimeout() {\n            if (this._timeoutID) {\n                clearTimeout(this._timeoutID);\n                this._timeoutID = null;\n            }\n        }\n    };\n    NgbToast.ɵfac = function NgbToast_Factory(t) { return new (t || NgbToast)(core[\"ac\" /* ɵɵinjectAttribute */]('aria-live'), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbToastConfig)); };\n    NgbToast.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbToast, selectors: [[\"ngb-toast\"]], contentQueries: function NgbToast_ContentQueries(rf, ctx, dirIndex) {\n            if (rf & 1) {\n                core[\"Gb\" /* ɵɵcontentQuery */](dirIndex, ng_bootstrap_NgbToastHeader, 3, core[\"N\" /* TemplateRef */]);\n            }\n            if (rf & 2) {\n                let _t;\n                core[\"rc\" /* ɵɵqueryRefresh */](_t = core[\"dc\" /* ɵɵloadQuery */]()) && (ctx.contentHeaderTpl = _t.first);\n            }\n        }, hostAttrs: [\"role\", \"alert\", \"aria-atomic\", \"true\"], hostVars: 5, hostBindings: function NgbToast_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Bb\" /* ɵɵattribute */](\"aria-live\", ctx.ariaLive);\n                core[\"Fb\" /* ɵɵclassProp */](\"toast\", true)(\"show\", true);\n            }\n        }, inputs: { delay: \"delay\", autohide: \"autohide\", header: \"header\" }, outputs: { hideOutput: \"hide\" }, exportAs: [\"ngbToast\"], features: [core[\"yb\" /* ɵɵNgOnChangesFeature */]], ngContentSelectors: _c3, decls: 5, vars: 1, consts: function () {\n            let i18n_82;\n            if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n                const MSG_EXTERNAL_ngb_toast_close_aria$$FESM2015_NG_BOOTSTRAP_JS__83 = goog.getMsg(\"Close\");\n                i18n_82 = MSG_EXTERNAL_ngb_toast_close_aria$$FESM2015_NG_BOOTSTRAP_JS__83;\n            }\n            else {\n                i18n_82 = $localize `:@@ngb.toast.close-aria␟f4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8␟7819314041543176992:Close`;\n            }\n            return [[\"headerTpl\", \"\"], [3, \"ngIf\"], [1, \"toast-body\"], [1, \"mr-auto\"], [1, \"toast-header\"], [3, \"ngTemplateOutlet\"], [\"type\", \"button\", \"aria-label\", i18n_82, 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"]];\n        }, template: function NgbToast_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"jc\" /* ɵɵprojectionDef */]();\n                core[\"yc\" /* ɵɵtemplate */](0, NgbToast_ng_template_0_Template, 2, 1, \"ng-template\", null, 0, core[\"zc\" /* ɵɵtemplateRefExtractor */]);\n                core[\"yc\" /* ɵɵtemplate */](2, NgbToast_ng_template_2_Template, 5, 1, \"ng-template\", 1);\n                core[\"Sb\" /* ɵɵelementStart */](3, \"div\", 2);\n                core[\"ic\" /* ɵɵprojection */](4);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"Ab\" /* ɵɵadvance */](2);\n                core[\"kc\" /* ɵɵproperty */](\"ngIf\", ctx.contentHeaderTpl || ctx.header);\n            }\n        }, directives: [common[\"m\" /* NgIf */], common[\"n\" /* NgTemplateOutlet */]], styles: [\".ngb-toasts{position:fixed;top:0;right:0;margin:.5em;z-index:1200}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\"], encapsulation: 2 });\n    NgbToast = __decorate([__param(0, Object(core[\"h\" /* Attribute */])('aria-live'))\n    ], NgbToast);\n    return NgbToast;\n})();\nlet ng_bootstrap_NgbToastModule = /*@__PURE__*/ (() => {\n    let NgbToastModule = class NgbToastModule {\n    };\n    NgbToastModule.ɵfac = function NgbToastModule_Factory(t) { return new (t || NgbToastModule)(); };\n    NgbToastModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbToastModule });\n    NgbToastModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({ imports: [[common[\"b\" /* CommonModule */]]] });\n    return NgbToastModule;\n})();\nlet ng_bootstrap_NgbTooltipConfig = /*@__PURE__*/ (() => {\n    /**\n     * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n     *\n     * You can inject this service, typically in your root component, and customize the values of its properties in\n     * order to provide default values for all the tooltips used in the application.\n     */\n    let NgbTooltipConfig = class NgbTooltipConfig {\n        constructor() {\n            this.autoClose = true;\n            this.placement = 'auto';\n            this.triggers = 'hover focus';\n            this.disableTooltip = false;\n            this.openDelay = 0;\n            this.closeDelay = 0;\n        }\n    };\n    NgbTooltipConfig.ɵfac = function NgbTooltipConfig_Factory(t) { return new (t || NgbTooltipConfig)(); };\n    NgbTooltipConfig.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbTooltipConfig_Factory() { return new NgbTooltipConfig(); }, token: NgbTooltipConfig, providedIn: \"root\" });\n    return NgbTooltipConfig;\n})();\nlet nextId$5 = 0;\nlet ng_bootstrap_NgbTooltipWindow = /*@__PURE__*/ (() => {\n    let NgbTooltipWindow = class NgbTooltipWindow {\n    };\n    NgbTooltipWindow.ɵfac = function NgbTooltipWindow_Factory(t) { return new (t || NgbTooltipWindow)(); };\n    NgbTooltipWindow.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbTooltipWindow, selectors: [[\"ngb-tooltip-window\"]], hostAttrs: [\"role\", \"tooltip\"], hostVars: 3, hostBindings: function NgbTooltipWindow_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"Vb\" /* ɵɵhostProperty */](\"id\", ctx.id);\n                core[\"Cb\" /* ɵɵclassMap */](\"tooltip show\" + (ctx.tooltipClass ? \" \" + ctx.tooltipClass : \"\"));\n            }\n        }, inputs: { id: \"id\", tooltipClass: \"tooltipClass\" }, ngContentSelectors: _c3, decls: 3, vars: 0, consts: [[1, \"arrow\"], [1, \"tooltip-inner\"]], template: function NgbTooltipWindow_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"jc\" /* ɵɵprojectionDef */]();\n                core[\"Ob\" /* ɵɵelement */](0, \"div\", 0);\n                core[\"Sb\" /* ɵɵelementStart */](1, \"div\", 1);\n                core[\"ic\" /* ɵɵprojection */](2);\n                core[\"Rb\" /* ɵɵelementEnd */]();\n            }\n        }, styles: [\"ngb-tooltip-window.bs-tooltip-bottom .arrow,ngb-tooltip-window.bs-tooltip-top .arrow{left:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-bottom-left .arrow,ngb-tooltip-window.bs-tooltip-top-left .arrow{left:1em}ngb-tooltip-window.bs-tooltip-bottom-right .arrow,ngb-tooltip-window.bs-tooltip-top-right .arrow{left:auto;right:.8rem}ngb-tooltip-window.bs-tooltip-left .arrow,ngb-tooltip-window.bs-tooltip-right .arrow{top:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-left-top .arrow,ngb-tooltip-window.bs-tooltip-right-top .arrow{top:.4rem}ngb-tooltip-window.bs-tooltip-left-bottom .arrow,ngb-tooltip-window.bs-tooltip-right-bottom .arrow{top:auto;bottom:.4rem}\"], encapsulation: 2, changeDetection: 0 });\n    return NgbTooltipWindow;\n})();\nlet ng_bootstrap_NgbTooltip = /*@__PURE__*/ (() => {\n    /**\n     * A lightweight and extensible directive for fancy tooltip creation.\n     */\n    let NgbTooltip = class NgbTooltip {\n        constructor(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n            this._elementRef = _elementRef;\n            this._renderer = _renderer;\n            this._ngZone = _ngZone;\n            this._document = _document;\n            this._changeDetector = _changeDetector;\n            /**\n             * An event emitted when the tooltip is shown. Contains no payload.\n             */\n            this.shown = new core[\"o\" /* EventEmitter */]();\n            /**\n             * An event emitted when the popover is hidden. Contains no payload.\n             */\n            this.hidden = new core[\"o\" /* EventEmitter */]();\n            this._ngbTooltipWindowId = `ngb-tooltip-${nextId$5++}`;\n            this._windowRef = null;\n            this.autoClose = config.autoClose;\n            this.placement = config.placement;\n            this.triggers = config.triggers;\n            this.container = config.container;\n            this.disableTooltip = config.disableTooltip;\n            this.tooltipClass = config.tooltipClass;\n            this.openDelay = config.openDelay;\n            this.closeDelay = config.closeDelay;\n            this._popupService = new ng_bootstrap_PopupService(ng_bootstrap_NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n            this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n                if (this._windowRef) {\n                    positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body', 'bs-tooltip');\n                }\n            });\n        }\n        /**\n         * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n         *\n         * If the content if falsy, the tooltip won't open.\n         */\n        set ngbTooltip(value) {\n            this._ngbTooltip = value;\n            if (!value && this._windowRef) {\n                this.close();\n            }\n        }\n        get ngbTooltip() { return this._ngbTooltip; }\n        /**\n         * Opens the tooltip.\n         *\n         * This is considered to be a \"manual\" triggering.\n         * The `context` is an optional value to be injected into the tooltip template when it is created.\n         */\n        open(context) {\n            if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n                this._windowRef = this._popupService.open(this._ngbTooltip, context);\n                this._windowRef.instance.tooltipClass = this.tooltipClass;\n                this._windowRef.instance.id = this._ngbTooltipWindowId;\n                this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n                if (this.container === 'body') {\n                    this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n                }\n                // We need to detect changes, because we don't know where .open() might be called from.\n                // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n                // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n                this._windowRef.changeDetectorRef.detectChanges();\n                // We need to mark for check, because tooltip won't work inside the OnPush component.\n                // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n                // inside the template of an OnPush component and we change the tooltip from\n                // open -> closed, the expression in question won't be updated unless we explicitly\n                // mark the parent component to be checked.\n                this._windowRef.changeDetectorRef.markForCheck();\n                ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [this._windowRef.location.nativeElement]);\n                this.shown.emit();\n            }\n        }\n        /**\n         * Closes the tooltip.\n         *\n         * This is considered to be a \"manual\" triggering of the tooltip.\n         */\n        close() {\n            if (this._windowRef != null) {\n                this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n                this._popupService.close();\n                this._windowRef = null;\n                this.hidden.emit();\n                this._changeDetector.markForCheck();\n            }\n        }\n        /**\n         * Toggles the tooltip.\n         *\n         * This is considered to be a \"manual\" triggering of the tooltip.\n         */\n        toggle() {\n            if (this._windowRef) {\n                this.close();\n            }\n            else {\n                this.open();\n            }\n        }\n        /**\n         * Returns `true`, if the popover is currently shown.\n         */\n        isOpen() { return this._windowRef != null; }\n        ngOnInit() {\n            this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n        }\n        ngOnChanges({ tooltipClass }) {\n            if (tooltipClass && this.isOpen()) {\n                this._windowRef.instance.tooltipClass = tooltipClass.currentValue;\n            }\n        }\n        ngOnDestroy() {\n            this.close();\n            // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n            // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n            if (this._unregisterListenersFn) {\n                this._unregisterListenersFn();\n            }\n            this._zoneSubscription.unsubscribe();\n        }\n    };\n    NgbTooltip.ɵfac = function NgbTooltip_Factory(t) { return new (t || NgbTooltip)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"G\" /* Renderer2 */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"u\" /* Injector */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"k\" /* ComponentFactoryResolver */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"R\" /* ViewContainerRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbTooltipConfig), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"C\" /* NgZone */]), core[\"Nb\" /* ɵɵdirectiveInject */](common[\"c\" /* DOCUMENT */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"i\" /* ChangeDetectorRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"g\" /* ApplicationRef */])); };\n    NgbTooltip.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbTooltip, selectors: [[\"\", \"ngbTooltip\", \"\"]], inputs: { autoClose: \"autoClose\", placement: \"placement\", triggers: \"triggers\", container: \"container\", disableTooltip: \"disableTooltip\", tooltipClass: \"tooltipClass\", openDelay: \"openDelay\", closeDelay: \"closeDelay\", ngbTooltip: \"ngbTooltip\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, exportAs: [\"ngbTooltip\"], features: [core[\"yb\" /* ɵɵNgOnChangesFeature */]] });\n    NgbTooltip = __decorate([__param(7, Object(core[\"r\" /* Inject */])(common[\"c\" /* DOCUMENT */]))\n    ], NgbTooltip);\n    return NgbTooltip;\n})();\nlet ng_bootstrap_NgbTooltipModule = /*@__PURE__*/ (() => {\n    let NgbTooltipModule = class NgbTooltipModule {\n    };\n    NgbTooltipModule.ɵfac = function NgbTooltipModule_Factory(t) { return new (t || NgbTooltipModule)(); };\n    NgbTooltipModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbTooltipModule });\n    NgbTooltipModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({});\n    return NgbTooltipModule;\n})();\nlet ng_bootstrap_NgbHighlight = /*@__PURE__*/ (() => {\n    /**\n     * A component that helps with text highlighting.\n     *\n     * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n     * highlighting:\n     *\n     * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n     */\n    let NgbHighlight = class NgbHighlight {\n        constructor() {\n            /**\n             * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n             */\n            this.highlightClass = 'ngb-highlight';\n        }\n        ngOnChanges(changes) {\n            const result = ng_bootstrap_toString(this.result);\n            const terms = Array.isArray(this.term) ? this.term : [this.term];\n            const escapedTerms = terms.map(term => regExpEscape(ng_bootstrap_toString(term))).filter(term => term);\n            this.parts = escapedTerms.length ? result.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n        }\n    };\n    NgbHighlight.ɵfac = function NgbHighlight_Factory(t) { return new (t || NgbHighlight)(); };\n    NgbHighlight.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbHighlight, selectors: [[\"ngb-highlight\"]], inputs: { highlightClass: \"highlightClass\", result: \"result\", term: \"term\" }, features: [core[\"yb\" /* ɵɵNgOnChangesFeature */]], decls: 1, vars: 1, consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"class\", 4, \"ngIf\", \"ngIfElse\"], [\"even\", \"\"]], template: function NgbHighlight_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"yc\" /* ɵɵtemplate */](0, NgbHighlight_ng_template_0_Template, 3, 2, \"ng-template\", 0);\n            }\n            if (rf & 2) {\n                core[\"kc\" /* ɵɵproperty */](\"ngForOf\", ctx.parts);\n            }\n        }, directives: [common[\"l\" /* NgForOf */], common[\"m\" /* NgIf */]], styles: [\".ngb-highlight{font-weight:700}\"], encapsulation: 2, changeDetection: 0 });\n    return NgbHighlight;\n})();\nlet ng_bootstrap_NgbTypeaheadWindow = /*@__PURE__*/ (() => {\n    let NgbTypeaheadWindow = class NgbTypeaheadWindow {\n        constructor() {\n            this.activeIdx = 0;\n            /**\n             * Flag indicating if the first row should be active initially\n             */\n            this.focusFirst = true;\n            /**\n             * A function used to format a given result before display. This function should return a formatted string without any\n             * HTML markup\n             */\n            this.formatter = ng_bootstrap_toString;\n            /**\n             * Event raised when user selects a particular result row\n             */\n            this.selectEvent = new core[\"o\" /* EventEmitter */]();\n            this.activeChangeEvent = new core[\"o\" /* EventEmitter */]();\n        }\n        hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n        getActive() { return this.results[this.activeIdx]; }\n        markActive(activeIdx) {\n            this.activeIdx = activeIdx;\n            this._activeChanged();\n        }\n        next() {\n            if (this.activeIdx === this.results.length - 1) {\n                this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n            }\n            else {\n                this.activeIdx++;\n            }\n            this._activeChanged();\n        }\n        prev() {\n            if (this.activeIdx < 0) {\n                this.activeIdx = this.results.length - 1;\n            }\n            else if (this.activeIdx === 0) {\n                this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n            }\n            else {\n                this.activeIdx--;\n            }\n            this._activeChanged();\n        }\n        resetActive() {\n            this.activeIdx = this.focusFirst ? 0 : -1;\n            this._activeChanged();\n        }\n        select(item) { this.selectEvent.emit(item); }\n        ngOnInit() { this.resetActive(); }\n        _activeChanged() {\n            this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n        }\n    };\n    NgbTypeaheadWindow.ɵfac = function NgbTypeaheadWindow_Factory(t) { return new (t || NgbTypeaheadWindow)(); };\n    NgbTypeaheadWindow.ɵcmp = core[\"Hb\" /* ɵɵdefineComponent */]({ type: NgbTypeaheadWindow, selectors: [[\"ngb-typeahead-window\"]], hostAttrs: [\"role\", \"listbox\", 1, \"dropdown-menu\", \"show\"], hostVars: 1, hostBindings: function NgbTypeaheadWindow_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"cc\" /* ɵɵlistener */](\"mousedown\", function NgbTypeaheadWindow_mousedown_HostBindingHandler($event) { return $event.preventDefault(); });\n            }\n            if (rf & 2) {\n                core[\"Vb\" /* ɵɵhostProperty */](\"id\", ctx.id);\n            }\n        }, inputs: { focusFirst: \"focusFirst\", formatter: \"formatter\", id: \"id\", results: \"results\", term: \"term\", resultTemplate: \"resultTemplate\" }, outputs: { selectEvent: \"select\", activeChangeEvent: \"activeChange\" }, exportAs: [\"ngbTypeaheadWindow\"], decls: 3, vars: 1, consts: [[\"rt\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"result\", \"term\"], [\"type\", \"button\", \"role\", \"option\", 1, \"dropdown-item\", 3, \"id\", \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]], template: function NgbTypeaheadWindow_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"yc\" /* ɵɵtemplate */](0, NgbTypeaheadWindow_ng_template_0_Template, 1, 2, \"ng-template\", null, 0, core[\"zc\" /* ɵɵtemplateRefExtractor */]);\n                core[\"yc\" /* ɵɵtemplate */](2, NgbTypeaheadWindow_ng_template_2_Template, 2, 9, \"ng-template\", 1);\n            }\n            if (rf & 2) {\n                core[\"Ab\" /* ɵɵadvance */](2);\n                core[\"kc\" /* ɵɵproperty */](\"ngForOf\", ctx.results);\n            }\n        }, directives: [common[\"l\" /* NgForOf */], ng_bootstrap_NgbHighlight, common[\"n\" /* NgTemplateOutlet */]], encapsulation: 2 });\n    return NgbTypeaheadWindow;\n})();\nconst ARIA_LIVE_DELAY = new core[\"t\" /* InjectionToken */]('live announcer delay', { providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY });\nfunction ARIA_LIVE_DELAY_FACTORY() {\n    return 100;\n}\nfunction getLiveElement(document, lazyCreate = false) {\n    let element = document.body.querySelector('#ngb-live');\n    if (element == null && lazyCreate) {\n        element = document.createElement('div');\n        element.setAttribute('id', 'ngb-live');\n        element.setAttribute('aria-live', 'polite');\n        element.setAttribute('aria-atomic', 'true');\n        element.classList.add('sr-only');\n        document.body.appendChild(element);\n    }\n    return element;\n}\nlet ng_bootstrap_Live = /*@__PURE__*/ (() => {\n    let Live = class Live {\n        constructor(_document, _delay) {\n            this._document = _document;\n            this._delay = _delay;\n        }\n        ngOnDestroy() {\n            const element = getLiveElement(this._document);\n            if (element) {\n                // if exists, it will always be attached to the <body>\n                element.parentElement.removeChild(element);\n            }\n        }\n        say(message) {\n            const element = getLiveElement(this._document, true);\n            const delay = this._delay;\n            if (element != null) {\n                element.textContent = '';\n                const setText = () => element.textContent = message;\n                if (delay === null) {\n                    setText();\n                }\n                else {\n                    setTimeout(setText, delay);\n                }\n            }\n        }\n    };\n    Live.ɵfac = function Live_Factory(t) { return new (t || Live)(core[\"Zb\" /* ɵɵinject */](common[\"c\" /* DOCUMENT */]), core[\"Zb\" /* ɵɵinject */](ARIA_LIVE_DELAY)); };\n    Live.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function Live_Factory() { return new Live(Object(core[\"Zb\" /* ɵɵinject */])(common[\"c\" /* DOCUMENT */]), Object(core[\"Zb\" /* ɵɵinject */])(ARIA_LIVE_DELAY)); }, token: Live, providedIn: \"root\" });\n    Live = __decorate([__param(0, Object(core[\"r\" /* Inject */])(common[\"c\" /* DOCUMENT */])), __param(1, Object(core[\"r\" /* Inject */])(ARIA_LIVE_DELAY))\n    ], Live);\n    return Live;\n})();\nlet ng_bootstrap_NgbTypeaheadConfig = /*@__PURE__*/ (() => {\n    /**\n     * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n     *\n     * You can inject this service, typically in your root component, and customize the values of its properties in\n     * order to provide default values for all the typeaheads used in the application.\n     */\n    let NgbTypeaheadConfig = class NgbTypeaheadConfig {\n        constructor() {\n            this.editable = true;\n            this.focusFirst = true;\n            this.showHint = false;\n            this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n        }\n    };\n    NgbTypeaheadConfig.ɵfac = function NgbTypeaheadConfig_Factory(t) { return new (t || NgbTypeaheadConfig)(); };\n    NgbTypeaheadConfig.ɵprov = Object(core[\"Jb\" /* ɵɵdefineInjectable */])({ factory: function NgbTypeaheadConfig_Factory() { return new NgbTypeaheadConfig(); }, token: NgbTypeaheadConfig, providedIn: \"root\" });\n    return NgbTypeaheadConfig;\n})();\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n    provide: fesm2015_forms[\"i\" /* NG_VALUE_ACCESSOR */],\n    useExisting: Object(core[\"V\" /* forwardRef */])(() => ng_bootstrap_NgbTypeahead),\n    multi: true\n};\nlet nextWindowId = 0;\nlet ng_bootstrap_NgbTypeahead = /*@__PURE__*/ (() => {\n    /**\n     * A directive providing a simple way of creating powerful typeaheads from any text input.\n     */\n    let NgbTypeahead = class NgbTypeahead {\n        constructor(_elementRef, viewContainerRef, _renderer, injector, componentFactoryResolver, config, ngZone, _live, _document, _ngZone, _changeDetector, applicationRef) {\n            this._elementRef = _elementRef;\n            this._renderer = _renderer;\n            this._live = _live;\n            this._document = _document;\n            this._ngZone = _ngZone;\n            this._changeDetector = _changeDetector;\n            this._subscription = null;\n            this._closed$ = new Subject[\"a\" /* Subject */]();\n            this._inputValueBackup = null;\n            this._windowRef = null;\n            /**\n             * The value for the `autocomplete` attribute for the `<input>` element.\n             *\n             * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n             *\n             * @since 2.1.0\n             */\n            this.autocomplete = 'off';\n            /**\n             * The preferred placement of the typeahead.\n             *\n             * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n             * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n             * `\"right-bottom\"`\n             *\n             * Accepts an array of strings or a string with space separated possible values.\n             *\n             * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n             *\n             * Please see the [positioning overview](#/positioning) for more details.\n             */\n            this.placement = 'bottom-left';\n            /**\n             * An event emitted right before an item is selected from the result list.\n             *\n             * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n             */\n            this.selectItem = new core[\"o\" /* EventEmitter */]();\n            this.activeDescendant = null;\n            this.popupId = `ngb-typeahead-${nextWindowId++}`;\n            this._onTouched = () => { };\n            this._onChange = (_) => { };\n            this.container = config.container;\n            this.editable = config.editable;\n            this.focusFirst = config.focusFirst;\n            this.showHint = config.showHint;\n            this.placement = config.placement;\n            this._valueChanges = fromEvent(_elementRef.nativeElement, 'input')\n                .pipe(Object(map[\"a\" /* map */])($event => $event.target.value));\n            this._resubscribeTypeahead = new BehaviorSubject[\"a\" /* BehaviorSubject */](null);\n            this._popupService = new ng_bootstrap_PopupService(ng_bootstrap_NgbTypeaheadWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n            this._zoneSubscription = ngZone.onStable.subscribe(() => {\n                if (this.isPopupOpen()) {\n                    positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body');\n                }\n            });\n        }\n        ngOnInit() {\n            const inputValues$ = this._valueChanges.pipe(Object(tap[\"a\" /* tap */])(value => {\n                this._inputValueBackup = this.showHint ? value : null;\n                this._onChange(this.editable ? value : undefined);\n            }));\n            const results$ = inputValues$.pipe(this.ngbTypeahead);\n            const userInput$ = this._resubscribeTypeahead.pipe(Object(switchMap[\"a\" /* switchMap */])(() => results$));\n            this._subscription = this._subscribeToUserInput(userInput$);\n        }\n        ngOnDestroy() {\n            this._closePopup();\n            this._unsubscribeFromUserInput();\n            this._zoneSubscription.unsubscribe();\n        }\n        registerOnChange(fn) { this._onChange = fn; }\n        registerOnTouched(fn) { this._onTouched = fn; }\n        writeValue(value) {\n            this._writeInputValue(this._formatItemForInput(value));\n            if (this.showHint) {\n                this._inputValueBackup = value;\n            }\n        }\n        setDisabledState(isDisabled) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        }\n        /**\n         * Dismisses typeahead popup window\n         */\n        dismissPopup() {\n            if (this.isPopupOpen()) {\n                this._resubscribeTypeahead.next(null);\n                this._closePopup();\n                if (this.showHint && this._inputValueBackup !== null) {\n                    this._writeInputValue(this._inputValueBackup);\n                }\n                this._changeDetector.markForCheck();\n            }\n        }\n        /**\n         * Returns true if the typeahead popup window is displayed\n         */\n        isPopupOpen() { return this._windowRef != null; }\n        handleBlur() {\n            this._resubscribeTypeahead.next(null);\n            this._onTouched();\n        }\n        handleKeyDown(event) {\n            if (!this.isPopupOpen()) {\n                return;\n            }\n            // tslint:disable-next-line:deprecation\n            switch (event.which) {\n                case Key.ArrowDown:\n                    event.preventDefault();\n                    this._windowRef.instance.next();\n                    this._showHint();\n                    break;\n                case Key.ArrowUp:\n                    event.preventDefault();\n                    this._windowRef.instance.prev();\n                    this._showHint();\n                    break;\n                case Key.Enter:\n                case Key.Tab:\n                    const result = this._windowRef.instance.getActive();\n                    if (isDefined(result)) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                        this._selectResult(result);\n                    }\n                    this._closePopup();\n                    break;\n            }\n        }\n        _openPopup() {\n            if (!this.isPopupOpen()) {\n                this._inputValueBackup = this._elementRef.nativeElement.value;\n                this._windowRef = this._popupService.open();\n                this._windowRef.instance.id = this.popupId;\n                this._windowRef.instance.selectEvent.subscribe((result) => this._selectResultClosePopup(result));\n                this._windowRef.instance.activeChangeEvent.subscribe((activeId) => this.activeDescendant = activeId);\n                if (this.container === 'body') {\n                    this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n                }\n                this._changeDetector.markForCheck();\n                ngbAutoClose(this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$, [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n            }\n        }\n        _closePopup() {\n            this._closed$.next();\n            this._popupService.close();\n            this._windowRef = null;\n            this.activeDescendant = null;\n        }\n        _selectResult(result) {\n            let defaultPrevented = false;\n            this.selectItem.emit({ item: result, preventDefault: () => { defaultPrevented = true; } });\n            this._resubscribeTypeahead.next(null);\n            if (!defaultPrevented) {\n                this.writeValue(result);\n                this._onChange(result);\n            }\n        }\n        _selectResultClosePopup(result) {\n            this._selectResult(result);\n            this._closePopup();\n        }\n        _showHint() {\n            var _a;\n            if (this.showHint && ((_a = this._windowRef) === null || _a === void 0 ? void 0 : _a.instance.hasActive()) && this._inputValueBackup != null) {\n                const userInputLowerCase = this._inputValueBackup.toLowerCase();\n                const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n                if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n                    this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n                    this._elementRef.nativeElement['setSelectionRange'].apply(this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n                }\n                else {\n                    this._writeInputValue(formattedVal);\n                }\n            }\n        }\n        _formatItemForInput(item) {\n            return item != null && this.inputFormatter ? this.inputFormatter(item) : ng_bootstrap_toString(item);\n        }\n        _writeInputValue(value) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', ng_bootstrap_toString(value));\n        }\n        _subscribeToUserInput(userInput$) {\n            return userInput$.subscribe((results) => {\n                if (!results || results.length === 0) {\n                    this._closePopup();\n                }\n                else {\n                    this._openPopup();\n                    this._windowRef.instance.focusFirst = this.focusFirst;\n                    this._windowRef.instance.results = results;\n                    this._windowRef.instance.term = this._elementRef.nativeElement.value;\n                    if (this.resultFormatter) {\n                        this._windowRef.instance.formatter = this.resultFormatter;\n                    }\n                    if (this.resultTemplate) {\n                        this._windowRef.instance.resultTemplate = this.resultTemplate;\n                    }\n                    this._windowRef.instance.resetActive();\n                    // The observable stream we are subscribing to might have async steps\n                    // and if a component containing typeahead is using the OnPush strategy\n                    // the change detection turn wouldn't be invoked automatically.\n                    this._windowRef.changeDetectorRef.detectChanges();\n                    this._showHint();\n                }\n                // live announcer\n                const count = results ? results.length : 0;\n                this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n            });\n        }\n        _unsubscribeFromUserInput() {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n            }\n            this._subscription = null;\n        }\n    };\n    NgbTypeahead.ɵfac = function NgbTypeahead_Factory(t) { return new (t || NgbTypeahead)(core[\"Nb\" /* ɵɵdirectiveInject */](core[\"m\" /* ElementRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"R\" /* ViewContainerRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"G\" /* Renderer2 */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"u\" /* Injector */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"k\" /* ComponentFactoryResolver */]), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_NgbTypeaheadConfig), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"C\" /* NgZone */]), core[\"Nb\" /* ɵɵdirectiveInject */](ng_bootstrap_Live), core[\"Nb\" /* ɵɵdirectiveInject */](common[\"c\" /* DOCUMENT */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"C\" /* NgZone */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"i\" /* ChangeDetectorRef */]), core[\"Nb\" /* ɵɵdirectiveInject */](core[\"g\" /* ApplicationRef */])); };\n    NgbTypeahead.ɵdir = core[\"Ib\" /* ɵɵdefineDirective */]({ type: NgbTypeahead, selectors: [[\"input\", \"ngbTypeahead\", \"\"]], hostAttrs: [\"autocapitalize\", \"off\", \"autocorrect\", \"off\", \"role\", \"combobox\", \"aria-multiline\", \"false\"], hostVars: 7, hostBindings: function NgbTypeahead_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                core[\"cc\" /* ɵɵlistener */](\"blur\", function NgbTypeahead_blur_HostBindingHandler() { return ctx.handleBlur(); })(\"keydown\", function NgbTypeahead_keydown_HostBindingHandler($event) { return ctx.handleKeyDown($event); });\n            }\n            if (rf & 2) {\n                core[\"Vb\" /* ɵɵhostProperty */](\"autocomplete\", ctx.autocomplete);\n                core[\"Bb\" /* ɵɵattribute */](\"aria-autocomplete\", ctx.showHint ? \"both\" : \"list\")(\"aria-activedescendant\", ctx.activeDescendant)(\"aria-owns\", ctx.isPopupOpen() ? ctx.popupId : null)(\"aria-expanded\", ctx.isPopupOpen());\n                core[\"Fb\" /* ɵɵclassProp */](\"open\", ctx.isPopupOpen());\n            }\n        }, inputs: { autocomplete: \"autocomplete\", placement: \"placement\", container: \"container\", editable: \"editable\", focusFirst: \"focusFirst\", showHint: \"showHint\", inputFormatter: \"inputFormatter\", ngbTypeahead: \"ngbTypeahead\", resultFormatter: \"resultFormatter\", resultTemplate: \"resultTemplate\" }, outputs: { selectItem: \"selectItem\" }, exportAs: [\"ngbTypeahead\"], features: [core[\"zb\" /* ɵɵProvidersFeature */]([NGB_TYPEAHEAD_VALUE_ACCESSOR])] });\n    NgbTypeahead = __decorate([__param(8, Object(core[\"r\" /* Inject */])(common[\"c\" /* DOCUMENT */]))\n    ], NgbTypeahead);\n    return NgbTypeahead;\n})();\nlet ng_bootstrap_NgbTypeaheadModule = /*@__PURE__*/ (() => {\n    let NgbTypeaheadModule = class NgbTypeaheadModule {\n    };\n    NgbTypeaheadModule.ɵfac = function NgbTypeaheadModule_Factory(t) { return new (t || NgbTypeaheadModule)(); };\n    NgbTypeaheadModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbTypeaheadModule });\n    NgbTypeaheadModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({ imports: [[common[\"b\" /* CommonModule */]]] });\n    return NgbTypeaheadModule;\n})();\nconst NGB_MODULES = [\n    ng_bootstrap_NgbAccordionModule, ng_bootstrap_NgbAlertModule, ng_bootstrap_NgbButtonsModule, ng_bootstrap_NgbCarouselModule, ng_bootstrap_NgbCollapseModule, ng_bootstrap_NgbDatepickerModule,\n    ng_bootstrap_NgbDropdownModule, ng_bootstrap_NgbModalModule, ng_bootstrap_NgbNavModule, ng_bootstrap_NgbPaginationModule, ng_bootstrap_NgbPopoverModule, ng_bootstrap_NgbProgressbarModule,\n    ng_bootstrap_NgbRatingModule, ng_bootstrap_NgbTimepickerModule, ng_bootstrap_NgbToastModule, ng_bootstrap_NgbTooltipModule, ng_bootstrap_NgbTypeaheadModule,\n    // tslint:disable-next-line:deprecation\n    ng_bootstrap_NgbTabsetModule\n];\nlet ng_bootstrap_NgbModule = /*@__PURE__*/ (() => {\n    let NgbModule = class NgbModule {\n    };\n    NgbModule.ɵfac = function NgbModule_Factory(t) { return new (t || NgbModule)(); };\n    NgbModule.ɵmod = core[\"Lb\" /* ɵɵdefineNgModule */]({ type: NgbModule });\n    NgbModule.ɵinj = core[\"Kb\" /* ɵɵdefineInjector */]({ imports: [NGB_MODULES, ng_bootstrap_NgbAccordionModule, ng_bootstrap_NgbAlertModule, ng_bootstrap_NgbButtonsModule, ng_bootstrap_NgbCarouselModule, ng_bootstrap_NgbCollapseModule, ng_bootstrap_NgbDatepickerModule, ng_bootstrap_NgbDropdownModule, ng_bootstrap_NgbModalModule, ng_bootstrap_NgbNavModule, ng_bootstrap_NgbPaginationModule, ng_bootstrap_NgbPopoverModule, ng_bootstrap_NgbProgressbarModule, ng_bootstrap_NgbRatingModule, ng_bootstrap_NgbTimepickerModule, ng_bootstrap_NgbToastModule, ng_bootstrap_NgbTooltipModule, ng_bootstrap_NgbTypeaheadModule, ng_bootstrap_NgbTabsetModule] });\n    return NgbModule;\n})();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbAccordionModule, { declarations: function () { return [ng_bootstrap_NgbAccordion, ng_bootstrap_NgbPanel, ng_bootstrap_NgbPanelTitle, ng_bootstrap_NgbPanelContent, ng_bootstrap_NgbPanelHeader, ng_bootstrap_NgbPanelToggle]; }, imports: function () { return [common[\"b\" /* CommonModule */]]; }, exports: function () { return [ng_bootstrap_NgbAccordion, ng_bootstrap_NgbPanel, ng_bootstrap_NgbPanelTitle, ng_bootstrap_NgbPanelContent, ng_bootstrap_NgbPanelHeader, ng_bootstrap_NgbPanelToggle]; } }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbAlertModule, { declarations: function () { return [ng_bootstrap_NgbAlert]; }, imports: function () { return [common[\"b\" /* CommonModule */]]; }, exports: function () { return [ng_bootstrap_NgbAlert]; } }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbButtonsModule, { declarations: [ng_bootstrap_NgbButtonLabel, ng_bootstrap_NgbCheckBox, ng_bootstrap_NgbRadioGroup, ng_bootstrap_NgbRadio], exports: [ng_bootstrap_NgbButtonLabel, ng_bootstrap_NgbCheckBox, ng_bootstrap_NgbRadioGroup, ng_bootstrap_NgbRadio] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbCarouselModule, { declarations: function () { return [ng_bootstrap_NgbCarousel, ng_bootstrap_NgbSlide]; }, imports: function () { return [common[\"b\" /* CommonModule */]]; }, exports: function () { return [ng_bootstrap_NgbCarousel, ng_bootstrap_NgbSlide]; } }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbCollapseModule, { declarations: [ng_bootstrap_NgbCollapse], exports: [ng_bootstrap_NgbCollapse] }); })();\nconst ɵNgbCalendarGregorian_BaseFactory = /*@__PURE__*/ core[\"Ub\" /* ɵɵgetInheritedFactory */](ng_bootstrap_NgbCalendarGregorian);\nconst ɵNgbDateStructAdapter_BaseFactory = /*@__PURE__*/ core[\"Ub\" /* ɵɵgetInheritedFactory */](ng_bootstrap_NgbDateStructAdapter);\nconst ɵNgbDateISOParserFormatter_BaseFactory = /*@__PURE__*/ core[\"Ub\" /* ɵɵgetInheritedFactory */](ng_bootstrap_NgbDateISOParserFormatter);\nconst ɵNgbInputDatepickerConfig_BaseFactory = /*@__PURE__*/ core[\"Ub\" /* ɵɵgetInheritedFactory */](ng_bootstrap_NgbInputDatepickerConfig);\nconst ɵNgbCalendarHijri_BaseFactory = /*@__PURE__*/ core[\"Ub\" /* ɵɵgetInheritedFactory */](ng_bootstrap_NgbCalendarHijri);\nconst ɵNgbCalendarIslamicCivil_BaseFactory = /*@__PURE__*/ core[\"Ub\" /* ɵɵgetInheritedFactory */](ng_bootstrap_NgbCalendarIslamicCivil);\nconst ɵNgbCalendarIslamicUmalqura_BaseFactory = /*@__PURE__*/ core[\"Ub\" /* ɵɵgetInheritedFactory */](ng_bootstrap_NgbCalendarIslamicUmalqura);\nconst ɵNgbCalendarPersian_BaseFactory = /*@__PURE__*/ core[\"Ub\" /* ɵɵgetInheritedFactory */](ng_bootstrap_NgbCalendarPersian);\nconst ɵNgbCalendarHebrew_BaseFactory = /*@__PURE__*/ core[\"Ub\" /* ɵɵgetInheritedFactory */](ng_bootstrap_NgbCalendarHebrew);\nconst ɵNgbDatepickerI18nHebrew_BaseFactory = /*@__PURE__*/ core[\"Ub\" /* ɵɵgetInheritedFactory */](ng_bootstrap_NgbDatepickerI18nHebrew);\nconst ɵNgbDateNativeAdapter_BaseFactory = /*@__PURE__*/ core[\"Ub\" /* ɵɵgetInheritedFactory */](ng_bootstrap_NgbDateNativeAdapter);\nconst ɵNgbDateNativeUTCAdapter_BaseFactory = /*@__PURE__*/ core[\"Ub\" /* ɵɵgetInheritedFactory */](ng_bootstrap_NgbDateNativeUTCAdapter);\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbDatepickerModule, { declarations: function () { return [ng_bootstrap_NgbDatepicker, ng_bootstrap_NgbDatepickerContent, ng_bootstrap_NgbDatepickerMonth, ng_bootstrap_NgbDatepickerNavigation, ng_bootstrap_NgbDatepickerNavigationSelect, ng_bootstrap_NgbDatepickerDayView, ng_bootstrap_NgbInputDatepicker]; }, imports: function () { return [common[\"b\" /* CommonModule */], fesm2015_forms[\"f\" /* FormsModule */]]; }, exports: function () { return [ng_bootstrap_NgbDatepicker, ng_bootstrap_NgbDatepickerContent, ng_bootstrap_NgbInputDatepicker, ng_bootstrap_NgbDatepickerMonth]; } }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbDropdownModule, { declarations: [ng_bootstrap_NgbDropdown, ng_bootstrap_NgbDropdownAnchor, ng_bootstrap_NgbDropdownToggle, ng_bootstrap_NgbDropdownMenu, ng_bootstrap_NgbDropdownItem, ng_bootstrap_NgbNavbar], exports: [ng_bootstrap_NgbDropdown, ng_bootstrap_NgbDropdownAnchor, ng_bootstrap_NgbDropdownToggle, ng_bootstrap_NgbDropdownMenu, ng_bootstrap_NgbDropdownItem, ng_bootstrap_NgbNavbar] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbModalModule, { declarations: [ng_bootstrap_NgbModalBackdrop, ng_bootstrap_NgbModalWindow] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbNavModule, { declarations: function () { return [ng_bootstrap_NgbNavContent, ng_bootstrap_NgbNav, ng_bootstrap_NgbNavItem, ng_bootstrap_NgbNavLink, ng_bootstrap_NgbNavOutlet]; }, imports: function () { return [common[\"b\" /* CommonModule */]]; }, exports: function () { return [ng_bootstrap_NgbNavContent, ng_bootstrap_NgbNav, ng_bootstrap_NgbNavItem, ng_bootstrap_NgbNavLink, ng_bootstrap_NgbNavOutlet]; } }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbPaginationModule, { declarations: function () { return [ng_bootstrap_NgbPagination, ng_bootstrap_NgbPaginationEllipsis, ng_bootstrap_NgbPaginationFirst, ng_bootstrap_NgbPaginationLast, ng_bootstrap_NgbPaginationNext, ng_bootstrap_NgbPaginationNumber, ng_bootstrap_NgbPaginationPrevious]; }, imports: function () { return [common[\"b\" /* CommonModule */]]; }, exports: function () { return [ng_bootstrap_NgbPagination, ng_bootstrap_NgbPaginationEllipsis, ng_bootstrap_NgbPaginationFirst, ng_bootstrap_NgbPaginationLast, ng_bootstrap_NgbPaginationNext, ng_bootstrap_NgbPaginationNumber, ng_bootstrap_NgbPaginationPrevious]; } }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbPopoverModule, { declarations: function () { return [ng_bootstrap_NgbPopover, ng_bootstrap_NgbPopoverWindow]; }, imports: function () { return [common[\"b\" /* CommonModule */]]; }, exports: function () { return [ng_bootstrap_NgbPopover]; } }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbProgressbarModule, { declarations: function () { return [ng_bootstrap_NgbProgressbar]; }, imports: function () { return [common[\"b\" /* CommonModule */]]; }, exports: function () { return [ng_bootstrap_NgbProgressbar]; } }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbRatingModule, { declarations: function () { return [ng_bootstrap_NgbRating]; }, imports: function () { return [common[\"b\" /* CommonModule */]]; }, exports: function () { return [ng_bootstrap_NgbRating]; } }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbTabsetModule, { declarations: function () { return [ng_bootstrap_NgbTabset, ng_bootstrap_NgbTab, ng_bootstrap_NgbTabContent, ng_bootstrap_NgbTabTitle]; }, imports: function () { return [common[\"b\" /* CommonModule */]]; }, exports: function () { return [ng_bootstrap_NgbTabset, ng_bootstrap_NgbTab, ng_bootstrap_NgbTabContent, ng_bootstrap_NgbTabTitle]; } }); })();\nconst ɵNgbTimeStructAdapter_BaseFactory = /*@__PURE__*/ core[\"Ub\" /* ɵɵgetInheritedFactory */](ng_bootstrap_NgbTimeStructAdapter);\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbTimepickerModule, { declarations: function () { return [ng_bootstrap_NgbTimepicker]; }, imports: function () { return [common[\"b\" /* CommonModule */]]; }, exports: function () { return [ng_bootstrap_NgbTimepicker]; } }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbToastModule, { declarations: function () { return [ng_bootstrap_NgbToast, ng_bootstrap_NgbToastHeader]; }, imports: function () { return [common[\"b\" /* CommonModule */]]; }, exports: function () { return [ng_bootstrap_NgbToast, ng_bootstrap_NgbToastHeader]; } }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbTooltipModule, { declarations: [ng_bootstrap_NgbTooltip, ng_bootstrap_NgbTooltipWindow], exports: [ng_bootstrap_NgbTooltip] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbTypeaheadModule, { declarations: function () { return [ng_bootstrap_NgbTypeahead, ng_bootstrap_NgbHighlight, ng_bootstrap_NgbTypeaheadWindow]; }, imports: function () { return [common[\"b\" /* CommonModule */]]; }, exports: function () { return [ng_bootstrap_NgbTypeahead, ng_bootstrap_NgbHighlight]; } }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"wc\" /* ɵɵsetNgModuleScope */](ng_bootstrap_NgbModule, { imports: [ng_bootstrap_NgbAccordionModule, ng_bootstrap_NgbAlertModule, ng_bootstrap_NgbButtonsModule, ng_bootstrap_NgbCarouselModule, ng_bootstrap_NgbCollapseModule, ng_bootstrap_NgbDatepickerModule, ng_bootstrap_NgbDropdownModule, ng_bootstrap_NgbModalModule, ng_bootstrap_NgbNavModule, ng_bootstrap_NgbPaginationModule, ng_bootstrap_NgbPopoverModule, ng_bootstrap_NgbProgressbarModule, ng_bootstrap_NgbRatingModule, ng_bootstrap_NgbTimepickerModule, ng_bootstrap_NgbToastModule, ng_bootstrap_NgbTooltipModule, ng_bootstrap_NgbTypeaheadModule, ng_bootstrap_NgbTabsetModule], exports: [ng_bootstrap_NgbAccordionModule, ng_bootstrap_NgbAlertModule, ng_bootstrap_NgbButtonsModule, ng_bootstrap_NgbCarouselModule, ng_bootstrap_NgbCollapseModule, ng_bootstrap_NgbDatepickerModule, ng_bootstrap_NgbDropdownModule, ng_bootstrap_NgbModalModule, ng_bootstrap_NgbNavModule, ng_bootstrap_NgbPaginationModule, ng_bootstrap_NgbPopoverModule, ng_bootstrap_NgbProgressbarModule, ng_bootstrap_NgbRatingModule, ng_bootstrap_NgbTimepickerModule, ng_bootstrap_NgbToastModule, ng_bootstrap_NgbTooltipModule, ng_bootstrap_NgbTypeaheadModule, ng_bootstrap_NgbTabsetModule] }); })();\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=ng-bootstrap.js.map\n\n\n/***/ }),\n\n/***/ \"3Pt+\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export AbstractControl */\n/* unused harmony export AbstractControlDirective */\n/* unused harmony export AbstractFormGroupDirective */\n/* unused harmony export COMPOSITION_BUFFER_MODE */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CheckboxControlValueAccessor; });\n/* unused harmony export CheckboxRequiredValidator */\n/* unused harmony export ControlContainer */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DefaultValueAccessor; });\n/* unused harmony export EmailValidator */\n/* unused harmony export FormArray */\n/* unused harmony export FormArrayName */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return FormBuilder; });\n/* unused harmony export FormControl */\n/* unused harmony export FormControlDirective */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return FormControlName; });\n/* unused harmony export FormGroup */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return FormGroupDirective; });\n/* unused harmony export FormGroupName */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return FormsModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return MaxLengthValidator; });\n/* unused harmony export MinLengthValidator */\n/* unused harmony export NG_ASYNC_VALIDATORS */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return NG_VALIDATORS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return NG_VALUE_ACCESSOR; });\n/* unused harmony export NgControl */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return NgControlStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return NgControlStatusGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return NgForm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return NgModel; });\n/* unused harmony export NgModelGroup */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return NgSelectOption; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return NumberValueAccessor; });\n/* unused harmony export PatternValidator */\n/* unused harmony export RadioControlValueAccessor */\n/* unused harmony export RangeValueAccessor */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return ReactiveFormsModule; });\n/* unused harmony export RequiredValidator */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return SelectControlValueAccessor; });\n/* unused harmony export SelectMultipleControlValueAccessor */\n/* unused harmony export VERSION */\n/* unused harmony export Validators */\n/* unused harmony export ɵInternalFormsSharedModule */\n/* unused harmony export ɵNgNoValidate */\n/* unused harmony export ɵNgSelectMultipleOption */\n/* unused harmony export ɵangular_packages_forms_forms_a */\n/* unused harmony export ɵangular_packages_forms_forms_b */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return ɵNgNoValidate; });\n/* unused harmony export ɵangular_packages_forms_forms_bb */\n/* unused harmony export ɵangular_packages_forms_forms_bc */\n/* unused harmony export ɵangular_packages_forms_forms_bd */\n/* unused harmony export ɵangular_packages_forms_forms_be */\n/* unused harmony export ɵangular_packages_forms_forms_bf */\n/* unused harmony export ɵangular_packages_forms_forms_bg */\n/* unused harmony export ɵangular_packages_forms_forms_bh */\n/* unused harmony export ɵangular_packages_forms_forms_bi */\n/* unused harmony export ɵangular_packages_forms_forms_bj */\n/* unused harmony export ɵangular_packages_forms_forms_bk */\n/* unused harmony export ɵangular_packages_forms_forms_bl */\n/* unused harmony export ɵangular_packages_forms_forms_bm */\n/* unused harmony export ɵangular_packages_forms_forms_bn */\n/* unused harmony export ɵangular_packages_forms_forms_bo */\n/* unused harmony export ɵangular_packages_forms_forms_bp */\n/* unused harmony export ɵangular_packages_forms_forms_c */\n/* unused harmony export ɵangular_packages_forms_forms_d */\n/* unused harmony export ɵangular_packages_forms_forms_e */\n/* unused harmony export ɵangular_packages_forms_forms_f */\n/* unused harmony export ɵangular_packages_forms_forms_g */\n/* unused harmony export ɵangular_packages_forms_forms_h */\n/* unused harmony export ɵangular_packages_forms_forms_i */\n/* unused harmony export ɵangular_packages_forms_forms_j */\n/* unused harmony export ɵangular_packages_forms_forms_k */\n/* unused harmony export ɵangular_packages_forms_forms_l */\n/* unused harmony export ɵangular_packages_forms_forms_m */\n/* unused harmony export ɵangular_packages_forms_forms_n */\n/* unused harmony export ɵangular_packages_forms_forms_o */\n/* unused harmony export ɵangular_packages_forms_forms_p */\n/* unused harmony export ɵangular_packages_forms_forms_q */\n/* unused harmony export ɵangular_packages_forms_forms_r */\n/* unused harmony export ɵangular_packages_forms_forms_s */\n/* unused harmony export ɵangular_packages_forms_forms_t */\n/* unused harmony export ɵangular_packages_forms_forms_u */\n/* unused harmony export ɵangular_packages_forms_forms_v */\n/* unused harmony export ɵangular_packages_forms_forms_w */\n/* unused harmony export ɵangular_packages_forms_forms_x */\n/* unused harmony export ɵangular_packages_forms_forms_y */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return ɵNgSelectMultipleOption; });\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"fXoL\");\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"ofXK\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"Cfvw\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"cp0P\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"lJxs\");\n/**\n * @license Angular v11.2.9\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\n\n\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for all built-in ControlValueAccessor classes. We use this class to distinguish\n * between built-in and custom CVAs, so that Forms logic can recognize built-in CVAs and treat\n * custom ones with higher priority (when both built-in and custom CVAs are present).\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\n\nclass BuiltInControlValueAccessor {\n}\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nconst NG_VALUE_ACCESSOR = /*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* InjectionToken */ \"t\"]('NgValueAccessor');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => CheckboxControlValueAccessor),\n    multi: true,\n};\nlet CheckboxControlValueAccessor = /*@__PURE__*/ (() => {\n    class CheckboxControlValueAccessor extends BuiltInControlValueAccessor {\n        constructor(_renderer, _elementRef) {\n            super();\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /**\n             * The registered callback function called when a change event occurs on the input element.\n             * @nodoc\n             */\n            this.onChange = (_) => { };\n            /**\n             * The registered callback function called when a blur event occurs on the input element.\n             * @nodoc\n             */\n            this.onTouched = () => { };\n        }\n        /**\n         * Sets the \"checked\" property on the input element.\n         * @nodoc\n         */\n        writeValue(value) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n        }\n        /**\n         * Registers a function called when the control value changes.\n         * @nodoc\n         */\n        registerOnChange(fn) {\n            this.onChange = fn;\n        }\n        /**\n         * Registers a function called when the control is touched.\n         * @nodoc\n         */\n        registerOnTouched(fn) {\n            this.onTouched = fn;\n        }\n        /**\n         * Sets the \"disabled\" property on the input element.\n         * @nodoc\n         */\n        setDisabledState(isDisabled) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        }\n    }\n    CheckboxControlValueAccessor.ɵfac = function CheckboxControlValueAccessor_Factory(t) { return new (t || CheckboxControlValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Renderer2 */ \"G\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ \"m\"])); };\n    CheckboxControlValueAccessor.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: CheckboxControlValueAccessor, selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]], hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵlistener */ \"cc\"](\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.checked); })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n            }\n        }, features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([CHECKBOX_VALUE_ACCESSOR]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"]] });\n    return CheckboxControlValueAccessor;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => DefaultValueAccessor),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n    const userAgent = Object(_angular_common__WEBPACK_IMPORTED_MODULE_1__[/* ɵgetDOM */ \"A\"])() ? Object(_angular_common__WEBPACK_IMPORTED_MODULE_1__[/* ɵgetDOM */ \"A\"])().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = /*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* InjectionToken */ \"t\"]('CompositionEventMode');\nlet DefaultValueAccessor = /*@__PURE__*/ (() => {\n    class DefaultValueAccessor {\n        constructor(_renderer, _elementRef, _compositionMode) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this._compositionMode = _compositionMode;\n            /**\n             * The registered callback function called when an input event occurs on the input element.\n             * @nodoc\n             */\n            this.onChange = (_) => { };\n            /**\n             * The registered callback function called when a blur event occurs on the input element.\n             * @nodoc\n             */\n            this.onTouched = () => { };\n            /** Whether the user is creating a composition string (IME events). */\n            this._composing = false;\n            if (this._compositionMode == null) {\n                this._compositionMode = !_isAndroid();\n            }\n        }\n        /**\n         * Sets the \"value\" property on the input element.\n         * @nodoc\n         */\n        writeValue(value) {\n            const normalizedValue = value == null ? '' : value;\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        }\n        /**\n         * Registers a function called when the control value changes.\n         * @nodoc\n         */\n        registerOnChange(fn) {\n            this.onChange = fn;\n        }\n        /**\n         * Registers a function called when the control is touched.\n         * @nodoc\n         */\n        registerOnTouched(fn) {\n            this.onTouched = fn;\n        }\n        /**\n         * Sets the \"disabled\" property on the input element.\n         * @nodoc\n         */\n        setDisabledState(isDisabled) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        }\n        /** @internal */\n        _handleInput(value) {\n            if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n                this.onChange(value);\n            }\n        }\n        /** @internal */\n        _compositionStart() {\n            this._composing = true;\n        }\n        /** @internal */\n        _compositionEnd(value) {\n            this._composing = false;\n            this._compositionMode && this.onChange(value);\n        }\n    }\n    DefaultValueAccessor.ɵfac = function DefaultValueAccessor_Factory(t) { return new (t || DefaultValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Renderer2 */ \"G\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ \"m\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](COMPOSITION_BUFFER_MODE, 8)); };\n    DefaultValueAccessor.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: DefaultValueAccessor, selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]], hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵlistener */ \"cc\"](\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) { return ctx._handleInput($event.target.value); })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() { return ctx._compositionStart(); })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) { return ctx._compositionEnd($event.target.value); });\n            }\n        }, features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([DEFAULT_VALUE_ACCESSOR])] });\n    return DefaultValueAccessor;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\nfunction hasValidLength(value) {\n    // non-strict comparison is intentional, to check for both `null` and `undefined` values\n    return value != null && typeof value.length === 'number';\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_ASYNC_VALIDATORS`\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = /*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* InjectionToken */ \"t\"]('NgValidators');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_VALIDATORS`\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = /*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* InjectionToken */ \"t\"]('NgAsyncValidators');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n    /**\n     * @description\n     * Validator that requires the control's value to be greater than or equal to the provided number.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a minimum of 3\n     *\n     * ```typescript\n     * const control = new FormControl(2, Validators.min(3));\n     *\n     * console.log(control.errors); // {min: {min: 3, actual: 2}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `min` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static min(min) {\n        return minValidator(min);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to be less than or equal to the provided number.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a maximum of 15\n     *\n     * ```typescript\n     * const control = new FormControl(16, Validators.max(15));\n     *\n     * console.log(control.errors); // {max: {max: 15, actual: 16}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `max` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static max(max) {\n        return maxValidator(max);\n    }\n    /**\n     * @description\n     * Validator that requires the control have a non-empty value.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field is non-empty\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.required);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map with the `required` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static required(control) {\n        return requiredValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value be true. This validator is commonly\n     * used for required checkboxes.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field value is true\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.requiredTrue);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map that contains the `required` property\n     * set to `true` if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static requiredTrue(control) {\n        return requiredTrueValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value pass an email validation test.\n     *\n     * Tests the value using a [regular\n     * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n     * pattern suitable for common usecases. The pattern is based on the definition of a valid email\n     * address in the [WHATWG HTML\n     * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n     * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n     * lengths of different parts of the address).\n     *\n     * The differences from the WHATWG version include:\n     * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n     * - Disallow `local-part` to be longer than 64 characters.\n     * - Disallow the whole address to be longer than 254 characters.\n     *\n     * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n     * validate the value against a different pattern.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field matches a valid email pattern\n     *\n     * ```typescript\n     * const control = new FormControl('bad@', Validators.email);\n     *\n     * console.log(control.errors); // {email: true}\n     * ```\n     *\n     * @returns An error map with the `email` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static email(control) {\n        return emailValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be greater than or equal\n     * to the provided minimum length. This validator is also provided by default if you use the\n     * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays. The\n     * `minLength` validator logic is also not invoked for values when their `length` property is 0\n     * (for example in case of an empty string or an empty array), to support optional controls. You\n     * can use the standard `required` validator if empty values should not be considered valid.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has a minimum of 3 characters\n     *\n     * ```typescript\n     * const control = new FormControl('ng', Validators.minLength(3));\n     *\n     * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n     * ```\n     *\n     * ```html\n     * <input minlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `minlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static minLength(minLength) {\n        return minLengthValidator(minLength);\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be less than or equal\n     * to the provided maximum length. This validator is also provided by default if you use the\n     * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has maximum of 5 characters\n     *\n     * ```typescript\n     * const control = new FormControl('Angular', Validators.maxLength(5));\n     *\n     * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n     * ```\n     *\n     * ```html\n     * <input maxlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `maxlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static maxLength(maxLength) {\n        return maxLengthValidator(maxLength);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to match a regex pattern. This validator is also\n     * provided by default if you use the HTML5 `pattern` attribute.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field only contains letters or spaces\n     *\n     * ```typescript\n     * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n     *\n     * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n     * ```\n     *\n     * ```html\n     * <input pattern=\"[a-zA-Z ]*\">\n     * ```\n     *\n     * ### Pattern matching with the global or sticky flag\n     *\n     * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n     * can produce different results on the same input when validations are run consecutively. This is\n     * due to how the behavior of `RegExp.prototype.test` is\n     * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n     * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n     * Due to this behavior, it is recommended that when using\n     * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n     * flag enabled.\n     *\n     * ```typescript\n     * // Not recommended (since the `g` flag is used)\n     * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n     *\n     * // Good\n     * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n     * ```\n     *\n     * @param pattern A regular expression to be used as is to test the values, or a string.\n     * If a string is passed, the `^` character is prepended and the `$` character is\n     * appended to the provided string (if not already present), and the resulting regular\n     * expression is used to test the values.\n     *\n     * @returns A validator function that returns an error map with the\n     * `pattern` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static pattern(pattern) {\n        return patternValidator(pattern);\n    }\n    /**\n     * @description\n     * Validator that performs no operation.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static nullValidator(control) {\n        return nullValidator(control);\n    }\n    static compose(validators) {\n        return compose(validators);\n    }\n    /**\n     * @description\n     * Compose multiple async validators into a single function that returns the union\n     * of the individual error objects for the provided control.\n     *\n     * @returns A validator function that returns an error map with the\n     * merged error objects of the async validators if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static composeAsync(validators) {\n        return composeAsync(validators);\n    }\n}\n/**\n * Validator that requires the control's value to be greater than or equal to the provided number.\n * See `Validators.min` for additional information.\n */\nfunction minValidator(min) {\n    return (control) => {\n        if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = parseFloat(control.value);\n        // Controls with NaN values after parsing should be treated as not having a\n        // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n        return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n    };\n}\n/**\n * Validator that requires the control's value to be less than or equal to the provided number.\n * See `Validators.max` for additional information.\n */\nfunction maxValidator(max) {\n    return (control) => {\n        if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = parseFloat(control.value);\n        // Controls with NaN values after parsing should be treated as not having a\n        // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n        return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n    };\n}\n/**\n * Validator that requires the control have a non-empty value.\n * See `Validators.required` for additional information.\n */\nfunction requiredValidator(control) {\n    return isEmptyInputValue(control.value) ? { 'required': true } : null;\n}\n/**\n * Validator that requires the control's value be true. This validator is commonly\n * used for required checkboxes.\n * See `Validators.requiredTrue` for additional information.\n */\nfunction requiredTrueValidator(control) {\n    return control.value === true ? null : { 'required': true };\n}\n/**\n * Validator that requires the control's value pass an email validation test.\n * See `Validators.email` for additional information.\n */\nfunction emailValidator(control) {\n    if (isEmptyInputValue(control.value)) {\n        return null; // don't validate empty values to allow optional controls\n    }\n    return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n}\n/**\n * Validator that requires the length of the control's value to be greater than or equal\n * to the provided minimum length. See `Validators.minLength` for additional information.\n */\nfunction minLengthValidator(minLength) {\n    return (control) => {\n        if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n            // don't validate empty values to allow optional controls\n            // don't validate values without `length` property\n            return null;\n        }\n        return control.value.length < minLength ?\n            { 'minlength': { 'requiredLength': minLength, 'actualLength': control.value.length } } :\n            null;\n    };\n}\n/**\n * Validator that requires the length of the control's value to be less than or equal\n * to the provided maximum length. See `Validators.maxLength` for additional information.\n */\nfunction maxLengthValidator(maxLength) {\n    return (control) => {\n        return hasValidLength(control.value) && control.value.length > maxLength ?\n            { 'maxlength': { 'requiredLength': maxLength, 'actualLength': control.value.length } } :\n            null;\n    };\n}\n/**\n * Validator that requires the control's value to match a regex pattern.\n * See `Validators.pattern` for additional information.\n */\nfunction patternValidator(pattern) {\n    if (!pattern)\n        return nullValidator;\n    let regex;\n    let regexStr;\n    if (typeof pattern === 'string') {\n        regexStr = '';\n        if (pattern.charAt(0) !== '^')\n            regexStr += '^';\n        regexStr += pattern;\n        if (pattern.charAt(pattern.length - 1) !== '$')\n            regexStr += '$';\n        regex = new RegExp(regexStr);\n    }\n    else {\n        regexStr = pattern.toString();\n        regex = pattern;\n    }\n    return (control) => {\n        if (isEmptyInputValue(control.value)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = control.value;\n        return regex.test(value) ? null :\n            { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n    };\n}\n/**\n * Function that has `ValidatorFn` shape, but performs no operation.\n */\nfunction nullValidator(control) {\n    return null;\n}\nfunction isPresent(o) {\n    return o != null;\n}\nfunction toObservable(r) {\n    const obs = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵisPromise */ \"rb\"])(r) ? Object(rxjs__WEBPACK_IMPORTED_MODULE_2__[/* from */ \"a\"])(r) : r;\n    if (!(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵisObservable */ \"qb\"])(obs)) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new Error(`Expected validator to return Promise or Observable.`);\n    }\n    return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n    let res = {};\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    arrayOfErrors.forEach((errors) => {\n        res = errors != null ? Object.assign(Object.assign({}, res), errors) : res;\n    });\n    return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n    return validators.map(validator => validator(control));\n}\nfunction isValidatorFn(validator) {\n    return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n    return validators.map(validator => {\n        return isValidatorFn(validator) ?\n            validator :\n            ((c) => validator.validate(c));\n    });\n}\n/**\n * Merges synchronous validators into a single validator function.\n * See `Validators.compose` for additional information.\n */\nfunction compose(validators) {\n    if (!validators)\n        return null;\n    const presentValidators = validators.filter(isPresent);\n    if (presentValidators.length == 0)\n        return null;\n    return function (control) {\n        return mergeErrors(executeValidators(control, presentValidators));\n    };\n}\n/**\n * Accepts a list of validators of different possible shapes (`Validator` and `ValidatorFn`),\n * normalizes the list (converts everything to `ValidatorFn`) and merges them into a single\n * validator function.\n */\nfunction composeValidators(validators) {\n    return validators != null ? compose(normalizeValidators(validators)) : null;\n}\n/**\n * Merges asynchronous validators into a single validator function.\n * See `Validators.composeAsync` for additional information.\n */\nfunction composeAsync(validators) {\n    if (!validators)\n        return null;\n    const presentValidators = validators.filter(isPresent);\n    if (presentValidators.length == 0)\n        return null;\n    return function (control) {\n        const observables = executeValidators(control, presentValidators).map(toObservable);\n        return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__[/* forkJoin */ \"a\"])(observables).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__[/* map */ \"a\"])(mergeErrors));\n    };\n}\n/**\n * Accepts a list of async validators of different possible shapes (`AsyncValidator` and\n * `AsyncValidatorFn`), normalizes the list (converts everything to `AsyncValidatorFn`) and merges\n * them into a single validator function.\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null ? composeAsync(normalizeValidators(validators)) :\n        null;\n}\n/**\n * Merges raw control validators with a given directive validator and returns the combined list of\n * validators as an array.\n */\nfunction mergeValidators(controlValidators, dirValidator) {\n    if (controlValidators === null)\n        return [dirValidator];\n    return Array.isArray(controlValidators) ? [...controlValidators, dirValidator] :\n        [controlValidators, dirValidator];\n}\n/**\n * Retrieves the list of raw synchronous validators attached to a given control.\n */\nfunction getControlValidators(control) {\n    return control._rawValidators;\n}\n/**\n * Retrieves the list of raw asynchronous validators attached to a given control.\n */\nfunction getControlAsyncValidators(control) {\n    return control._rawAsyncValidators;\n}\nlet AbstractControlDirective = /*@__PURE__*/ (() => {\n    class AbstractControlDirective {\n        constructor() {\n            /**\n             * Set of synchronous validators as they were provided while calling `setValidators` function.\n             * @internal\n             */\n            this._rawValidators = [];\n            /**\n             * Set of asynchronous validators as they were provided while calling `setAsyncValidators`\n             * function.\n             * @internal\n             */\n            this._rawAsyncValidators = [];\n            /*\n             * The set of callbacks to be invoked when directive instance is being destroyed.\n             */\n            this._onDestroyCallbacks = [];\n        }\n        /**\n         * @description\n         * Reports the value of the control if it is present, otherwise null.\n         */\n        get value() {\n            return this.control ? this.control.value : null;\n        }\n        /**\n         * @description\n         * Reports whether the control is valid. A control is considered valid if no\n         * validation errors exist with the current value.\n         * If the control is not present, null is returned.\n         */\n        get valid() {\n            return this.control ? this.control.valid : null;\n        }\n        /**\n         * @description\n         * Reports whether the control is invalid, meaning that an error exists in the input value.\n         * If the control is not present, null is returned.\n         */\n        get invalid() {\n            return this.control ? this.control.invalid : null;\n        }\n        /**\n         * @description\n         * Reports whether a control is pending, meaning that that async validation is occurring and\n         * errors are not yet available for the input value. If the control is not present, null is\n         * returned.\n         */\n        get pending() {\n            return this.control ? this.control.pending : null;\n        }\n        /**\n         * @description\n         * Reports whether the control is disabled, meaning that the control is disabled\n         * in the UI and is exempt from validation checks and excluded from aggregate\n         * values of ancestor controls. If the control is not present, null is returned.\n         */\n        get disabled() {\n            return this.control ? this.control.disabled : null;\n        }\n        /**\n         * @description\n         * Reports whether the control is enabled, meaning that the control is included in ancestor\n         * calculations of validity or value. If the control is not present, null is returned.\n         */\n        get enabled() {\n            return this.control ? this.control.enabled : null;\n        }\n        /**\n         * @description\n         * Reports the control's validation errors. If the control is not present, null is returned.\n         */\n        get errors() {\n            return this.control ? this.control.errors : null;\n        }\n        /**\n         * @description\n         * Reports whether the control is pristine, meaning that the user has not yet changed\n         * the value in the UI. If the control is not present, null is returned.\n         */\n        get pristine() {\n            return this.control ? this.control.pristine : null;\n        }\n        /**\n         * @description\n         * Reports whether the control is dirty, meaning that the user has changed\n         * the value in the UI. If the control is not present, null is returned.\n         */\n        get dirty() {\n            return this.control ? this.control.dirty : null;\n        }\n        /**\n         * @description\n         * Reports whether the control is touched, meaning that the user has triggered\n         * a `blur` event on it. If the control is not present, null is returned.\n         */\n        get touched() {\n            return this.control ? this.control.touched : null;\n        }\n        /**\n         * @description\n         * Reports the validation status of the control. Possible values include:\n         * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n         * If the control is not present, null is returned.\n         */\n        get status() {\n            return this.control ? this.control.status : null;\n        }\n        /**\n         * @description\n         * Reports whether the control is untouched, meaning that the user has not yet triggered\n         * a `blur` event on it. If the control is not present, null is returned.\n         */\n        get untouched() {\n            return this.control ? this.control.untouched : null;\n        }\n        /**\n         * @description\n         * Returns a multicasting observable that emits a validation status whenever it is\n         * calculated for the control. If the control is not present, null is returned.\n         */\n        get statusChanges() {\n            return this.control ? this.control.statusChanges : null;\n        }\n        /**\n         * @description\n         * Returns a multicasting observable of value changes for the control that emits every time the\n         * value of the control changes in the UI or programmatically.\n         * If the control is not present, null is returned.\n         */\n        get valueChanges() {\n            return this.control ? this.control.valueChanges : null;\n        }\n        /**\n         * @description\n         * Returns an array that represents the path from the top-level form to this control.\n         * Each index is the string name of the control on that level.\n         */\n        get path() {\n            return null;\n        }\n        /**\n         * Sets synchronous validators for this directive.\n         * @internal\n         */\n        _setValidators(validators) {\n            this._rawValidators = validators || [];\n            this._composedValidatorFn = composeValidators(this._rawValidators);\n        }\n        /**\n         * Sets asynchronous validators for this directive.\n         * @internal\n         */\n        _setAsyncValidators(validators) {\n            this._rawAsyncValidators = validators || [];\n            this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);\n        }\n        /**\n         * @description\n         * Synchronous validator function composed of all the synchronous validators registered with this\n         * directive.\n         */\n        get validator() {\n            return this._composedValidatorFn || null;\n        }\n        /**\n         * @description\n         * Asynchronous validator function composed of all the asynchronous validators registered with\n         * this directive.\n         */\n        get asyncValidator() {\n            return this._composedAsyncValidatorFn || null;\n        }\n        /**\n         * Internal function to register callbacks that should be invoked\n         * when directive instance is being destroyed.\n         * @internal\n         */\n        _registerOnDestroy(fn) {\n            this._onDestroyCallbacks.push(fn);\n        }\n        /**\n         * Internal function to invoke all registered \"on destroy\" callbacks.\n         * Note: calling this function also clears the list of callbacks.\n         * @internal\n         */\n        _invokeOnDestroyCallbacks() {\n            this._onDestroyCallbacks.forEach(fn => fn());\n            this._onDestroyCallbacks = [];\n        }\n        /**\n         * @description\n         * Resets the control with the provided value if the control is present.\n         */\n        reset(value = undefined) {\n            if (this.control)\n                this.control.reset(value);\n        }\n        /**\n         * @description\n         * Reports whether the control with the given path has the error specified.\n         *\n         * @param errorCode The code of the error to check\n         * @param path A list of control names that designates how to move from the current control\n         * to the control that should be queried for errors.\n         *\n         * @usageNotes\n         * For example, for the following `FormGroup`:\n         *\n         * ```\n         * form = new FormGroup({\n         *   address: new FormGroup({ street: new FormControl() })\n         * });\n         * ```\n         *\n         * The path to the 'street' control from the root form would be 'address' -> 'street'.\n         *\n         * It can be provided to this method in one of two formats:\n         *\n         * 1. An array of string control names, e.g. `['address', 'street']`\n         * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n         *\n         * If no path is given, this method checks for the error on the current control.\n         *\n         * @returns whether the given error is present in the control at the given path.\n         *\n         * If the control is not present, false is returned.\n         */\n        hasError(errorCode, path) {\n            return this.control ? this.control.hasError(errorCode, path) : false;\n        }\n        /**\n         * @description\n         * Reports error data for the control with the given path.\n         *\n         * @param errorCode The code of the error to check\n         * @param path A list of control names that designates how to move from the current control\n         * to the control that should be queried for errors.\n         *\n         * @usageNotes\n         * For example, for the following `FormGroup`:\n         *\n         * ```\n         * form = new FormGroup({\n         *   address: new FormGroup({ street: new FormControl() })\n         * });\n         * ```\n         *\n         * The path to the 'street' control from the root form would be 'address' -> 'street'.\n         *\n         * It can be provided to this method in one of two formats:\n         *\n         * 1. An array of string control names, e.g. `['address', 'street']`\n         * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n         *\n         * @returns error data for that particular error. If the control or error is not present,\n         * null is returned.\n         */\n        getError(errorCode, path) {\n            return this.control ? this.control.getError(errorCode, path) : null;\n        }\n    }\n    AbstractControlDirective.ɵfac = function AbstractControlDirective_Factory(t) { return new (t || AbstractControlDirective)(); };\n    AbstractControlDirective.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: AbstractControlDirective });\n    return AbstractControlDirective;\n})();\nlet ControlContainer = /*@__PURE__*/ (() => {\n    class ControlContainer extends AbstractControlDirective {\n        /**\n         * @description\n         * The top-level form directive for the control.\n         */\n        get formDirective() {\n            return null;\n        }\n        /**\n         * @description\n         * The path to this group.\n         */\n        get path() {\n            return null;\n        }\n    }\n    ControlContainer.ɵfac = function ControlContainer_Factory(t) { return ɵControlContainer_BaseFactory(t || ControlContainer); };\n    ControlContainer.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: ControlContainer, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"]] });\n    return ControlContainer;\n})();\nconst ɵControlContainer_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵgetInheritedFactory */ \"Ub\"](ControlContainer);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n    constructor() {\n        super(...arguments);\n        /**\n         * @description\n         * The parent form for the control.\n         *\n         * @internal\n         */\n        this._parent = null;\n        /**\n         * @description\n         * The name for the control\n         */\n        this.name = null;\n        /**\n         * @description\n         * The value accessor for the control\n         */\n        this.valueAccessor = null;\n    }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass AbstractControlStatus {\n    constructor(cd) {\n        this._cd = cd;\n    }\n    is(status) {\n        var _a, _b;\n        return !!((_b = (_a = this._cd) === null || _a === void 0 ? void 0 : _a.control) === null || _b === void 0 ? void 0 : _b[status]);\n    }\n}\nconst ngControlStatusHost = {\n    '[class.ng-untouched]': 'is(\"untouched\")',\n    '[class.ng-touched]': 'is(\"touched\")',\n    '[class.ng-pristine]': 'is(\"pristine\")',\n    '[class.ng-dirty]': 'is(\"dirty\")',\n    '[class.ng-valid]': 'is(\"valid\")',\n    '[class.ng-invalid]': 'is(\"invalid\")',\n    '[class.ng-pending]': 'is(\"pending\")',\n};\nlet NgControlStatus = /*@__PURE__*/ (() => {\n    class NgControlStatus extends AbstractControlStatus {\n        constructor(cd) {\n            super(cd);\n        }\n    }\n    NgControlStatus.ɵfac = function NgControlStatus_Factory(t) { return new (t || NgControlStatus)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NgControl, 2)); };\n    NgControlStatus.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: NgControlStatus, selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]], hostVars: 14, hostBindings: function NgControlStatus_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵclassProp */ \"Fb\"](\"ng-untouched\", ctx.is(\"untouched\"))(\"ng-touched\", ctx.is(\"touched\"))(\"ng-pristine\", ctx.is(\"pristine\"))(\"ng-dirty\", ctx.is(\"dirty\"))(\"ng-valid\", ctx.is(\"valid\"))(\"ng-invalid\", ctx.is(\"invalid\"))(\"ng-pending\", ctx.is(\"pending\"));\n            }\n        }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"]] });\n    return NgControlStatus;\n})();\nlet NgControlStatusGroup = /*@__PURE__*/ (() => {\n    class NgControlStatusGroup extends AbstractControlStatus {\n        constructor(cd) {\n            super(cd);\n        }\n    }\n    NgControlStatusGroup.ɵfac = function NgControlStatusGroup_Factory(t) { return new (t || NgControlStatusGroup)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](ControlContainer, 10)); };\n    NgControlStatusGroup.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: NgControlStatusGroup, selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]], hostVars: 14, hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵclassProp */ \"Fb\"](\"ng-untouched\", ctx.is(\"untouched\"))(\"ng-touched\", ctx.is(\"touched\"))(\"ng-pristine\", ctx.is(\"pristine\"))(\"ng-dirty\", ctx.is(\"dirty\"))(\"ng-valid\", ctx.is(\"valid\"))(\"ng-invalid\", ctx.is(\"invalid\"))(\"ng-pending\", ctx.is(\"pending\"));\n            }\n        }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"]] });\n    return NgControlStatusGroup;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst FormErrorExamples = {\n    formControlName: `\n    <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });`,\n    formGroupName: `\n    <div [formGroup]=\"myGroup\">\n       <div formGroupName=\"person\">\n          <input formControlName=\"firstName\">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });`,\n    formArrayName: `\n    <div [formGroup]=\"myGroup\">\n      <div formArrayName=\"cities\">\n        <div *ngFor=\"let city of cityArray.controls; index as i\">\n          <input [formControlName]=\"i\">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl('SF')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });`,\n    ngModelGroup: `\n    <form>\n       <div ngModelGroup=\"person\">\n          <input [(ngModel)]=\"person.name\" name=\"firstName\">\n       </div>\n    </form>`,\n    ngModelWithFormGroup: `\n    <div [formGroup]=\"myGroup\">\n       <input formControlName=\"firstName\">\n       <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n    </div>\n  `\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ReactiveErrors {\n    static controlParentException() {\n        throw new Error(`formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formControlName}`);\n    }\n    static ngModelGroupException() {\n        throw new Error(`formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        ${FormErrorExamples.formGroupName}\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        ${FormErrorExamples.ngModelGroup}`);\n    }\n    static missingFormException() {\n        throw new Error(`formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       ${FormErrorExamples.formControlName}`);\n    }\n    static groupParentException() {\n        throw new Error(`formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formGroupName}`);\n    }\n    static arrayParentException() {\n        throw new Error(`formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        ${FormErrorExamples.formArrayName}`);\n    }\n    static disabledAttrWarning() {\n        console.warn(`\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n\n      Example:\n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    `);\n    }\n    static ngModelWarning(directiveName) {\n        console.warn(`\n    It looks like you're using ngModel on the same form field as ${directiveName}.\n    Support for using the ngModel input property and ngModelChange event with\n    reactive form directives has been deprecated in Angular v6 and will be removed\n    in a future version of Angular.\n\n    For more information on this, see our API docs here:\n    https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' :\n            'FormControlName'}#use-with-ngmodel\n    `);\n    }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction controlPath(name, parent) {\n    return [...parent.path, name];\n}\n/**\n * Links a Form control and a Form directive by setting up callbacks (such as `onChange`) on both\n * instances. This function is typically invoked when form directive is being initialized.\n *\n * @param control Form control instance that should be linked.\n * @param dir Directive that should be linked with a given control.\n */\nfunction setUpControl(control, dir) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!control)\n            _throwError(dir, 'Cannot find control with');\n        if (!dir.valueAccessor)\n            _throwError(dir, 'No value accessor for form control with');\n    }\n    setUpValidators(control, dir, /* handleOnValidatorChange */ true);\n    dir.valueAccessor.writeValue(control.value);\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    setUpDisabledChangeHandler(control, dir);\n}\n/**\n * Reverts configuration performed by the `setUpControl` control function.\n * Effectively disconnects form control with a given form directive.\n * This function is typically invoked when corresponding form directive is being destroyed.\n *\n * @param control Form control which should be cleaned up.\n * @param dir Directive that should be disconnected from a given control.\n * @param validateControlPresenceOnChange Flag that indicates whether onChange handler should\n *     contain asserts to verify that it's not called once directive is destroyed. We need this flag\n *     to avoid potentially breaking changes caused by better control cleanup introduced in #39235.\n */\nfunction cleanUpControl(control, dir, validateControlPresenceOnChange = true) {\n    const noop = () => {\n        if (validateControlPresenceOnChange && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            _noControlError(dir);\n        }\n    };\n    // The `valueAccessor` field is typically defined on FromControl and FormControlName directive\n    // instances and there is a logic in `selectValueAccessor` function that throws if it's not the\n    // case. We still check the presence of `valueAccessor` before invoking its methods to make sure\n    // that cleanup works correctly if app code or tests are setup to ignore the error thrown from\n    // `selectValueAccessor`. See https://github.com/angular/angular/issues/40521.\n    if (dir.valueAccessor) {\n        dir.valueAccessor.registerOnChange(noop);\n        dir.valueAccessor.registerOnTouched(noop);\n    }\n    cleanUpValidators(control, dir, /* handleOnValidatorChange */ true);\n    if (control) {\n        dir._invokeOnDestroyCallbacks();\n        control._registerOnCollectionChange(() => { });\n    }\n}\nfunction registerOnValidatorChange(validators, onChange) {\n    validators.forEach((validator) => {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(onChange);\n    });\n}\n/**\n * Sets up disabled change handler function on a given form control if ControlValueAccessor\n * associated with a given directive instance supports the `setDisabledState` call.\n *\n * @param control Form control where disabled change handler should be setup.\n * @param dir Corresponding directive instance associated with this control.\n */\nfunction setUpDisabledChangeHandler(control, dir) {\n    if (dir.valueAccessor.setDisabledState) {\n        const onDisabledChange = (isDisabled) => {\n            dir.valueAccessor.setDisabledState(isDisabled);\n        };\n        control.registerOnDisabledChange(onDisabledChange);\n        // Register a callback function to cleanup disabled change handler\n        // from a control instance when a directive is destroyed.\n        dir._registerOnDestroy(() => {\n            control._unregisterOnDisabledChange(onDisabledChange);\n        });\n    }\n}\n/**\n * Sets up sync and async directive validators on provided form control.\n * This function merges validators from the directive into the validators of the control.\n *\n * @param control Form control where directive validators should be setup.\n * @param dir Directive instance that contains validators to be setup.\n * @param handleOnValidatorChange Flag that determines whether directive validators should be setup\n *     to handle validator input change.\n */\nfunction setUpValidators(control, dir, handleOnValidatorChange) {\n    const validators = getControlValidators(control);\n    if (dir.validator !== null) {\n        control.setValidators(mergeValidators(validators, dir.validator));\n    }\n    else if (typeof validators === 'function') {\n        // If sync validators are represented by a single validator function, we force the\n        // `Validators.compose` call to happen by executing the `setValidators` function with\n        // an array that contains that function. We need this to avoid possible discrepancies in\n        // validators behavior, so sync validators are always processed by the `Validators.compose`.\n        // Note: we should consider moving this logic inside the `setValidators` function itself, so we\n        // have consistent behavior on AbstractControl API level. The same applies to the async\n        // validators logic below.\n        control.setValidators([validators]);\n    }\n    const asyncValidators = getControlAsyncValidators(control);\n    if (dir.asyncValidator !== null) {\n        control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));\n    }\n    else if (typeof asyncValidators === 'function') {\n        control.setAsyncValidators([asyncValidators]);\n    }\n    // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    if (handleOnValidatorChange) {\n        const onValidatorChange = () => control.updateValueAndValidity();\n        registerOnValidatorChange(dir._rawValidators, onValidatorChange);\n        registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);\n    }\n}\n/**\n * Cleans up sync and async directive validators on provided form control.\n * This function reverts the setup performed by the `setUpValidators` function, i.e.\n * removes directive-specific validators from a given control instance.\n *\n * @param control Form control from where directive validators should be removed.\n * @param dir Directive instance that contains validators to be removed.\n * @param handleOnValidatorChange Flag that determines whether directive validators should also be\n *     cleaned up to stop handling validator input change (if previously configured to do so).\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpValidators(control, dir, handleOnValidatorChange) {\n    let isControlUpdated = false;\n    if (control !== null) {\n        if (dir.validator !== null) {\n            const validators = getControlValidators(control);\n            if (Array.isArray(validators) && validators.length > 0) {\n                // Filter out directive validator function.\n                const updatedValidators = validators.filter(validator => validator !== dir.validator);\n                if (updatedValidators.length !== validators.length) {\n                    isControlUpdated = true;\n                    control.setValidators(updatedValidators);\n                }\n            }\n        }\n        if (dir.asyncValidator !== null) {\n            const asyncValidators = getControlAsyncValidators(control);\n            if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {\n                // Filter out directive async validator function.\n                const updatedAsyncValidators = asyncValidators.filter(asyncValidator => asyncValidator !== dir.asyncValidator);\n                if (updatedAsyncValidators.length !== asyncValidators.length) {\n                    isControlUpdated = true;\n                    control.setAsyncValidators(updatedAsyncValidators);\n                }\n            }\n        }\n    }\n    if (handleOnValidatorChange) {\n        // Clear onValidatorChange callbacks by providing a noop function.\n        const noop = () => { };\n        registerOnValidatorChange(dir._rawValidators, noop);\n        registerOnValidatorChange(dir._rawAsyncValidators, noop);\n    }\n    return isControlUpdated;\n}\nfunction setUpViewChangePipeline(control, dir) {\n    dir.valueAccessor.registerOnChange((newValue) => {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    });\n}\nfunction setUpBlurPipeline(control, dir) {\n    dir.valueAccessor.registerOnTouched(() => {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    });\n}\nfunction updateControl(control, dir) {\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    dir.viewToModelUpdate(control._pendingValue);\n    control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n    const onChange = (newValue, emitModelEvent) => {\n        // control -> view\n        dir.valueAccessor.writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    };\n    control.registerOnChange(onChange);\n    // Register a callback function to cleanup onChange handler\n    // from a control instance when a directive is destroyed.\n    dir._registerOnDestroy(() => {\n        control._unregisterOnChange(onChange);\n    });\n}\n/**\n * Links a FormGroup or FormArray instance and corresponding Form directive by setting up validators\n * present in the view.\n *\n * @param control FormGroup or FormArray instance that should be linked.\n * @param dir Directive that provides view validators.\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwError(dir, 'Cannot find control with');\n    setUpValidators(control, dir, /* handleOnValidatorChange */ false);\n}\n/**\n * Reverts the setup performed by the `setUpFormContainer` function.\n *\n * @param control FormGroup or FormArray instance that should be cleaned up.\n * @param dir Directive that provided view validators.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpFormContainer(control, dir) {\n    return cleanUpValidators(control, dir, /* handleOnValidatorChange */ false);\n}\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n    let messageEnd;\n    if (dir.path.length > 1) {\n        messageEnd = `path: '${dir.path.join(' -> ')}'`;\n    }\n    else if (dir.path[0]) {\n        messageEnd = `name: '${dir.path}'`;\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(`${message} ${messageEnd}`);\n}\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    const change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !Object.is(viewModel, change.currentValue);\n}\nfunction isBuiltInAccessor(valueAccessor) {\n    // Check if a given value accessor is an instance of a class that directly extends\n    // `BuiltInControlValueAccessor` one.\n    return Object.getPrototypeOf(valueAccessor.constructor) === BuiltInControlValueAccessor;\n}\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach(dir => {\n        const control = dir.control;\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwError(dir, 'Value accessor was not provided as an array for form control with');\n    let defaultAccessor = undefined;\n    let builtinAccessor = undefined;\n    let customAccessor = undefined;\n    valueAccessors.forEach((v) => {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _throwError(dir, 'No valid value accessor for form control with');\n    }\n    return null;\n}\nfunction removeListItem(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n    if (warningConfig === 'never')\n        return;\n    if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n        (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n        ReactiveErrors.ngModelWarning(name);\n        type._ngModelWarningSentOnce = true;\n        instance._ngModelWarningSent = true;\n    }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reports that a FormControl is valid, meaning that no errors exist in the input value.\n *\n * @see `status`\n */\nconst VALID = 'VALID';\n/**\n * Reports that a FormControl is invalid, meaning that an error exists in the input value.\n *\n * @see `status`\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a FormControl is pending, meaning that that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see `markAsPending`\n * @see `status`\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a FormControl is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see `markAsDisabled`\n * @see `status`\n */\nconst DISABLED = 'DISABLED';\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!Array.isArray(path)) {\n        path = path.split(delimiter);\n    }\n    if (Array.isArray(path) && path.length === 0)\n        return null;\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    let controlToFind = control;\n    path.forEach((name) => {\n        if (controlToFind instanceof FormGroup) {\n            controlToFind = controlToFind.controls.hasOwnProperty(name) ?\n                controlToFind.controls[name] :\n                null;\n        }\n        else if (controlToFind instanceof FormArray) {\n            controlToFind = controlToFind.at(name) || null;\n        }\n        else {\n            controlToFind = null;\n        }\n    });\n    return controlToFind;\n}\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) :\n        asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n    return validatorOrOpts != null && !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object';\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * @publicApi\n */\nclass AbstractControl {\n    /**\n     * Initialize the AbstractControl instance.\n     *\n     * @param validators The function or array of functions that is used to determine the validity of\n     *     this control synchronously.\n     * @param asyncValidators The function or array of functions that is used to determine validity of\n     *     this control asynchronously.\n     */\n    constructor(validators, asyncValidators) {\n        /**\n         * Indicates that a control has its own pending asynchronous validation in progress.\n         *\n         * @internal\n         */\n        this._hasOwnPendingAsyncValidator = false;\n        /** @internal */\n        this._onCollectionChange = () => { };\n        this._parent = null;\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n         * Programmatic changes to a control's value do not mark it dirty.\n         */\n        this.pristine = true;\n        /**\n         * True if the control is marked as `touched`.\n         *\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         */\n        this.touched = false;\n        /** @internal */\n        this._onDisabledChange = [];\n        this._rawValidators = validators;\n        this._rawAsyncValidators = asyncValidators;\n        this._composedValidatorFn = coerceToValidator(this._rawValidators);\n        this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n    }\n    /**\n     * The function that is used to determine the validity of this control synchronously.\n     */\n    get validator() {\n        return this._composedValidatorFn;\n    }\n    set validator(validatorFn) {\n        this._rawValidators = this._composedValidatorFn = validatorFn;\n    }\n    /**\n     * The function that is used to determine the validity of this control asynchronously.\n     */\n    get asyncValidator() {\n        return this._composedAsyncValidatorFn;\n    }\n    set asyncValidator(asyncValidatorFn) {\n        this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n    }\n    /**\n     * The parent control.\n     */\n    get parent() {\n        return this._parent;\n    }\n    /**\n     * A control is `valid` when its `status` is `VALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control has passed all of its validation tests,\n     * false otherwise.\n     */\n    get valid() {\n        return this.status === VALID;\n    }\n    /**\n     * A control is `invalid` when its `status` is `INVALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control has failed one or more of its validation checks,\n     * false otherwise.\n     */\n    get invalid() {\n        return this.status === INVALID;\n    }\n    /**\n     * A control is `pending` when its `status` is `PENDING`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control is in the process of conducting a validation check,\n     * false otherwise.\n     */\n    get pending() {\n        return this.status == PENDING;\n    }\n    /**\n     * A control is `disabled` when its `status` is `DISABLED`.\n     *\n     * Disabled controls are exempt from validation checks and\n     * are not included in the aggregate value of their ancestor\n     * controls.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control is disabled, false otherwise.\n     */\n    get disabled() {\n        return this.status === DISABLED;\n    }\n    /**\n     * A control is `enabled` as long as its `status` is not `DISABLED`.\n     *\n     * @returns True if the control has any status other than 'DISABLED',\n     * false if the status is 'DISABLED'.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     */\n    get enabled() {\n        return this.status !== DISABLED;\n    }\n    /**\n     * A control is `dirty` if the user has changed the value\n     * in the UI.\n     *\n     * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get dirty() {\n        return !this.pristine;\n    }\n    /**\n     * True if the control has not been marked as touched\n     *\n     * A control is `untouched` if the user has not yet triggered\n     * a `blur` event on it.\n     */\n    get untouched() {\n        return !this.touched;\n    }\n    /**\n     * Reports the update strategy of the `AbstractControl` (meaning\n     * the event on which the control updates itself).\n     * Possible values: `'change'` | `'blur'` | `'submit'`\n     * Default value: `'change'`\n     */\n    get updateOn() {\n        return this._updateOn ? this._updateOn : (this.parent ? this.parent.updateOn : 'change');\n    }\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this overwrites any existing sync validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    setValidators(newValidator) {\n        this._rawValidators = newValidator;\n        this._composedValidatorFn = coerceToValidator(newValidator);\n    }\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * overwrites any existing async validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    setAsyncValidators(newValidator) {\n        this._rawAsyncValidators = newValidator;\n        this._composedAsyncValidatorFn = coerceToAsyncValidator(newValidator);\n    }\n    /**\n     * Empties out the sync validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearValidators() {\n        this.validator = null;\n    }\n    /**\n     * Empties out the async validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearAsyncValidators() {\n        this.asyncValidator = null;\n    }\n    /**\n     * Marks the control as `touched`. A control is touched by focus and\n     * blur events that do not change the value.\n     *\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsTouched(opts = {}) {\n        this.touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    }\n    /**\n     * Marks the control and all its descendant controls as `touched`.\n     * @see `markAsTouched()`\n     */\n    markAllAsTouched() {\n        this.markAsTouched({ onlySelf: true });\n        this._forEachChild((control) => control.markAllAsTouched());\n    }\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, also marks all children as `untouched`\n     * and recalculates the `touched` status of all parent controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after the marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsUntouched(opts = {}) {\n        this.touched = false;\n        this._pendingTouched = false;\n        this._forEachChild((control) => {\n            control.markAsUntouched({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /**\n     * Marks the control as `dirty`. A control becomes dirty when\n     * the control's value is changed through the UI; compare `markAsTouched`.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsDirty(opts = {}) {\n        this.pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    }\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, marks all children as `pristine`,\n     * and recalculates the `pristine` status of all parent\n     * controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     *\n     * @param opts Configuration options that determine how the control emits events after\n     * marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsPristine(opts = {}) {\n        this.pristine = true;\n        this._pendingDirty = false;\n        this._forEachChild((control) => {\n            control.markAsPristine({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /**\n     * Marks the control as `pending`.\n     *\n     * A control is pending while the control performs async validation.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates changes and\n     * emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n     * observable emits an event with the latest status the control is marked pending.\n     * When false, no events are emitted.\n     *\n     */\n    markAsPending(opts = {}) {\n        this.status = PENDING;\n        if (opts.emitEvent !== false) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    }\n    /**\n     * Disables the control. This means the control is exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children are also disabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates\n     * changes and emits events after the control is disabled.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is disabled.\n     * When false, no events are emitted.\n     */\n    disable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = DISABLED;\n        this.errors = null;\n        this._forEachChild((control) => {\n            control.disable(Object.assign(Object.assign({}, opts), { onlySelf: true }));\n        });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((changeFn) => changeFn(true));\n    }\n    /**\n     * Enables the control. This means the control is included in validation checks and\n     * the aggregate value of its parent. Its status recalculates based on its value and\n     * its validators.\n     *\n     * By default, if the control has children, all children are enabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configure options that control how the control propagates changes and\n     * emits events when marked as untouched\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is enabled.\n     * When false, no events are emitted.\n     */\n    enable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = VALID;\n        this._forEachChild((control) => {\n            control.enable(Object.assign(Object.assign({}, opts), { onlySelf: true }));\n        });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((changeFn) => changeFn(false));\n    }\n    _updateAncestors(opts) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            if (!opts.skipPristineCheck) {\n                this._parent._updatePristine();\n            }\n            this._parent._updateTouched();\n        }\n    }\n    /**\n     * @param parent Sets the parent of the control\n     */\n    setParent(parent) {\n        this._parent = parent;\n    }\n    /**\n     * Recalculates the value and validation status of the control.\n     *\n     * By default, it also updates the value and validity of its ancestors.\n     *\n     * @param opts Configuration options determine how the control propagates changes and emits events\n     * after updates and validity checks are applied.\n     * * `onlySelf`: When true, only update this control. When false or not supplied,\n     * update all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is updated.\n     * When false, no events are emitted.\n     */\n    updateValueAndValidity(opts = {}) {\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            this.errors = this._runValidator();\n            this.status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    }\n    /** @internal */\n    _updateTreeValidity(opts = { emitEvent: true }) {\n        this._forEachChild((ctrl) => ctrl._updateTreeValidity(opts));\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    }\n    _setInitialStatus() {\n        this.status = this._allControlsDisabled() ? DISABLED : VALID;\n    }\n    _runValidator() {\n        return this.validator ? this.validator(this) : null;\n    }\n    _runAsyncValidator(emitEvent) {\n        if (this.asyncValidator) {\n            this.status = PENDING;\n            this._hasOwnPendingAsyncValidator = true;\n            const obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription = obs.subscribe((errors) => {\n                this._hasOwnPendingAsyncValidator = false;\n                // This will trigger the recalculation of the validation status, which depends on\n                // the state of the asynchronous validation (whether it is in progress or not). So, it is\n                // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n                this.setErrors(errors, { emitEvent });\n            });\n        }\n    }\n    _cancelExistingSubscription() {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n            this._hasOwnPendingAsyncValidator = false;\n        }\n    }\n    /**\n     * Sets errors on a form control when running validations manually, rather than automatically.\n     *\n     * Calling `setErrors` also updates the validity of the parent control.\n     *\n     * @usageNotes\n     *\n     * ### Manually set the errors for a control\n     *\n     * ```\n     * const login = new FormControl('someLogin');\n     * login.setErrors({\n     *   notUnique: true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({ notUnique: true });\n     *\n     * login.setValue('someOtherLogin');\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     */\n    setErrors(errors, opts = {}) {\n        this.errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    }\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * @param path A dot-delimited string or array of string/number values that define the path to the\n     * control.\n     *\n     * @usageNotes\n     * ### Retrieve a nested control\n     *\n     * For example, to get a `name` control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     *\n     * ### Retrieve a control in a FormArray\n     *\n     * When accessing an element inside a FormArray, you can use an element index.\n     * For example, to get a `price` control from the first element in an `items` array you can use:\n     *\n     * * `this.form.get('items.0.price');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['items', 0, 'price']);`\n     */\n    get(path) {\n        return _find(this, path, '.');\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        const control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return !!this.getError(errorCode, path);\n    }\n    /**\n     * Retrieves the top-level ancestor of this control.\n     */\n    get root() {\n        let x = this;\n        while (x._parent) {\n            x = x._parent;\n        }\n        return x;\n    }\n    /** @internal */\n    _updateControlsErrors(emitEvent) {\n        this.status = this._calculateStatus();\n        if (emitEvent) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    }\n    /** @internal */\n    _initObservables() {\n        this.valueChanges = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* EventEmitter */ \"o\"]();\n        this.statusChanges = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* EventEmitter */ \"o\"]();\n    }\n    _calculateStatus() {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    }\n    /** @internal */\n    _anyControlsHaveStatus(status) {\n        return this._anyControls((control) => control.status === status);\n    }\n    /** @internal */\n    _anyControlsDirty() {\n        return this._anyControls((control) => control.dirty);\n    }\n    /** @internal */\n    _anyControlsTouched() {\n        return this._anyControls((control) => control.touched);\n    }\n    /** @internal */\n    _updatePristine(opts = {}) {\n        this.pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /** @internal */\n    _updateTouched(opts = {}) {\n        this.touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /** @internal */\n    _isBoxedValue(formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    }\n    /** @internal */\n    _registerOnCollectionChange(fn) {\n        this._onCollectionChange = fn;\n    }\n    /** @internal */\n    _setUpdateStrategy(opts) {\n        if (isOptionsObj(opts) && opts.updateOn != null) {\n            this._updateOn = opts.updateOn;\n        }\n    }\n    /**\n     * Check to see if parent has been marked artificially dirty.\n     *\n     * @internal\n     */\n    _parentMarkedDirty(onlySelf) {\n        const parentDirty = this._parent && this._parent.dirty;\n        return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();\n    }\n}\n/**\n * Tracks the value and validation status of an individual form control.\n *\n * This is one of the three fundamental building blocks of Angular forms, along with\n * `FormGroup` and `FormArray`. It extends the `AbstractControl` class that\n * implements most of the base functionality for accessing the value, validation status,\n * user interactions and events. See [usage examples below](#usage-notes).\n *\n * @see `AbstractControl`\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see [Usage Notes](#usage-notes)\n *\n * @usageNotes\n *\n * ### Initializing Form Controls\n *\n * Instantiate a `FormControl`, with an initial value.\n *\n * ```ts\n * const control = new FormControl('some value');\n * console.log(control.value);     // 'some value'\n *```\n *\n * The following example initializes the control with a form state object. The `value`\n * and `disabled` keys are required in this case.\n *\n * ```ts\n * const control = new FormControl({ value: 'n/a', disabled: true });\n * console.log(control.value);     // 'n/a'\n * console.log(control.status);    // 'DISABLED'\n * ```\n *\n * The following example initializes the control with a sync validator.\n *\n * ```ts\n * const control = new FormControl('', Validators.required);\n * console.log(control.value);      // ''\n * console.log(control.status);     // 'INVALID'\n * ```\n *\n * The following example initializes the control using an options object.\n *\n * ```ts\n * const control = new FormControl('', {\n *    validators: Validators.required,\n *    asyncValidators: myAsyncValidator\n * });\n * ```\n *\n * ### Configure the control to update on a blur event\n *\n * Set the `updateOn` option to `'blur'` to update on the blur `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'blur' });\n * ```\n *\n * ### Configure the control to update on a submit event\n *\n * Set the `updateOn` option to `'submit'` to update on a submit `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'submit' });\n * ```\n *\n * ### Reset the control back to an initial value\n *\n * You reset to a specific form state by passing through a standalone\n * value or a form state object that contains both a value and a disabled state\n * (these are the only two properties that cannot be calculated).\n *\n * ```ts\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n *\n * control.reset('Drew');\n *\n * console.log(control.value); // 'Drew'\n * ```\n *\n * ### Reset the control back to an initial value and disabled\n *\n * ```\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n * console.log(control.status); // 'VALID'\n *\n * control.reset({ value: 'Drew', disabled: true });\n *\n * console.log(control.value); // 'Drew'\n * console.log(control.status); // 'DISABLED'\n * ```\n *\n * @publicApi\n */\nclass FormControl extends AbstractControl {\n    /**\n     * Creates a new `FormControl` instance.\n     *\n     * @param formState Initializes the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(formState = null, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        /** @internal */\n        this._onChange = [];\n        this._applyFormState(formState);\n        this._setUpdateStrategy(validatorOrOpts);\n        this._initObservables();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`.\n            // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n            // to `true` to allow that during the control creation process.\n            emitEvent: !!asyncValidator\n        });\n    }\n    /**\n     * Sets a new value for the form control.\n     *\n     * @param value The new value for the control.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * * `emitModelToViewChange`: When true or not supplied  (the default), each change triggers an\n     * `onChange` event to\n     * update the view.\n     * * `emitViewToModelChange`: When true or not supplied (the default), each change triggers an\n     * `ngModelChange`\n     * event to update the model.\n     *\n     */\n    setValue(value, options = {}) {\n        this.value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach((changeFn) => changeFn(this.value, options.emitViewToModelChange !== false));\n        }\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {@link FormControl#setValue setValue} at this level.\n     * It exists for symmetry with {@link FormGroup#patchValue patchValue} on `FormGroups` and\n     * `FormArrays`, where it does behave differently.\n     *\n     * @see `setValue` for options\n     */\n    patchValue(value, options = {}) {\n        this.setValue(value, options);\n    }\n    /**\n     * Resets the form control, marking it `pristine` and `untouched`, and setting\n     * the value to null.\n     *\n     * @param formState Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     *\n     */\n    reset(formState = null, options = {}) {\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    }\n    /**\n     * @internal\n     */\n    _updateValue() { }\n    /**\n     * @internal\n     */\n    _anyControls(condition) {\n        return false;\n    }\n    /**\n     * @internal\n     */\n    _allControlsDisabled() {\n        return this.disabled;\n    }\n    /**\n     * Register a listener for change events.\n     *\n     * @param fn The method that is called when the value changes\n     */\n    registerOnChange(fn) {\n        this._onChange.push(fn);\n    }\n    /**\n     * Internal function to unregister a change events listener.\n     * @internal\n     */\n    _unregisterOnChange(fn) {\n        removeListItem(this._onChange, fn);\n    }\n    /**\n     * Register a listener for disabled events.\n     *\n     * @param fn The method that is called when the disabled status changes.\n     */\n    registerOnDisabledChange(fn) {\n        this._onDisabledChange.push(fn);\n    }\n    /**\n     * Internal function to unregister a disabled event listener.\n     * @internal\n     */\n    _unregisterOnDisabledChange(fn) {\n        removeListItem(this._onDisabledChange, fn);\n    }\n    /**\n     * @internal\n     */\n    _forEachChild(cb) { }\n    /** @internal */\n    _syncPendingControls() {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    }\n    _applyFormState(formState) {\n        if (this._isBoxedValue(formState)) {\n            this.value = this._pendingValue = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this.value = this._pendingValue = formState;\n        }\n    }\n}\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormArray`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n    /**\n     * Creates a new `FormGroup` instance.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,\n            // so we set `emitEvent` to `true` to allow that during the control creation process.\n            emitEvent: !!asyncValidator\n        });\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update the value or validity of the control.\n     * Use {@link FormGroup#addControl addControl} instead.\n     *\n     * @param name The control name to register in the collection\n     * @param control Provides the control for the given name\n     */\n    registerControl(name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    }\n    /**\n     * Add a control to this group.\n     *\n     * This method also updates the value and validity of the control.\n     *\n     * @param name The control name to add to the collection\n     * @param control Provides the control for the given name\n     */\n    addControl(name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Remove a control from this group.\n     *\n     * @param name The control name to remove from the collection\n     */\n    removeControl(name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param name The control name to replace in the collection\n     * @param control Provides the control for the given name\n     */\n    setControl(name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * Reports false for disabled controls. If you'd like to check for existence in the group\n     * only, use {@link AbstractControl#get get} instead.\n     *\n     * @param controlName The control name to check for existence in the collection\n     *\n     * @returns false for disabled controls, true otherwise.\n     */\n    contains(controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    }\n    /**\n     * Sets the value of the `FormGroup`. It accepts an object that matches\n     * the structure of the group, with control names as keys.\n     *\n     * @usageNotes\n     * ### Set the complete value for the form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl(),\n     *   last: new FormControl()\n     * });\n     *\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.setValue({first: 'Nancy', last: 'Drew'});\n     * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     * ```\n     *\n     * @throws When strict checks fail, such as setting the value of a control\n     * that doesn't exist or if you exclude a value of a control that does exist.\n     *\n     * @param value The new value for the control that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(name => {\n            this._throwIfControlMissing(name);\n            this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormGroup`. It accepts an object with control\n     * names as keys, and does its best to match the values to the correct controls\n     * in the group.\n     *\n     * It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the value for a form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *    first: new FormControl(),\n     *    last: new FormControl()\n     * });\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.patchValue({first: 'Nancy'});\n     * console.log(form.value);   // {first: 'Nancy', last: null}\n     * ```\n     *\n     * @param value The object that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes and\n     * emits events after the value is patched.\n     * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n     * true.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control value\n     * is updated. When false, no events are emitted. The configuration options are passed to\n     * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n        // `patchValue` can be called recursively and inner data structures might have these values, so\n        // we just ignore such cases when a field containing FormGroup instance receives `null` or\n        // `undefined` as a value.\n        if (value == null /* both `null` and `undefined` */)\n            return;\n        Object.keys(value).forEach(name => {\n            if (this.controls[name]) {\n                this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n     * the value of all descendants to null.\n     *\n     * You reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * is a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * @param value Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the group is reset.\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * @usageNotes\n     *\n     * ### Reset the form group values\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * console.log(form.value);  // {first: 'first name', last: 'last name'}\n     *\n     * form.reset({ first: 'name', last: 'last name' });\n     *\n     * console.log(form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * ### Reset the form group values and disabled status\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(form.value);  // {last: 'last'}\n     * console.log(form.get('first').status);  // 'DISABLED'\n     * ```\n     */\n    reset(value = {}, options = {}) {\n        this._forEachChild((control, name) => {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the `FormGroup`, including any disabled controls.\n     *\n     * Retrieves all values regardless of disabled status.\n     * The `value` property is the best way to get the value of the group, because\n     * it excludes disabled controls in the `FormGroup`.\n     */\n    getRawValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            acc[name] = control instanceof FormControl ? control.value : control.getRawValue();\n            return acc;\n        });\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        });\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _throwIfControlMissing(name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(`\n        There are no form controls registered with this group yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.controls[name]) {\n            throw new Error(`Cannot find form control with name: ${name}.`);\n        }\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        Object.keys(this.controls).forEach(key => {\n            // The list of controls can change (for ex. controls might be removed) while the loop\n            // is running (as a result of invoking Forms API in `valueChanges` subscription), so we\n            // have to null check before invoking the callback.\n            const control = this.controls[key];\n            control && cb(control, key);\n        });\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value = this._reduceValue();\n    }\n    /** @internal */\n    _anyControls(condition) {\n        for (const controlName of Object.keys(this.controls)) {\n            const control = this.controls[controlName];\n            if (this.contains(controlName) && condition(control)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** @internal */\n    _reduceValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            if (control.enabled || this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    }\n    /** @internal */\n    _reduceChildren(initValue, fn) {\n        let res = initValue;\n        this._forEachChild((control, name) => {\n            res = fn(res, control, name);\n        });\n        return res;\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const controlName of Object.keys(this.controls)) {\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    }\n    /** @internal */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((control, name) => {\n            if (value[name] === undefined) {\n                throw new Error(`Must supply a value for form control with name: '${name}'.`);\n            }\n        });\n    }\n}\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormGroup`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n    /**\n     * Creates a new `FormArray` instance.\n     *\n     * @param controls An array of child controls. Each child control is given an index\n     * where it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`.\n            // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n            // to `true` to allow that during the control creation process.\n            emitEvent: !!asyncValidator\n        });\n    }\n    /**\n     * Get the `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to retrieve the control\n     */\n    at(index) {\n        return this.controls[index];\n    }\n    /**\n     * Insert a new `AbstractControl` at the end of the array.\n     *\n     * @param control Form control to be inserted\n     */\n    push(control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Insert a new `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to insert the control\n     * @param control Form control to be inserted\n     */\n    insert(index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Remove the control at the given `index` in the array.\n     *\n     * @param index Index in the array to remove the control\n     */\n    removeAt(index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(() => { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param index Index in the array to replace the control\n     * @param control The `AbstractControl` control to replace the existing control\n     */\n    setControl(index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(() => { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Length of the control array.\n     */\n    get length() {\n        return this.controls.length;\n    }\n    /**\n     * Sets the value of the `FormArray`. It accepts an array that matches\n     * the structure of the control.\n     *\n     * This method performs strict checks, and throws an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     * @usageNotes\n     * ### Set the values for the controls in the form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl(),\n     *   new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.setValue(['Nancy', 'Drew']);\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        value.forEach((newValue, index) => {\n            this._throwIfControlMissing(index);\n            this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormArray`. It accepts an array that matches the\n     * structure of the control, and does its best to match the values to the correct\n     * controls in the group.\n     *\n     * It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the values for controls in a form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.patchValue(['Nancy']);\n     * console.log(arr.value);   // ['Nancy', null]\n     * ```\n     *\n     * @param value Array of latest values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control value\n     * is updated. When false, no events are emitted. The configuration options are passed to\n     * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n        // `patchValue` can be called recursively and inner data structures might have these values, so\n        // we just ignore such cases when a field containing FormArray instance receives `null` or\n        // `undefined` as a value.\n        if (value == null /* both `null` and `undefined` */)\n            return;\n        value.forEach((newValue, index) => {\n            if (this.at(index)) {\n                this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n     * value of all descendants to null or null maps.\n     *\n     * You reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state is a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * @usageNotes\n     * ### Reset the values in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * ### Reset the values in a form array and the disabled status for the first control\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    reset(value = [], options = {}) {\n        this._forEachChild((control, index) => {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * Reports all values regardless of disabled status.\n     * For enabled controls only, the `value` property is the best way to get the value of the array.\n     */\n    getRawValue() {\n        return this.controls.map((control) => {\n            return control instanceof FormControl ? control.value : control.getRawValue();\n        });\n    }\n    /**\n     * Remove all controls in the `FormArray`.\n     *\n     * @usageNotes\n     * ### Remove all elements from a FormArray\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.length);  // 2\n     *\n     * arr.clear();\n     * console.log(arr.length);  // 0\n     * ```\n     *\n     * It's a simpler and more efficient alternative to removing all elements one by one:\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     *\n     * while (arr.length) {\n     *    arr.removeAt(0);\n     * }\n     * ```\n     */\n    clear() {\n        if (this.controls.length < 1)\n            return;\n        this._forEachChild((control) => control._registerOnCollectionChange(() => { }));\n        this.controls.splice(0);\n        this.updateValueAndValidity();\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this.controls.reduce((updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        }, false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _throwIfControlMissing(index) {\n        if (!this.controls.length) {\n            throw new Error(`\n        There are no form controls registered with this array yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.at(index)) {\n            throw new Error(`Cannot find form control at index ${index}`);\n        }\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        this.controls.forEach((control, index) => {\n            cb(control, index);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value =\n            this.controls.filter((control) => control.enabled || this.disabled)\n                .map((control) => control.value);\n    }\n    /** @internal */\n    _anyControls(condition) {\n        return this.controls.some((control) => control.enabled && condition(control));\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => this._registerControl(control));\n    }\n    /** @internal */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((control, i) => {\n            if (value[i] === undefined) {\n                throw new Error(`Must supply a value for form control at index: ${i}.`);\n            }\n        });\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const control of this.controls) {\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    }\n    _registerControl(control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => NgForm)\n};\nconst ɵ0 = () => Promise.resolve(null);\nconst resolvedPromise = /*@__PURE__*/ (ɵ0)();\nlet NgForm = /*@__PURE__*/ (() => {\n    class NgForm extends ControlContainer {\n        constructor(validators, asyncValidators) {\n            super();\n            /**\n             * @description\n             * Returns whether the form submission has been triggered.\n             */\n            this.submitted = false;\n            this._directives = [];\n            /**\n             * @description\n             * Event emitter for the \"ngSubmit\" event\n             */\n            this.ngSubmit = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* EventEmitter */ \"o\"]();\n            this.form =\n                new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        }\n        /** @nodoc */\n        ngAfterViewInit() {\n            this._setUpdateStrategy();\n        }\n        /**\n         * @description\n         * The directive instance.\n         */\n        get formDirective() {\n            return this;\n        }\n        /**\n         * @description\n         * The internal `FormGroup` instance.\n         */\n        get control() {\n            return this.form;\n        }\n        /**\n         * @description\n         * Returns an array representing the path to this group. Because this directive\n         * always lives at the top level of a form, it is always an empty array.\n         */\n        get path() {\n            return [];\n        }\n        /**\n         * @description\n         * Returns a map of the controls in this group.\n         */\n        get controls() {\n            return this.form.controls;\n        }\n        /**\n         * @description\n         * Method that sets up the control directive in this group, re-calculates its value\n         * and validity, and adds the instance to the internal list of directives.\n         *\n         * @param dir The `NgModel` directive instance.\n         */\n        addControl(dir) {\n            resolvedPromise.then(() => {\n                const container = this._findContainer(dir.path);\n                dir.control =\n                    container.registerControl(dir.name, dir.control);\n                setUpControl(dir.control, dir);\n                dir.control.updateValueAndValidity({ emitEvent: false });\n                this._directives.push(dir);\n            });\n        }\n        /**\n         * @description\n         * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n         *\n         * @param dir The `NgModel` directive instance.\n         */\n        getControl(dir) {\n            return this.form.get(dir.path);\n        }\n        /**\n         * @description\n         * Removes the `NgModel` instance from the internal list of directives\n         *\n         * @param dir The `NgModel` directive instance.\n         */\n        removeControl(dir) {\n            resolvedPromise.then(() => {\n                const container = this._findContainer(dir.path);\n                if (container) {\n                    container.removeControl(dir.name);\n                }\n                removeListItem(this._directives, dir);\n            });\n        }\n        /**\n         * @description\n         * Adds a new `NgModelGroup` directive instance to the form.\n         *\n         * @param dir The `NgModelGroup` directive instance.\n         */\n        addFormGroup(dir) {\n            resolvedPromise.then(() => {\n                const container = this._findContainer(dir.path);\n                const group = new FormGroup({});\n                setUpFormContainer(group, dir);\n                container.registerControl(dir.name, group);\n                group.updateValueAndValidity({ emitEvent: false });\n            });\n        }\n        /**\n         * @description\n         * Removes the `NgModelGroup` directive instance from the form.\n         *\n         * @param dir The `NgModelGroup` directive instance.\n         */\n        removeFormGroup(dir) {\n            resolvedPromise.then(() => {\n                const container = this._findContainer(dir.path);\n                if (container) {\n                    container.removeControl(dir.name);\n                }\n            });\n        }\n        /**\n         * @description\n         * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n         *\n         * @param dir The `NgModelGroup` directive instance.\n         */\n        getFormGroup(dir) {\n            return this.form.get(dir.path);\n        }\n        /**\n         * Sets the new value for the provided `NgControl` directive.\n         *\n         * @param dir The `NgControl` directive instance.\n         * @param value The new value for the directive's control.\n         */\n        updateModel(dir, value) {\n            resolvedPromise.then(() => {\n                const ctrl = this.form.get(dir.path);\n                ctrl.setValue(value);\n            });\n        }\n        /**\n         * @description\n         * Sets the value for this `FormGroup`.\n         *\n         * @param value The new value\n         */\n        setValue(value) {\n            this.control.setValue(value);\n        }\n        /**\n         * @description\n         * Method called when the \"submit\" event is triggered on the form.\n         * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n         *\n         * @param $event The \"submit\" event object\n         */\n        onSubmit($event) {\n            this.submitted = true;\n            syncPendingControls(this.form, this._directives);\n            this.ngSubmit.emit($event);\n            return false;\n        }\n        /**\n         * @description\n         * Method called when the \"reset\" event is triggered on the form.\n         */\n        onReset() {\n            this.resetForm();\n        }\n        /**\n         * @description\n         * Resets the form to an initial value and resets its submitted status.\n         *\n         * @param value The new value for the form.\n         */\n        resetForm(value = undefined) {\n            this.form.reset(value);\n            this.submitted = false;\n        }\n        _setUpdateStrategy() {\n            if (this.options && this.options.updateOn != null) {\n                this.form._updateOn = this.options.updateOn;\n            }\n        }\n        /** @internal */\n        _findContainer(path) {\n            path.pop();\n            return path.length ? this.form.get(path) : this.form;\n        }\n    }\n    NgForm.ɵfac = function NgForm_Factory(t) { return new (t || NgForm)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_ASYNC_VALIDATORS, 10)); };\n    NgForm.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: NgForm, selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]], hostBindings: function NgForm_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵlistener */ \"cc\"](\"submit\", function NgForm_submit_HostBindingHandler($event) { return ctx.onSubmit($event); })(\"reset\", function NgForm_reset_HostBindingHandler() { return ctx.onReset(); });\n            }\n        }, inputs: { options: [\"ngFormOptions\", \"options\"] }, outputs: { ngSubmit: \"ngSubmit\" }, exportAs: [\"ngForm\"], features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([formDirectiveProvider]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"]] });\n    return NgForm;\n})();\nlet AbstractFormGroupDirective = /*@__PURE__*/ (() => {\n    class AbstractFormGroupDirective extends ControlContainer {\n        /** @nodoc */\n        ngOnInit() {\n            this._checkParentType();\n            // Register the group with its parent group.\n            this.formDirective.addFormGroup(this);\n        }\n        /** @nodoc */\n        ngOnDestroy() {\n            if (this.formDirective) {\n                // Remove the group from its parent group.\n                this.formDirective.removeFormGroup(this);\n            }\n        }\n        /**\n         * @description\n         * The `FormGroup` bound to this directive.\n         */\n        get control() {\n            return this.formDirective.getFormGroup(this);\n        }\n        /**\n         * @description\n         * The path to this group from the top-level directive.\n         */\n        get path() {\n            return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n        }\n        /**\n         * @description\n         * The top-level directive for this group if present, otherwise null.\n         */\n        get formDirective() {\n            return this._parent ? this._parent.formDirective : null;\n        }\n        /** @internal */\n        _checkParentType() { }\n    }\n    AbstractFormGroupDirective.ɵfac = function AbstractFormGroupDirective_Factory(t) { return ɵAbstractFormGroupDirective_BaseFactory(t || AbstractFormGroupDirective); };\n    AbstractFormGroupDirective.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: AbstractFormGroupDirective, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"]] });\n    return AbstractFormGroupDirective;\n})();\nconst ɵAbstractFormGroupDirective_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵgetInheritedFactory */ \"Ub\"](AbstractFormGroupDirective);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TemplateDrivenErrors {\n    static modelParentException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive \"formControlName\" instead.  Example:\n\n      ${FormErrorExamples.formControlName}\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      ${FormErrorExamples.ngModelWithFormGroup}`);\n    }\n    static formGroupNameException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n    static missingNameException() {\n        throw new Error(`If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as 'standalone' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n      Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n    }\n    static modelGroupParentException() {\n        throw new Error(`\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => NgModelGroup)\n};\nlet NgModelGroup = /*@__PURE__*/ (() => {\n    class NgModelGroup extends AbstractFormGroupDirective {\n        constructor(parent, validators, asyncValidators) {\n            super();\n            this._parent = parent;\n            this._setValidators(validators);\n            this._setAsyncValidators(asyncValidators);\n        }\n        /** @internal */\n        _checkParentType() {\n            if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                TemplateDrivenErrors.modelGroupParentException();\n            }\n        }\n    }\n    NgModelGroup.ɵfac = function NgModelGroup_Factory(t) { return new (t || NgModelGroup)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](ControlContainer, 5), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_ASYNC_VALIDATORS, 10)); };\n    NgModelGroup.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: NgModelGroup, selectors: [[\"\", \"ngModelGroup\", \"\"]], inputs: { name: [\"ngModelGroup\", \"name\"] }, exportAs: [\"ngModelGroup\"], features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([modelGroupProvider]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"]] });\n    return NgModelGroup;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formControlBinding = {\n    provide: NgControl,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => NgModel)\n};\nconst ɵ0$1 = () => Promise.resolve(null);\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise$1 = /*@__PURE__*/ (ɵ0$1)();\nlet NgModel = /*@__PURE__*/ (() => {\n    class NgModel extends NgControl {\n        constructor(parent, validators, asyncValidators, valueAccessors) {\n            super();\n            this.control = new FormControl();\n            /** @internal */\n            this._registered = false;\n            /**\n             * @description\n             * Event emitter for producing the `ngModelChange` event after\n             * the view model updates.\n             */\n            this.update = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* EventEmitter */ \"o\"]();\n            this._parent = parent;\n            this._setValidators(validators);\n            this._setAsyncValidators(asyncValidators);\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        /** @nodoc */\n        ngOnChanges(changes) {\n            this._checkForErrors();\n            if (!this._registered)\n                this._setUpControl();\n            if ('isDisabled' in changes) {\n                this._updateDisabled(changes);\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this._updateValue(this.model);\n                this.viewModel = this.model;\n            }\n        }\n        /** @nodoc */\n        ngOnDestroy() {\n            this.formDirective && this.formDirective.removeControl(this);\n        }\n        /**\n         * @description\n         * Returns an array that represents the path from the top-level form to this control.\n         * Each index is the string name of the control on that level.\n         */\n        get path() {\n            return this._parent ? controlPath(this.name, this._parent) : [this.name];\n        }\n        /**\n         * @description\n         * The top-level directive for this control if present, otherwise null.\n         */\n        get formDirective() {\n            return this._parent ? this._parent.formDirective : null;\n        }\n        /**\n         * @description\n         * Sets the new value for the view model and emits an `ngModelChange` event.\n         *\n         * @param newValue The new value emitted by `ngModelChange`.\n         */\n        viewToModelUpdate(newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        }\n        _setUpControl() {\n            this._setUpdateStrategy();\n            this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n            this._registered = true;\n        }\n        _setUpdateStrategy() {\n            if (this.options && this.options.updateOn != null) {\n                this.control._updateOn = this.options.updateOn;\n            }\n        }\n        _isStandalone() {\n            return !this._parent || !!(this.options && this.options.standalone);\n        }\n        _setUpStandalone() {\n            setUpControl(this.control, this);\n            this.control.updateValueAndValidity({ emitEvent: false });\n        }\n        _checkForErrors() {\n            if (!this._isStandalone()) {\n                this._checkParentType();\n            }\n            this._checkName();\n        }\n        _checkParentType() {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!(this._parent instanceof NgModelGroup) &&\n                    this._parent instanceof AbstractFormGroupDirective) {\n                    TemplateDrivenErrors.formGroupNameException();\n                }\n                else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                    TemplateDrivenErrors.modelParentException();\n                }\n            }\n        }\n        _checkName() {\n            if (this.options && this.options.name)\n                this.name = this.options.name;\n            if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                TemplateDrivenErrors.missingNameException();\n            }\n        }\n        _updateValue(value) {\n            resolvedPromise$1.then(() => {\n                this.control.setValue(value, { emitViewToModelChange: false });\n            });\n        }\n        _updateDisabled(changes) {\n            const disabledValue = changes['isDisabled'].currentValue;\n            const isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n            resolvedPromise$1.then(() => {\n                if (isDisabled && !this.control.disabled) {\n                    this.control.disable();\n                }\n                else if (!isDisabled && this.control.disabled) {\n                    this.control.enable();\n                }\n            });\n        }\n    }\n    NgModel.ɵfac = function NgModel_Factory(t) { return new (t || NgModel)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](ControlContainer, 9), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_ASYNC_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_VALUE_ACCESSOR, 10)); };\n    NgModel.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: NgModel, selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]], inputs: { name: \"name\", isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"], options: [\"ngModelOptions\", \"options\"] }, outputs: { update: \"ngModelChange\" }, exportAs: [\"ngModel\"], features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([formControlBinding]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵNgOnChangesFeature */ \"yb\"]] });\n    return NgModel;\n})();\nlet ɵNgNoValidate = /*@__PURE__*/ (() => {\n    class ɵNgNoValidate {\n    }\n    ɵNgNoValidate.ɵfac = function ɵNgNoValidate_Factory(t) { return new (t || ɵNgNoValidate)(); };\n    ɵNgNoValidate.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: ɵNgNoValidate, selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]], hostAttrs: [\"novalidate\", \"\"] });\n    return ɵNgNoValidate;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => NumberValueAccessor),\n    multi: true\n};\nlet NumberValueAccessor = /*@__PURE__*/ (() => {\n    class NumberValueAccessor extends BuiltInControlValueAccessor {\n        constructor(_renderer, _elementRef) {\n            super();\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /**\n             * The registered callback function called when a change or input event occurs on the input\n             * element.\n             * @nodoc\n             */\n            this.onChange = (_) => { };\n            /**\n             * The registered callback function called when a blur event occurs on the input element.\n             * @nodoc\n             */\n            this.onTouched = () => { };\n        }\n        /**\n         * Sets the \"value\" property on the input element.\n         * @nodoc\n         */\n        writeValue(value) {\n            // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n            const normalizedValue = value == null ? '' : value;\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        }\n        /**\n         * Registers a function called when the control value changes.\n         * @nodoc\n         */\n        registerOnChange(fn) {\n            this.onChange = (value) => {\n                fn(value == '' ? null : parseFloat(value));\n            };\n        }\n        /**\n         * Registers a function called when the control is touched.\n         * @nodoc\n         */\n        registerOnTouched(fn) {\n            this.onTouched = fn;\n        }\n        /**\n         * Sets the \"disabled\" property on the input element.\n         * @nodoc\n         */\n        setDisabledState(isDisabled) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        }\n    }\n    NumberValueAccessor.ɵfac = function NumberValueAccessor_Factory(t) { return new (t || NumberValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Renderer2 */ \"G\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ \"m\"])); };\n    NumberValueAccessor.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: NumberValueAccessor, selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]], hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵlistener */ \"cc\"](\"input\", function NumberValueAccessor_input_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n            }\n        }, features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([NUMBER_VALUE_ACCESSOR]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"]] });\n    return NumberValueAccessor;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => RadioControlValueAccessor),\n    multi: true\n};\nfunction throwNameError() {\n    throw new Error(`\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\nlet RadioControlRegistryModule = /*@__PURE__*/ (() => {\n    class RadioControlRegistryModule {\n    }\n    RadioControlRegistryModule.ɵfac = function RadioControlRegistryModule_Factory(t) { return new (t || RadioControlRegistryModule)(); };\n    RadioControlRegistryModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineNgModule */ \"Lb\"]({ type: RadioControlRegistryModule });\n    RadioControlRegistryModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineInjector */ \"Kb\"]({});\n    return RadioControlRegistryModule;\n})();\nlet RadioControlRegistry = /*@__PURE__*/ (() => {\n    class RadioControlRegistry {\n        constructor() {\n            this._accessors = [];\n        }\n        /**\n         * @description\n         * Adds a control to the internal registry. For internal use only.\n         */\n        add(control, accessor) {\n            this._accessors.push([control, accessor]);\n        }\n        /**\n         * @description\n         * Removes a control from the internal registry. For internal use only.\n         */\n        remove(accessor) {\n            for (let i = this._accessors.length - 1; i >= 0; --i) {\n                if (this._accessors[i][1] === accessor) {\n                    this._accessors.splice(i, 1);\n                    return;\n                }\n            }\n        }\n        /**\n         * @description\n         * Selects a radio button. For internal use only.\n         */\n        select(accessor) {\n            this._accessors.forEach((c) => {\n                if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                    c[1].fireUncheck(accessor.value);\n                }\n            });\n        }\n        _isSameGroup(controlPair, accessor) {\n            if (!controlPair[0].control)\n                return false;\n            return controlPair[0]._parent === accessor._control._parent &&\n                controlPair[1].name === accessor.name;\n        }\n    }\n    RadioControlRegistry.ɵfac = function RadioControlRegistry_Factory(t) { return new (t || RadioControlRegistry)(); };\n    RadioControlRegistry.ɵprov = /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineInjectable */ \"Jb\"])({ factory: function RadioControlRegistry_Factory() { return new RadioControlRegistry(); }, token: RadioControlRegistry, providedIn: RadioControlRegistryModule });\n    return RadioControlRegistry;\n})();\nlet RadioControlValueAccessor = /*@__PURE__*/ (() => {\n    class RadioControlValueAccessor extends BuiltInControlValueAccessor {\n        constructor(_renderer, _elementRef, _registry, _injector) {\n            super();\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this._registry = _registry;\n            this._injector = _injector;\n            /**\n             * The registered callback function called when a change event occurs on the input element.\n             * @nodoc\n             */\n            this.onChange = () => { };\n            /**\n             * The registered callback function called when a blur event occurs on the input element.\n             * @nodoc\n             */\n            this.onTouched = () => { };\n        }\n        /** @nodoc */\n        ngOnInit() {\n            this._control = this._injector.get(NgControl);\n            this._checkName();\n            this._registry.add(this._control, this);\n        }\n        /** @nodoc */\n        ngOnDestroy() {\n            this._registry.remove(this);\n        }\n        /**\n         * Sets the \"checked\" property value on the radio input element.\n         * @nodoc\n         */\n        writeValue(value) {\n            this._state = value === this.value;\n            this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n        }\n        /**\n         * Registers a function called when the control value changes.\n         * @nodoc\n         */\n        registerOnChange(fn) {\n            this._fn = fn;\n            this.onChange = () => {\n                fn(this.value);\n                this._registry.select(this);\n            };\n        }\n        /**\n         * Sets the \"value\" on the radio input element and unchecks it.\n         *\n         * @param value\n         */\n        fireUncheck(value) {\n            this.writeValue(value);\n        }\n        /**\n         * Registers a function called when the control is touched.\n         * @nodoc\n         */\n        registerOnTouched(fn) {\n            this.onTouched = fn;\n        }\n        /**\n         * Sets the \"disabled\" property on the input element.\n         * @nodoc\n         */\n        setDisabledState(isDisabled) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        }\n        _checkName() {\n            if (this.name && this.formControlName && this.name !== this.formControlName &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwNameError();\n            }\n            if (!this.name && this.formControlName)\n                this.name = this.formControlName;\n        }\n    }\n    RadioControlValueAccessor.ɵfac = function RadioControlValueAccessor_Factory(t) { return new (t || RadioControlValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Renderer2 */ \"G\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ \"m\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](RadioControlRegistry), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Injector */ \"u\"])); };\n    RadioControlValueAccessor.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: RadioControlValueAccessor, selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]], hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵlistener */ \"cc\"](\"change\", function RadioControlValueAccessor_change_HostBindingHandler() { return ctx.onChange(); })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n            }\n        }, inputs: { name: \"name\", formControlName: \"formControlName\", value: \"value\" }, features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([RADIO_VALUE_ACCESSOR]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"]] });\n    return RadioControlValueAccessor;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => RangeValueAccessor),\n    multi: true\n};\nlet RangeValueAccessor = /*@__PURE__*/ (() => {\n    class RangeValueAccessor extends BuiltInControlValueAccessor {\n        constructor(_renderer, _elementRef) {\n            super();\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /**\n             * The registered callback function called when a change or input event occurs on the input\n             * element.\n             * @nodoc\n             */\n            this.onChange = (_) => { };\n            /**\n             * The registered callback function called when a blur event occurs on the input element.\n             * @nodoc\n             */\n            this.onTouched = () => { };\n        }\n        /**\n         * Sets the \"value\" property on the input element.\n         * @nodoc\n         */\n        writeValue(value) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n        }\n        /**\n         * Registers a function called when the control value changes.\n         * @nodoc\n         */\n        registerOnChange(fn) {\n            this.onChange = (value) => {\n                fn(value == '' ? null : parseFloat(value));\n            };\n        }\n        /**\n         * Registers a function called when the control is touched.\n         * @nodoc\n         */\n        registerOnTouched(fn) {\n            this.onTouched = fn;\n        }\n        /**\n         * Sets the \"disabled\" property on the range input element.\n         * @nodoc\n         */\n        setDisabledState(isDisabled) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        }\n    }\n    RangeValueAccessor.ɵfac = function RangeValueAccessor_Factory(t) { return new (t || RangeValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Renderer2 */ \"G\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ \"m\"])); };\n    RangeValueAccessor.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: RangeValueAccessor, selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]], hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵlistener */ \"cc\"](\"change\", function RangeValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n            }\n        }, features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([RANGE_VALUE_ACCESSOR]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"]] });\n    return RangeValueAccessor;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = /*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* InjectionToken */ \"t\"]('NgModelWithFormControlWarning');\nconst formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => FormControlDirective)\n};\nlet FormControlDirective = /*@__PURE__*/ (() => {\n    class FormControlDirective extends NgControl {\n        constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n            super();\n            this._ngModelWarningConfig = _ngModelWarningConfig;\n            /** @deprecated as of v6 */\n            this.update = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* EventEmitter */ \"o\"]();\n            /**\n             * @description\n             * Instance property used to track whether an ngModel warning has been sent out for this\n             * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n             *\n             * @internal\n             */\n            this._ngModelWarningSent = false;\n            this._setValidators(validators);\n            this._setAsyncValidators(asyncValidators);\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        /**\n         * @description\n         * Triggers a warning in dev mode that this input should not be used with reactive forms.\n         */\n        set isDisabled(isDisabled) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                ReactiveErrors.disabledAttrWarning();\n            }\n        }\n        /** @nodoc */\n        ngOnChanges(changes) {\n            if (this._isControlChanged(changes)) {\n                const previousForm = changes['form'].previousValue;\n                if (previousForm) {\n                    cleanUpControl(previousForm, this, /* validateControlPresenceOnChange */ false);\n                }\n                setUpControl(this.form, this);\n                if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                    this.valueAccessor.setDisabledState(true);\n                }\n                this.form.updateValueAndValidity({ emitEvent: false });\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n                }\n                this.form.setValue(this.model);\n                this.viewModel = this.model;\n            }\n        }\n        /** @nodoc */\n        ngOnDestroy() {\n            if (this.form) {\n                cleanUpControl(this.form, this, /* validateControlPresenceOnChange */ false);\n            }\n        }\n        /**\n         * @description\n         * Returns an array that represents the path from the top-level form to this control.\n         * Each index is the string name of the control on that level.\n         */\n        get path() {\n            return [];\n        }\n        /**\n         * @description\n         * The `FormControl` bound to this directive.\n         */\n        get control() {\n            return this.form;\n        }\n        /**\n         * @description\n         * Sets the new value for the view model and emits an `ngModelChange` event.\n         *\n         * @param newValue The new value for the view model.\n         */\n        viewToModelUpdate(newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        }\n        _isControlChanged(changes) {\n            return changes.hasOwnProperty('form');\n        }\n    }\n    FormControlDirective.ɵfac = function FormControlDirective_Factory(t) { return new (t || FormControlDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_ASYNC_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_VALUE_ACCESSOR, 10), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_MODEL_WITH_FORM_CONTROL_WARNING, 8)); };\n    FormControlDirective.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: FormControlDirective, selectors: [[\"\", \"formControl\", \"\"]], inputs: { isDisabled: [\"disabled\", \"isDisabled\"], form: [\"formControl\", \"form\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, exportAs: [\"ngForm\"], features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([formControlBinding$1]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵNgOnChangesFeature */ \"yb\"]] });\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlDirective. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    FormControlDirective._ngModelWarningSentOnce = false;\n    return FormControlDirective;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => FormGroupDirective)\n};\nlet FormGroupDirective = /*@__PURE__*/ (() => {\n    class FormGroupDirective extends ControlContainer {\n        constructor(validators, asyncValidators) {\n            super();\n            this.validators = validators;\n            this.asyncValidators = asyncValidators;\n            /**\n             * @description\n             * Reports whether the form submission has been triggered.\n             */\n            this.submitted = false;\n            /**\n             * Callback that should be invoked when controls in FormGroup or FormArray collection change\n             * (added or removed). This callback triggers corresponding DOM updates.\n             */\n            this._onCollectionChange = () => this._updateDomValue();\n            /**\n             * @description\n             * Tracks the list of added `FormControlName` instances\n             */\n            this.directives = [];\n            /**\n             * @description\n             * Tracks the `FormGroup` bound to this directive.\n             */\n            this.form = null;\n            /**\n             * @description\n             * Emits an event when the form submission has been triggered.\n             */\n            this.ngSubmit = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* EventEmitter */ \"o\"]();\n            this._setValidators(validators);\n            this._setAsyncValidators(asyncValidators);\n        }\n        /** @nodoc */\n        ngOnChanges(changes) {\n            this._checkFormPresent();\n            if (changes.hasOwnProperty('form')) {\n                this._updateValidators();\n                this._updateDomValue();\n                this._updateRegistrations();\n                this._oldForm = this.form;\n            }\n        }\n        /** @nodoc */\n        ngOnDestroy() {\n            if (this.form) {\n                cleanUpValidators(this.form, this, /* handleOnValidatorChange */ false);\n                // Currently the `onCollectionChange` callback is rewritten each time the\n                // `_registerOnCollectionChange` function is invoked. The implication is that cleanup should\n                // happen *only* when the `onCollectionChange` callback was set by this directive instance.\n                // Otherwise it might cause overriding a callback of some other directive instances. We should\n                // consider updating this logic later to make it similar to how `onChange` callbacks are\n                // handled, see https://github.com/angular/angular/issues/39732 for additional info.\n                if (this.form._onCollectionChange === this._onCollectionChange) {\n                    this.form._registerOnCollectionChange(() => { });\n                }\n            }\n        }\n        /**\n         * @description\n         * Returns this directive's instance.\n         */\n        get formDirective() {\n            return this;\n        }\n        /**\n         * @description\n         * Returns the `FormGroup` bound to this directive.\n         */\n        get control() {\n            return this.form;\n        }\n        /**\n         * @description\n         * Returns an array representing the path to this group. Because this directive\n         * always lives at the top level of a form, it always an empty array.\n         */\n        get path() {\n            return [];\n        }\n        /**\n         * @description\n         * Method that sets up the control directive in this group, re-calculates its value\n         * and validity, and adds the instance to the internal list of directives.\n         *\n         * @param dir The `FormControlName` directive instance.\n         */\n        addControl(dir) {\n            const ctrl = this.form.get(dir.path);\n            setUpControl(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n            this.directives.push(dir);\n            return ctrl;\n        }\n        /**\n         * @description\n         * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n         *\n         * @param dir The `FormControlName` directive instance.\n         */\n        getControl(dir) {\n            return this.form.get(dir.path);\n        }\n        /**\n         * @description\n         * Removes the `FormControlName` instance from the internal list of directives\n         *\n         * @param dir The `FormControlName` directive instance.\n         */\n        removeControl(dir) {\n            cleanUpControl(dir.control || null, dir, /* validateControlPresenceOnChange */ false);\n            removeListItem(this.directives, dir);\n        }\n        /**\n         * Adds a new `FormGroupName` directive instance to the form.\n         *\n         * @param dir The `FormGroupName` directive instance.\n         */\n        addFormGroup(dir) {\n            this._setUpFormContainer(dir);\n        }\n        /**\n         * Performs the necessary cleanup when a `FormGroupName` directive instance is removed from the\n         * view.\n         *\n         * @param dir The `FormGroupName` directive instance.\n         */\n        removeFormGroup(dir) {\n            this._cleanUpFormContainer(dir);\n        }\n        /**\n         * @description\n         * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n         *\n         * @param dir The `FormGroupName` directive instance.\n         */\n        getFormGroup(dir) {\n            return this.form.get(dir.path);\n        }\n        /**\n         * Performs the necessary setup when a `FormArrayName` directive instance is added to the view.\n         *\n         * @param dir The `FormArrayName` directive instance.\n         */\n        addFormArray(dir) {\n            this._setUpFormContainer(dir);\n        }\n        /**\n         * Performs the necessary cleanup when a `FormArrayName` directive instance is removed from the\n         * view.\n         *\n         * @param dir The `FormArrayName` directive instance.\n         */\n        removeFormArray(dir) {\n            this._cleanUpFormContainer(dir);\n        }\n        /**\n         * @description\n         * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n         *\n         * @param dir The `FormArrayName` directive instance.\n         */\n        getFormArray(dir) {\n            return this.form.get(dir.path);\n        }\n        /**\n         * Sets the new value for the provided `FormControlName` directive.\n         *\n         * @param dir The `FormControlName` directive instance.\n         * @param value The new value for the directive's control.\n         */\n        updateModel(dir, value) {\n            const ctrl = this.form.get(dir.path);\n            ctrl.setValue(value);\n        }\n        /**\n         * @description\n         * Method called with the \"submit\" event is triggered on the form.\n         * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n         *\n         * @param $event The \"submit\" event object\n         */\n        onSubmit($event) {\n            this.submitted = true;\n            syncPendingControls(this.form, this.directives);\n            this.ngSubmit.emit($event);\n            return false;\n        }\n        /**\n         * @description\n         * Method called when the \"reset\" event is triggered on the form.\n         */\n        onReset() {\n            this.resetForm();\n        }\n        /**\n         * @description\n         * Resets the form to an initial value and resets its submitted status.\n         *\n         * @param value The new value for the form.\n         */\n        resetForm(value = undefined) {\n            this.form.reset(value);\n            this.submitted = false;\n        }\n        /** @internal */\n        _updateDomValue() {\n            this.directives.forEach(dir => {\n                const oldCtrl = dir.control;\n                const newCtrl = this.form.get(dir.path);\n                if (oldCtrl !== newCtrl) {\n                    // Note: the value of the `dir.control` may not be defined, for example when it's a first\n                    // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).\n                    cleanUpControl(oldCtrl || null, dir);\n                    // Check whether new control at the same location inside the corresponding `FormGroup` is an\n                    // instance of `FormControl` and perform control setup only if that's the case.\n                    // Note: we don't need to clear the list of directives (`this.directives`) here, it would be\n                    // taken care of in the `removeControl` method invoked when corresponding `formControlName`\n                    // directive instance is being removed (invoked from `FormControlName.ngOnDestroy`).\n                    if (newCtrl instanceof FormControl) {\n                        setUpControl(newCtrl, dir);\n                        dir.control = newCtrl;\n                    }\n                }\n            });\n            this.form._updateTreeValidity({ emitEvent: false });\n        }\n        _setUpFormContainer(dir) {\n            const ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            // NOTE: this operation looks unnecessary in case no new validators were added in\n            // `setUpFormContainer` call. Consider updating this code to match the logic in\n            // `_cleanUpFormContainer` function.\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        }\n        _cleanUpFormContainer(dir) {\n            if (this.form) {\n                const ctrl = this.form.get(dir.path);\n                if (ctrl) {\n                    const isControlUpdated = cleanUpFormContainer(ctrl, dir);\n                    if (isControlUpdated) {\n                        // Run validity check only in case a control was updated (i.e. view validators were\n                        // removed) as removing view validators might cause validity to change.\n                        ctrl.updateValueAndValidity({ emitEvent: false });\n                    }\n                }\n            }\n        }\n        _updateRegistrations() {\n            this.form._registerOnCollectionChange(this._onCollectionChange);\n            if (this._oldForm) {\n                this._oldForm._registerOnCollectionChange(() => { });\n            }\n        }\n        _updateValidators() {\n            setUpValidators(this.form, this, /* handleOnValidatorChange */ false);\n            if (this._oldForm) {\n                cleanUpValidators(this._oldForm, this, /* handleOnValidatorChange */ false);\n            }\n        }\n        _checkFormPresent() {\n            if (!this.form && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                ReactiveErrors.missingFormException();\n            }\n        }\n    }\n    FormGroupDirective.ɵfac = function FormGroupDirective_Factory(t) { return new (t || FormGroupDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_ASYNC_VALIDATORS, 10)); };\n    FormGroupDirective.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: FormGroupDirective, selectors: [[\"\", \"formGroup\", \"\"]], hostBindings: function FormGroupDirective_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵlistener */ \"cc\"](\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) { return ctx.onSubmit($event); })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() { return ctx.onReset(); });\n            }\n        }, inputs: { form: [\"formGroup\", \"form\"] }, outputs: { ngSubmit: \"ngSubmit\" }, exportAs: [\"ngForm\"], features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([formDirectiveProvider$1]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵNgOnChangesFeature */ \"yb\"]] });\n    return FormGroupDirective;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => FormGroupName)\n};\nlet FormGroupName = /*@__PURE__*/ (() => {\n    class FormGroupName extends AbstractFormGroupDirective {\n        constructor(parent, validators, asyncValidators) {\n            super();\n            this._parent = parent;\n            this._setValidators(validators);\n            this._setAsyncValidators(asyncValidators);\n        }\n        /** @internal */\n        _checkParentType() {\n            if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                ReactiveErrors.groupParentException();\n            }\n        }\n    }\n    FormGroupName.ɵfac = function FormGroupName_Factory(t) { return new (t || FormGroupName)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](ControlContainer, 13), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_ASYNC_VALIDATORS, 10)); };\n    FormGroupName.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: FormGroupName, selectors: [[\"\", \"formGroupName\", \"\"]], inputs: { name: [\"formGroupName\", \"name\"] }, features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([formGroupNameProvider]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"]] });\n    return FormGroupName;\n})();\nconst formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => FormArrayName)\n};\nlet FormArrayName = /*@__PURE__*/ (() => {\n    class FormArrayName extends ControlContainer {\n        constructor(parent, validators, asyncValidators) {\n            super();\n            this._parent = parent;\n            this._setValidators(validators);\n            this._setAsyncValidators(asyncValidators);\n        }\n        /**\n         * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n         * @throws If the directive does not have a valid parent.\n         * @nodoc\n         */\n        ngOnInit() {\n            this._checkParentType();\n            this.formDirective.addFormArray(this);\n        }\n        /**\n         * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n         * @nodoc\n         */\n        ngOnDestroy() {\n            if (this.formDirective) {\n                this.formDirective.removeFormArray(this);\n            }\n        }\n        /**\n         * @description\n         * The `FormArray` bound to this directive.\n         */\n        get control() {\n            return this.formDirective.getFormArray(this);\n        }\n        /**\n         * @description\n         * The top-level directive for this group if present, otherwise null.\n         */\n        get formDirective() {\n            return this._parent ? this._parent.formDirective : null;\n        }\n        /**\n         * @description\n         * Returns an array that represents the path from the top-level form to this control.\n         * Each index is the string name of the control on that level.\n         */\n        get path() {\n            return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n        }\n        _checkParentType() {\n            if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                ReactiveErrors.arrayParentException();\n            }\n        }\n    }\n    FormArrayName.ɵfac = function FormArrayName_Factory(t) { return new (t || FormArrayName)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](ControlContainer, 13), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_ASYNC_VALIDATORS, 10)); };\n    FormArrayName.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: FormArrayName, selectors: [[\"\", \"formArrayName\", \"\"]], inputs: { name: [\"formArrayName\", \"name\"] }, features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([formArrayNameProvider]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"]] });\n    return FormArrayName;\n})();\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst controlNameBinding = {\n    provide: NgControl,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => FormControlName)\n};\nlet FormControlName = /*@__PURE__*/ (() => {\n    class FormControlName extends NgControl {\n        constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n            super();\n            this._ngModelWarningConfig = _ngModelWarningConfig;\n            this._added = false;\n            /** @deprecated as of v6 */\n            this.update = new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* EventEmitter */ \"o\"]();\n            /**\n             * @description\n             * Instance property used to track whether an ngModel warning has been sent out for this\n             * particular FormControlName instance. Used to support warning config of \"always\".\n             *\n             * @internal\n             */\n            this._ngModelWarningSent = false;\n            this._parent = parent;\n            this._setValidators(validators);\n            this._setAsyncValidators(asyncValidators);\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        /**\n         * @description\n         * Triggers a warning in dev mode that this input should not be used with reactive forms.\n         */\n        set isDisabled(isDisabled) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                ReactiveErrors.disabledAttrWarning();\n            }\n        }\n        /** @nodoc */\n        ngOnChanges(changes) {\n            if (!this._added)\n                this._setUpControl();\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n                }\n                this.viewModel = this.model;\n                this.formDirective.updateModel(this, this.model);\n            }\n        }\n        /** @nodoc */\n        ngOnDestroy() {\n            if (this.formDirective) {\n                this.formDirective.removeControl(this);\n            }\n        }\n        /**\n         * @description\n         * Sets the new value for the view model and emits an `ngModelChange` event.\n         *\n         * @param newValue The new value for the view model.\n         */\n        viewToModelUpdate(newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        }\n        /**\n         * @description\n         * Returns an array that represents the path from the top-level form to this control.\n         * Each index is the string name of the control on that level.\n         */\n        get path() {\n            return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n        }\n        /**\n         * @description\n         * The top-level directive for this group if present, otherwise null.\n         */\n        get formDirective() {\n            return this._parent ? this._parent.formDirective : null;\n        }\n        _checkParentType() {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (!(this._parent instanceof FormGroupName) &&\n                    this._parent instanceof AbstractFormGroupDirective) {\n                    ReactiveErrors.ngModelGroupException();\n                }\n                else if (!(this._parent instanceof FormGroupName) &&\n                    !(this._parent instanceof FormGroupDirective) &&\n                    !(this._parent instanceof FormArrayName)) {\n                    ReactiveErrors.controlParentException();\n                }\n            }\n        }\n        _setUpControl() {\n            this._checkParentType();\n            this.control = this.formDirective.addControl(this);\n            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                this.valueAccessor.setDisabledState(true);\n            }\n            this._added = true;\n        }\n    }\n    FormControlName.ɵfac = function FormControlName_Factory(t) { return new (t || FormControlName)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](ControlContainer, 13), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_ASYNC_VALIDATORS, 10), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_VALUE_ACCESSOR, 10), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](NG_MODEL_WITH_FORM_CONTROL_WARNING, 8)); };\n    FormControlName.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: FormControlName, selectors: [[\"\", \"formControlName\", \"\"]], inputs: { isDisabled: [\"disabled\", \"isDisabled\"], name: [\"formControlName\", \"name\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([controlNameBinding]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"], _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵNgOnChangesFeature */ \"yb\"]] });\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlName. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    FormControlName._ngModelWarningSentOnce = false;\n    return FormControlName;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => SelectControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\nlet SelectControlValueAccessor = /*@__PURE__*/ (() => {\n    class SelectControlValueAccessor extends BuiltInControlValueAccessor {\n        constructor(_renderer, _elementRef) {\n            super();\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            /**\n             * The registered callback function called when a change event occurs on the input element.\n             * @nodoc\n             */\n            this.onChange = (_) => { };\n            /**\n             * The registered callback function called when a blur event occurs on the input element.\n             * @nodoc\n             */\n            this.onTouched = () => { };\n            this._compareWith = Object.is;\n        }\n        /**\n         * @description\n         * Tracks the option comparison algorithm for tracking identities when\n         * checking for changes.\n         */\n        set compareWith(fn) {\n            if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n            }\n            this._compareWith = fn;\n        }\n        /**\n         * Sets the \"value\" property on the input element. The \"selectedIndex\"\n         * property is also set if an ID is provided on the option element.\n         * @nodoc\n         */\n        writeValue(value) {\n            this.value = value;\n            const id = this._getOptionId(value);\n            if (id == null) {\n                this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n            }\n            const valueString = _buildValueString(id, value);\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n        }\n        /**\n         * Registers a function called when the control value changes.\n         * @nodoc\n         */\n        registerOnChange(fn) {\n            this.onChange = (valueString) => {\n                this.value = this._getOptionValue(valueString);\n                fn(this.value);\n            };\n        }\n        /**\n         * Registers a function called when the control is touched.\n         * @nodoc\n         */\n        registerOnTouched(fn) {\n            this.onTouched = fn;\n        }\n        /**\n         * Sets the \"disabled\" property on the select input element.\n         * @nodoc\n         */\n        setDisabledState(isDisabled) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        }\n        /** @internal */\n        _registerOption() {\n            return (this._idCounter++).toString();\n        }\n        /** @internal */\n        _getOptionId(value) {\n            for (const id of Array.from(this._optionMap.keys())) {\n                if (this._compareWith(this._optionMap.get(id), value))\n                    return id;\n            }\n            return null;\n        }\n        /** @internal */\n        _getOptionValue(valueString) {\n            const id = _extractId(valueString);\n            return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n        }\n    }\n    SelectControlValueAccessor.ɵfac = function SelectControlValueAccessor_Factory(t) { return new (t || SelectControlValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Renderer2 */ \"G\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ \"m\"])); };\n    SelectControlValueAccessor.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: SelectControlValueAccessor, selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]], hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵlistener */ \"cc\"](\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n            }\n        }, inputs: { compareWith: \"compareWith\" }, features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([SELECT_VALUE_ACCESSOR]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"]] });\n    return SelectControlValueAccessor;\n})();\nlet NgSelectOption = /*@__PURE__*/ (() => {\n    class NgSelectOption {\n        constructor(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (this._select)\n                this.id = this._select._registerOption();\n        }\n        /**\n         * @description\n         * Tracks the value bound to the option element. Unlike the value binding,\n         * ngValue supports binding to objects.\n         */\n        set ngValue(value) {\n            if (this._select == null)\n                return;\n            this._select._optionMap.set(this.id, value);\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        }\n        /**\n         * @description\n         * Tracks simple string values bound to the option element.\n         * For objects, use the `ngValue` input binding.\n         */\n        set value(value) {\n            this._setElementValue(value);\n            if (this._select)\n                this._select.writeValue(this._select.value);\n        }\n        /** @internal */\n        _setElementValue(value) {\n            this._renderer.setProperty(this._element.nativeElement, 'value', value);\n        }\n        /** @nodoc */\n        ngOnDestroy() {\n            if (this._select) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        }\n    }\n    NgSelectOption.ɵfac = function NgSelectOption_Factory(t) { return new (t || NgSelectOption)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ \"m\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Renderer2 */ \"G\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](SelectControlValueAccessor, 9)); };\n    NgSelectOption.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: NgSelectOption, selectors: [[\"option\"]], inputs: { ngValue: \"ngValue\", value: \"value\" } });\n    return NgSelectOption;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => SelectMultipleControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (typeof value === 'string')\n        value = `'${value}'`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nclass HTMLCollection {\n}\nlet SelectMultipleControlValueAccessor = /*@__PURE__*/ (() => {\n    class SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor {\n        constructor(_renderer, _elementRef) {\n            super();\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            /**\n             * The registered callback function called when a change event occurs on the input element.\n             * @nodoc\n             */\n            this.onChange = (_) => { };\n            /**\n             * The registered callback function called when a blur event occurs on the input element.\n             * @nodoc\n             */\n            this.onTouched = () => { };\n            this._compareWith = Object.is;\n        }\n        /**\n         * @description\n         * Tracks the option comparison algorithm for tracking identities when\n         * checking for changes.\n         */\n        set compareWith(fn) {\n            if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n            }\n            this._compareWith = fn;\n        }\n        /**\n         * Sets the \"value\" property on one or of more of the select's options.\n         * @nodoc\n         */\n        writeValue(value) {\n            this.value = value;\n            let optionSelectedStateSetter;\n            if (Array.isArray(value)) {\n                // convert values to ids\n                const ids = value.map((v) => this._getOptionId(v));\n                optionSelectedStateSetter = (opt, o) => {\n                    opt._setSelected(ids.indexOf(o.toString()) > -1);\n                };\n            }\n            else {\n                optionSelectedStateSetter = (opt, o) => {\n                    opt._setSelected(false);\n                };\n            }\n            this._optionMap.forEach(optionSelectedStateSetter);\n        }\n        /**\n         * Registers a function called when the control value changes\n         * and writes an array of the selected options.\n         * @nodoc\n         */\n        registerOnChange(fn) {\n            this.onChange = (_) => {\n                const selected = [];\n                if (_.selectedOptions !== undefined) {\n                    const options = _.selectedOptions;\n                    for (let i = 0; i < options.length; i++) {\n                        const opt = options.item(i);\n                        const val = this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n                // Degrade on IE\n                else {\n                    const options = _.options;\n                    for (let i = 0; i < options.length; i++) {\n                        const opt = options.item(i);\n                        if (opt.selected) {\n                            const val = this._getOptionValue(opt.value);\n                            selected.push(val);\n                        }\n                    }\n                }\n                this.value = selected;\n                fn(selected);\n            };\n        }\n        /**\n         * Registers a function called when the control is touched.\n         * @nodoc\n         */\n        registerOnTouched(fn) {\n            this.onTouched = fn;\n        }\n        /**\n         * Sets the \"disabled\" property on the select input element.\n         * @nodoc\n         */\n        setDisabledState(isDisabled) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        }\n        /** @internal */\n        _registerOption(value) {\n            const id = (this._idCounter++).toString();\n            this._optionMap.set(id, value);\n            return id;\n        }\n        /** @internal */\n        _getOptionId(value) {\n            for (const id of Array.from(this._optionMap.keys())) {\n                if (this._compareWith(this._optionMap.get(id)._value, value))\n                    return id;\n            }\n            return null;\n        }\n        /** @internal */\n        _getOptionValue(valueString) {\n            const id = _extractId$1(valueString);\n            return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n        }\n    }\n    SelectMultipleControlValueAccessor.ɵfac = function SelectMultipleControlValueAccessor_Factory(t) { return new (t || SelectMultipleControlValueAccessor)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Renderer2 */ \"G\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ \"m\"])); };\n    SelectMultipleControlValueAccessor.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: SelectMultipleControlValueAccessor, selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]], hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵlistener */ \"cc\"](\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target); })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n            }\n        }, inputs: { compareWith: \"compareWith\" }, features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([SELECT_MULTIPLE_VALUE_ACCESSOR]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"]] });\n    return SelectMultipleControlValueAccessor;\n})();\nlet ɵNgSelectMultipleOption = /*@__PURE__*/ (() => {\n    class ɵNgSelectMultipleOption {\n        constructor(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (this._select) {\n                this.id = this._select._registerOption(this);\n            }\n        }\n        /**\n         * @description\n         * Tracks the value bound to the option element. Unlike the value binding,\n         * ngValue supports binding to objects.\n         */\n        set ngValue(value) {\n            if (this._select == null)\n                return;\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        }\n        /**\n         * @description\n         * Tracks simple string values bound to the option element.\n         * For objects, use the `ngValue` input binding.\n         */\n        set value(value) {\n            if (this._select) {\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            }\n            else {\n                this._setElementValue(value);\n            }\n        }\n        /** @internal */\n        _setElementValue(value) {\n            this._renderer.setProperty(this._element.nativeElement, 'value', value);\n        }\n        /** @internal */\n        _setSelected(selected) {\n            this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n        }\n        /** @nodoc */\n        ngOnDestroy() {\n            if (this._select) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        }\n    }\n    ɵNgSelectMultipleOption.ɵfac = function ɵNgSelectMultipleOption_Factory(t) { return new (t || ɵNgSelectMultipleOption)(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ElementRef */ \"m\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Renderer2 */ \"G\"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdirectiveInject */ \"Nb\"](SelectMultipleControlValueAccessor, 9)); };\n    ɵNgSelectMultipleOption.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: ɵNgSelectMultipleOption, selectors: [[\"option\"]], inputs: { ngValue: \"ngValue\", value: \"value\" } });\n    return ɵNgSelectMultipleOption;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => RequiredValidator),\n    multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => CheckboxRequiredValidator),\n    multi: true\n};\nlet RequiredValidator = /*@__PURE__*/ (() => {\n    class RequiredValidator {\n        constructor() {\n            this._required = false;\n        }\n        /**\n         * @description\n         * Tracks changes to the required attribute bound to this directive.\n         */\n        get required() {\n            return this._required;\n        }\n        set required(value) {\n            this._required = value != null && value !== false && `${value}` !== 'false';\n            if (this._onChange)\n                this._onChange();\n        }\n        /**\n         * Method that validates whether the control is empty.\n         * Returns the validation result if enabled, otherwise null.\n         * @nodoc\n         */\n        validate(control) {\n            return this.required ? requiredValidator(control) : null;\n        }\n        /**\n         * Registers a callback function to call when the validator inputs change.\n         * @nodoc\n         */\n        registerOnValidatorChange(fn) {\n            this._onChange = fn;\n        }\n    }\n    RequiredValidator.ɵfac = function RequiredValidator_Factory(t) { return new (t || RequiredValidator)(); };\n    RequiredValidator.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: RequiredValidator, selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]], hostVars: 1, hostBindings: function RequiredValidator_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵattribute */ \"Bb\"](\"required\", ctx.required ? \"\" : null);\n            }\n        }, inputs: { required: \"required\" }, features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([REQUIRED_VALIDATOR])] });\n    return RequiredValidator;\n})();\nlet CheckboxRequiredValidator = /*@__PURE__*/ (() => {\n    class CheckboxRequiredValidator extends RequiredValidator {\n        /**\n         * Method that validates whether or not the checkbox has been checked.\n         * Returns the validation result if enabled, otherwise null.\n         * @nodoc\n         */\n        validate(control) {\n            return this.required ? requiredTrueValidator(control) : null;\n        }\n    }\n    CheckboxRequiredValidator.ɵfac = function CheckboxRequiredValidator_Factory(t) { return ɵCheckboxRequiredValidator_BaseFactory(t || CheckboxRequiredValidator); };\n    CheckboxRequiredValidator.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: CheckboxRequiredValidator, selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵattribute */ \"Bb\"](\"required\", ctx.required ? \"\" : null);\n            }\n        }, features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([CHECKBOX_REQUIRED_VALIDATOR]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵInheritDefinitionFeature */ \"xb\"]] });\n    return CheckboxRequiredValidator;\n})();\nconst ɵCheckboxRequiredValidator_BaseFactory = /*@__PURE__*/ /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵgetInheritedFactory */ \"Ub\"](CheckboxRequiredValidator);\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => EmailValidator),\n    multi: true\n};\nlet EmailValidator = /*@__PURE__*/ (() => {\n    class EmailValidator {\n        constructor() {\n            this._enabled = false;\n        }\n        /**\n         * @description\n         * Tracks changes to the email attribute bound to this directive.\n         */\n        set email(value) {\n            this._enabled = value === '' || value === true || value === 'true';\n            if (this._onChange)\n                this._onChange();\n        }\n        /**\n         * Method that validates whether an email address is valid.\n         * Returns the validation result if enabled, otherwise null.\n         * @nodoc\n         */\n        validate(control) {\n            return this._enabled ? emailValidator(control) : null;\n        }\n        /**\n         * Registers a callback function to call when the validator inputs change.\n         * @nodoc\n         */\n        registerOnValidatorChange(fn) {\n            this._onChange = fn;\n        }\n    }\n    EmailValidator.ɵfac = function EmailValidator_Factory(t) { return new (t || EmailValidator)(); };\n    EmailValidator.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: EmailValidator, selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]], inputs: { email: \"email\" }, features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([EMAIL_VALIDATOR])] });\n    return EmailValidator;\n})();\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => MinLengthValidator),\n    multi: true\n};\nlet MinLengthValidator = /*@__PURE__*/ (() => {\n    class MinLengthValidator {\n        constructor() {\n            this._validator = nullValidator;\n        }\n        /** @nodoc */\n        ngOnChanges(changes) {\n            if ('minlength' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        }\n        /**\n         * Method that validates whether the value meets a minimum length requirement.\n         * Returns the validation result if enabled, otherwise null.\n         * @nodoc\n         */\n        validate(control) {\n            return this.minlength == null ? null : this._validator(control);\n        }\n        /**\n         * Registers a callback function to call when the validator inputs change.\n         * @nodoc\n         */\n        registerOnValidatorChange(fn) {\n            this._onChange = fn;\n        }\n        _createValidator() {\n            this._validator = minLengthValidator(typeof this.minlength === 'number' ? this.minlength : parseInt(this.minlength, 10));\n        }\n    }\n    MinLengthValidator.ɵfac = function MinLengthValidator_Factory(t) { return new (t || MinLengthValidator)(); };\n    MinLengthValidator.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: MinLengthValidator, selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function MinLengthValidator_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵattribute */ \"Bb\"](\"minlength\", ctx.minlength ? ctx.minlength : null);\n            }\n        }, inputs: { minlength: \"minlength\" }, features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([MIN_LENGTH_VALIDATOR]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵNgOnChangesFeature */ \"yb\"]] });\n    return MinLengthValidator;\n})();\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => MaxLengthValidator),\n    multi: true\n};\nlet MaxLengthValidator = /*@__PURE__*/ (() => {\n    class MaxLengthValidator {\n        constructor() {\n            this._validator = nullValidator;\n        }\n        /** @nodoc */\n        ngOnChanges(changes) {\n            if ('maxlength' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        }\n        /**\n         * Method that validates whether the value exceeds the maximum length requirement.\n         * @nodoc\n         */\n        validate(control) {\n            return this.maxlength != null ? this._validator(control) : null;\n        }\n        /**\n         * Registers a callback function to call when the validator inputs change.\n         * @nodoc\n         */\n        registerOnValidatorChange(fn) {\n            this._onChange = fn;\n        }\n        _createValidator() {\n            this._validator = maxLengthValidator(typeof this.maxlength === 'number' ? this.maxlength : parseInt(this.maxlength, 10));\n        }\n    }\n    MaxLengthValidator.ɵfac = function MaxLengthValidator_Factory(t) { return new (t || MaxLengthValidator)(); };\n    MaxLengthValidator.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: MaxLengthValidator, selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵattribute */ \"Bb\"](\"maxlength\", ctx.maxlength ? ctx.maxlength : null);\n            }\n        }, inputs: { maxlength: \"maxlength\" }, features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([MAX_LENGTH_VALIDATOR]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵNgOnChangesFeature */ \"yb\"]] });\n    return MaxLengthValidator;\n})();\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* forwardRef */ \"V\"])(() => PatternValidator),\n    multi: true\n};\nlet PatternValidator = /*@__PURE__*/ (() => {\n    class PatternValidator {\n        constructor() {\n            this._validator = nullValidator;\n        }\n        /** @nodoc */\n        ngOnChanges(changes) {\n            if ('pattern' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        }\n        /**\n         * Method that validates whether the value matches the pattern requirement.\n         * @nodoc\n         */\n        validate(control) {\n            return this._validator(control);\n        }\n        /**\n         * Registers a callback function to call when the validator inputs change.\n         * @nodoc\n         */\n        registerOnValidatorChange(fn) {\n            this._onChange = fn;\n        }\n        _createValidator() {\n            this._validator = patternValidator(this.pattern);\n        }\n    }\n    PatternValidator.ɵfac = function PatternValidator_Factory(t) { return new (t || PatternValidator)(); };\n    PatternValidator.ɵdir = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineDirective */ \"Ib\"]({ type: PatternValidator, selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function PatternValidator_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵattribute */ \"Bb\"](\"pattern\", ctx.pattern ? ctx.pattern : null);\n            }\n        }, inputs: { pattern: \"pattern\" }, features: [/*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵProvidersFeature */ \"zb\"]([PATTERN_VALIDATOR]), _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵNgOnChangesFeature */ \"yb\"]] });\n    return PatternValidator;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SHARED_FORM_DIRECTIVES = [\n    ɵNgNoValidate,\n    NgSelectOption,\n    ɵNgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\nlet ɵInternalFormsSharedModule = /*@__PURE__*/ (() => {\n    class ɵInternalFormsSharedModule {\n    }\n    ɵInternalFormsSharedModule.ɵfac = function ɵInternalFormsSharedModule_Factory(t) { return new (t || ɵInternalFormsSharedModule)(); };\n    ɵInternalFormsSharedModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineNgModule */ \"Lb\"]({ type: ɵInternalFormsSharedModule });\n    ɵInternalFormsSharedModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineInjector */ \"Kb\"]({ imports: [[RadioControlRegistryModule]] });\n    return ɵInternalFormsSharedModule;\n})();\n/*@__PURE__*/ (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵsetNgModuleScope */ \"wc\"](ɵInternalFormsSharedModule, { declarations: [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator], imports: [RadioControlRegistryModule], exports: [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator] }); })();\nlet FormsModule = /*@__PURE__*/ (() => {\n    class FormsModule {\n    }\n    FormsModule.ɵfac = function FormsModule_Factory(t) { return new (t || FormsModule)(); };\n    FormsModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineNgModule */ \"Lb\"]({ type: FormsModule });\n    FormsModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineInjector */ \"Kb\"]({ imports: [ɵInternalFormsSharedModule] });\n    return FormsModule;\n})();\n/*@__PURE__*/ (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵsetNgModuleScope */ \"wc\"](FormsModule, { declarations: [NgModel, NgModelGroup, NgForm], exports: [ɵInternalFormsSharedModule, NgModel, NgModelGroup, NgForm] }); })();\nlet ReactiveFormsModule = /*@__PURE__*/ (() => {\n    class ReactiveFormsModule {\n        /**\n         * @description\n         * Provides options for configuring the reactive forms module.\n         *\n         * @param opts An object of configuration options\n         * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n         * binding is used with reactive form directives.\n         */\n        static withConfig(opts) {\n            return {\n                ngModule: ReactiveFormsModule,\n                providers: [\n                    { provide: NG_MODEL_WITH_FORM_CONTROL_WARNING, useValue: opts.warnOnNgModelWithFormControl }\n                ]\n            };\n        }\n    }\n    ReactiveFormsModule.ɵfac = function ReactiveFormsModule_Factory(t) { return new (t || ReactiveFormsModule)(); };\n    ReactiveFormsModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineNgModule */ \"Lb\"]({ type: ReactiveFormsModule });\n    ReactiveFormsModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineInjector */ \"Kb\"]({ imports: [ɵInternalFormsSharedModule] });\n    return ReactiveFormsModule;\n})();\n/*@__PURE__*/ (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵsetNgModuleScope */ \"wc\"](ReactiveFormsModule, { declarations: [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName], exports: [ɵInternalFormsSharedModule, FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName] }); })();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isAbstractControlOptions(options) {\n    return options.asyncValidators !== undefined ||\n        options.validators !== undefined ||\n        options.updateOn !== undefined;\n}\nlet FormBuilder = /*@__PURE__*/ (() => {\n    class FormBuilder {\n        group(controlsConfig, options = null) {\n            const controls = this._reduceControls(controlsConfig);\n            let validators = null;\n            let asyncValidators = null;\n            let updateOn = undefined;\n            if (options != null) {\n                if (isAbstractControlOptions(options)) {\n                    // `options` are `AbstractControlOptions`\n                    validators = options.validators != null ? options.validators : null;\n                    asyncValidators = options.asyncValidators != null ? options.asyncValidators : null;\n                    updateOn = options.updateOn != null ? options.updateOn : undefined;\n                }\n                else {\n                    // `options` are legacy form group options\n                    validators = options['validator'] != null ? options['validator'] : null;\n                    asyncValidators = options['asyncValidator'] != null ? options['asyncValidator'] : null;\n                }\n            }\n            return new FormGroup(controls, { asyncValidators, updateOn, validators });\n        }\n        /**\n         * @description\n         * Construct a new `FormControl` with the given state, validators and options.\n         *\n         * @param formState Initializes the control with an initial state value, or\n         * with an object that contains both a value and a disabled status.\n         *\n         * @param validatorOrOpts A synchronous validator function, or an array of\n         * such functions, or an `AbstractControlOptions` object that contains\n         * validation functions and a validation trigger.\n         *\n         * @param asyncValidator A single async validator or array of async validator\n         * functions.\n         *\n         * @usageNotes\n         *\n         * ### Initialize a control as disabled\n         *\n         * The following example returns a control with an initial value in a disabled state.\n         *\n         * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n         * </code-example>\n         */\n        control(formState, validatorOrOpts, asyncValidator) {\n            return new FormControl(formState, validatorOrOpts, asyncValidator);\n        }\n        /**\n         * Constructs a new `FormArray` from the given array of configurations,\n         * validators and options.\n         *\n         * @param controlsConfig An array of child controls or control configs. Each\n         * child control is given an index when it is registered.\n         *\n         * @param validatorOrOpts A synchronous validator function, or an array of\n         * such functions, or an `AbstractControlOptions` object that contains\n         * validation functions and a validation trigger.\n         *\n         * @param asyncValidator A single async validator or array of async validator\n         * functions.\n         */\n        array(controlsConfig, validatorOrOpts, asyncValidator) {\n            const controls = controlsConfig.map(c => this._createControl(c));\n            return new FormArray(controls, validatorOrOpts, asyncValidator);\n        }\n        /** @internal */\n        _reduceControls(controlsConfig) {\n            const controls = {};\n            Object.keys(controlsConfig).forEach(controlName => {\n                controls[controlName] = this._createControl(controlsConfig[controlName]);\n            });\n            return controls;\n        }\n        /** @internal */\n        _createControl(controlConfig) {\n            if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n                controlConfig instanceof FormArray) {\n                return controlConfig;\n            }\n            else if (Array.isArray(controlConfig)) {\n                const value = controlConfig[0];\n                const validator = controlConfig.length > 1 ? controlConfig[1] : null;\n                const asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n                return this.control(value, validator, asyncValidator);\n            }\n            else {\n                return this.control(controlConfig);\n            }\n        }\n    }\n    FormBuilder.ɵfac = function FormBuilder_Factory(t) { return new (t || FormBuilder)(); };\n    FormBuilder.ɵprov = /*@__PURE__*/ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[/* ɵɵdefineInjectable */ \"Jb\"])({ factory: function FormBuilder_Factory() { return new FormBuilder(); }, token: FormBuilder, providedIn: ReactiveFormsModule });\n    return FormBuilder;\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = /*@__PURE__*/ new _angular_core__WEBPACK_IMPORTED_MODULE_0__[/* Version */ \"Q\"]('11.2.9');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=forms.js.map\n\n\n/***/ })\n\n}]);","inputSourceMap":null}