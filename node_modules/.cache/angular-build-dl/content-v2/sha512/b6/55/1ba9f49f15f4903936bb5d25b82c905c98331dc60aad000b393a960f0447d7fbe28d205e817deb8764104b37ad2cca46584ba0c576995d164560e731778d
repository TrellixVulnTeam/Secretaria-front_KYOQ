{"version":3,"sources":["webpack:///src/app/layout/graphics/graphics.component.ts","webpack:///src/app/layout/graphics/graphics.component.css","webpack:///src/app/layout/graphics/graphics.module.ts","webpack:///src/app/layout/graphics/graphics.component.html","webpack:///src/app/graphics.service.ts","webpack:///src/app/layout/graphics/graphics-routing.module.ts"],"names":["GraphicsComponent","GS","pieChartLabels","pieChartData","lineChartData","data","label","lineChartLabels","lineChartOptions","responsive","lineChartColors","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","e","lineChartLegend","pie","subscribe","next","forEach","element","push","name","count","pieChartType","pop","line","total","console","log","lineChartType","selector","template","animations","GraphicsModule","imports","declarations","GraphicsService","http","alerts","url","get","providedIn","routes","path","component","children","graphicsRoutingModule","forChild","exports"],"mappings":"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","file":"graphics-graphics-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { GraphicsService } from \"../../graphics.service\";\n\n@Component({\n  selector: 'app-graphics',\n  templateUrl: './graphics.component.html',\n  styleUrls: ['./graphics.component.css'],\n  animations: [routerTransition()]\n})\nexport class GraphicsComponent implements OnInit {\n\n    pie:any;\n    line:any;\n\n    // Pie\n    public pieChartLabels: string[] = [];\n    public pieChartData: number[] = [];\n    public pieChartType: string;\n\n\n    // lineChart\n    public lineChartData: Array<any> = [\n        { data: [], label: 'Ingresos Año 2021' },\n        { data: [28, 48, 40, 19, 86, 27, 90, 87, 45, 12, 11, 30], label: 'Salida Año 2021' },\n      //  { data: [18, 48, 77, 9, 100, 27, 40], label: 'Series C' }\n    ];\n    public lineChartLabels: Array<any> = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre','Noviembre', ' Diciembre'];\n    public lineChartOptions: any = {\n        responsive: true\n    };\n    public lineChartColors: Array<any> = [\n        {\n            // grey\n            backgroundColor: 'rgba(148,159,177,0.2)',\n            borderColor: 'rgba(148,159,177,1)',\n            pointBackgroundColor: 'rgba(148,159,177,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        },\n        {\n            // dark grey\n            backgroundColor: 'rgba(77,83,96,0.2)',\n            borderColor: 'rgba(77,83,96,1)',\n            pointBackgroundColor: 'rgba(77,83,96,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(77,83,96,1)'\n        },\n        {\n            // grey\n            backgroundColor: 'rgba(148,159,177,0.2)',\n            borderColor: 'rgba(148,159,177,1)',\n            pointBackgroundColor: 'rgba(148,159,177,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        }\n    ];\n    public lineChartLegend: boolean;\n    public lineChartType: string;\n\n    constructor( private GS: GraphicsService) {}\n\n    // events\n    public chartClicked(e: any): void {\n        // console.log(e);\n    }\n\n    public chartHovered(e: any): void {\n        // console.log(e);\n    }\n    ngOnInit() {\n\n     this.lineChartLegend = true;\n\n\n     this.GS.pie().subscribe({\n         next: data=>{\n\n            this.pie = data;\n            this.pie.forEach(element => {\n                this.pieChartLabels.push(element.name);\n               this.pieChartData.push(element.count);\n            });\n            this.pieChartType = 'pie';\n\n        }\n\n     })\n     this.lineChartData[0].data.pop();\n     this.GS.line().subscribe({\n         next: data=>{\n            this.line = data;\n            this.line.forEach(element => {\n                this.lineChartData[0].data.push(element.total)\n\n            });\n                     console.log(this.lineChartData);\n\n\n\n         }\n     })\n     this.lineChartType = 'line';\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJncmFwaGljcy5jb21wb25lbnQuY3NzIn0= */\";","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PageHeaderModule } from '../../shared';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {FormsModule} from '@angular/forms';\nimport { ChartsModule as Ng2Charts } from 'ng2-charts';\n\nimport { graphicsRoutingModule } from './graphics-routing.module';\nimport { GraphicsComponent } from './graphics.component';\n\n@NgModule({\n    imports: [CommonModule, graphicsRoutingModule, PageHeaderModule, NgbModule, FormsModule,Ng2Charts],\n    declarations: [GraphicsComponent]\n})\nexport class GraphicsModule {}\n","export default \"<div [@routerTransition]>\\n    <app-page-header [heading]=\\\"'Graficos'\\\" [icon]=\\\"'fa-bar-chart-o'\\\"></app-page-header>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                   Representación Por Tema\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <canvas\\n                        (chartClick)=\\\"chartClicked($event)\\\"\\n                        (chartHover)=\\\"chartHovered($event)\\\"\\n                        [chartType]=\\\"pieChartType\\\"\\n                        [data]=\\\"pieChartData\\\"\\n                        [labels]=\\\"pieChartLabels\\\"\\n                        baseChart\\n                        height=\\\"150px\\\"\\n                    >\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                    <div class=\\\"card-header\\\">\\n                       Ingresos\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <canvas\\n                        (chartClick)=\\\"chartClicked($event)\\\"\\n                        (chartHover)=\\\"chartHovered($event)\\\"\\n                        [chartType]=\\\"lineChartType\\\"\\n                        [colors]=\\\"lineChartColors\\\"\\n                        [datasets]=\\\"lineChartData\\\"\\n                        [labels]=\\\"lineChartLabels\\\"\\n                        [legend]=\\\"lineChartLegend\\\"\\n                        [options]=\\\"lineChartOptions\\\"\\n                        baseChart\\n                        height=\\\"130\\\"\\n                    >\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n\\n    <!-- <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Bar Chart\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <canvas\\n                        (chartClick)=\\\"chartClicked($event)\\\"\\n                        (chartHover)=\\\"chartHovered($event)\\\"\\n                        [chartType]=\\\"barChartType\\\"\\n                        [datasets]=\\\"barChartData\\\"\\n                        [labels]=\\\"barChartLabels\\\"\\n                        [legend]=\\\"barChartLegend\\\"\\n                        [options]=\\\"barChartOptions\\\"\\n                        baseChart\\n                    >\\n                    </canvas>\\n                </div>\\n                <div class=\\\"card-footer\\\">\\n                    <button (click)=\\\"randomize()\\\" class=\\\"btn btn-info btn-sm\\\">Update</button>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Doughnut Chart\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <canvas\\n                        (chartClick)=\\\"chartClicked($event)\\\"\\n                        (chartHover)=\\\"chartHovered($event)\\\"\\n                        [chartType]=\\\"doughnutChartType\\\"\\n                        [data]=\\\"doughnutChartData\\\"\\n                        [labels]=\\\"doughnutChartLabels\\\"\\n                        baseChart\\n                        height=\\\"180px\\\"\\n                    >\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Radar Chart\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <canvas\\n                        (chartClick)=\\\"chartClicked($event)\\\"\\n                        (chartHover)=\\\"chartHovered($event)\\\"\\n                        [chartType]=\\\"radarChartType\\\"\\n                        [datasets]=\\\"radarChartData\\\"\\n                        [labels]=\\\"radarChartLabels\\\"\\n                        baseChart\\n                        height=\\\"150px\\\"\\n                    >\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Pie Chart\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <canvas\\n                        (chartClick)=\\\"chartClicked($event)\\\"\\n                        (chartHover)=\\\"chartHovered($event)\\\"\\n                        [chartType]=\\\"pieChartType\\\"\\n                        [data]=\\\"pieChartData\\\"\\n                        [labels]=\\\"pieChartLabels\\\"\\n                        baseChart\\n                        height=\\\"150px\\\"\\n                    >\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Polar Area Chart\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <canvas\\n                        (chartClick)=\\\"chartClicked($event)\\\"\\n                        (chartHover)=\\\"chartHovered($event)\\\"\\n                        [chartType]=\\\"polarAreaChartType\\\"\\n                        [data]=\\\"polarAreaChartData\\\"\\n                        [labels]=\\\"polarAreaChartLabels\\\"\\n                        [legend]=\\\"polarAreaLegend\\\"\\n                        baseChart\\n                        height=\\\"130px\\\"\\n                    >\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Line Chart\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <canvas\\n                        (chartClick)=\\\"chartClicked($event)\\\"\\n                        (chartHover)=\\\"chartHovered($event)\\\"\\n                        [chartType]=\\\"lineChartType\\\"\\n                        [colors]=\\\"lineChartColors\\\"\\n                        [datasets]=\\\"lineChartData\\\"\\n                        [labels]=\\\"lineChartLabels\\\"\\n                        [legend]=\\\"lineChartLegend\\\"\\n                        [options]=\\\"lineChartOptions\\\"\\n                        baseChart\\n                        height=\\\"130\\\"\\n                    >\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n    </div> -->\\n</div>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GraphicsService {\n    public alerts: Array<any> = [];\n    url = \"http://10.4.15.80:8000/api/graphics\"\n    users : any;\n\n    constructor(private http: HttpClient) { }\n\n    public pie() {\n        return this.http.get(this.url +'/pie');\n    }\n    public line() {\n        return this.http.get(this.url +'/line');\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GraphicsComponent } from './graphics.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: GraphicsComponent,\n        children: []\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class graphicsRoutingModule {}\n"]}