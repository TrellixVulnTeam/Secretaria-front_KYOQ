{"version":3,"sources":["webpack:///src/app/layout/dontUse/charts/charts.module.ts","webpack:///src/app/layout/dontUse/charts/charts-routing.module.ts","webpack:///src/app/layout/dontUse/charts/charts.component.ts","webpack:///src/app/layout/dontUse/charts/charts.component.html","webpack:///src/app/layout/dontUse/charts/charts.component.scss"],"names":["ChartsModule","imports","declarations","routes","path","component","ChartsRoutingModule","forChild","exports","ChartsComponent","barChartOptions","scaleShowVerticalLines","responsive","barChartLabels","barChartData","data","label","doughnutChartLabels","doughnutChartData","radarChartLabels","radarChartData","pieChartLabels","pieChartData","polarAreaChartLabels","polarAreaChartData","lineChartData","lineChartLabels","lineChartOptions","lineChartColors","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","e","Math","round","random","clone","JSON","parse","stringify","barChartType","barChartLegend","doughnutChartType","radarChartType","pieChartType","polarAreaLegend","polarAreaChartType","lineChartLegend","lineChartType","selector","template","animations"],"mappings":"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","file":"dontUse-charts-charts-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ChartsModule as Ng2Charts } from 'ng2-charts';\nimport { PageHeaderModule } from '../../../shared';\n\nimport { ChartsRoutingModule } from './charts-routing.module';\nimport { ChartsComponent } from './charts.component';\n\n@NgModule({\n    imports: [CommonModule, Ng2Charts, ChartsRoutingModule, PageHeaderModule],\n    declarations: [ChartsComponent]\n})\nexport class ChartsModule {}\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ChartsComponent } from './charts.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ChartsComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ChartsRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../../router.animations';\n\n@Component({\n    selector: 'app-charts',\n    templateUrl: './charts.component.html',\n    styleUrls: ['./charts.component.scss'],\n    animations: [routerTransition()]\n})\nexport class ChartsComponent implements OnInit {\n    // bar chart\n    public barChartOptions: any = {\n        scaleShowVerticalLines: false,\n        responsive: true\n    };\n    public barChartLabels: string[] = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\n    public barChartType: string;\n    public barChartLegend: boolean;\n\n    public barChartData: any[] = [\n        { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\n        { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' }\n    ];\n\n    // Doughnut\n    public doughnutChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];\n    public doughnutChartData: number[] = [350, 450, 100];\n    public doughnutChartType: string;\n\n    // Radar\n    public radarChartLabels: string[] = ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'];\n    public radarChartData: any = [\n        { data: [65, 59, 90, 81, 56, 55, 40], label: 'Series A' },\n        { data: [28, 48, 40, 19, 96, 27, 100], label: 'Series B' }\n    ];\n    public radarChartType: string;\n\n    // Pie\n    public pieChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail Sales'];\n    public pieChartData: number[] = [300, 500, 100];\n    public pieChartType: string;\n\n    // PolarArea\n    public polarAreaChartLabels: string[] = [\n        'Download Sales',\n        'In-Store Sales',\n        'Mail Sales',\n        'Telesales',\n        'Corporate Sales'\n    ];\n    public polarAreaChartData: number[] = [300, 500, 100, 40, 120];\n    public polarAreaLegend: boolean;\n\n    public polarAreaChartType: string;\n\n    // lineChart\n    public lineChartData: Array<any> = [\n        { data: [65, 59, 80, 81, 56, 55, 40], label: 'Series A' },\n        { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' },\n        { data: [18, 48, 77, 9, 100, 27, 40], label: 'Series C' }\n    ];\n    public lineChartLabels: Array<any> = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n    public lineChartOptions: any = {\n        responsive: true\n    };\n    public lineChartColors: Array<any> = [\n        {\n            // grey\n            backgroundColor: 'rgba(148,159,177,0.2)',\n            borderColor: 'rgba(148,159,177,1)',\n            pointBackgroundColor: 'rgba(148,159,177,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        },\n        {\n            // dark grey\n            backgroundColor: 'rgba(77,83,96,0.2)',\n            borderColor: 'rgba(77,83,96,1)',\n            pointBackgroundColor: 'rgba(77,83,96,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(77,83,96,1)'\n        },\n        {\n            // grey\n            backgroundColor: 'rgba(148,159,177,0.2)',\n            borderColor: 'rgba(148,159,177,1)',\n            pointBackgroundColor: 'rgba(148,159,177,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        }\n    ];\n    public lineChartLegend: boolean;\n    public lineChartType: string;\n\n    constructor() {}\n\n    // events\n    public chartClicked(e: any): void {\n        // console.log(e);\n    }\n\n    public chartHovered(e: any): void {\n        // console.log(e);\n    }\n\n    public randomize(): void {\n        // Only Change 3 values\n        const data = [Math.round(Math.random() * 100), 59, 80, Math.random() * 100, 56, Math.random() * 100, 40];\n        const clone = JSON.parse(JSON.stringify(this.barChartData));\n        clone[0].data = data;\n        this.barChartData = clone;\n        /**\n         * (My guess), for Angular to recognize the change in the dataset\n         * it has to change the dataset variable directly,\n         * so one way around it, is to clone the data, change it and then\n         * assign it;\n         */\n    }\n\n    ngOnInit() {\n        this.barChartType = 'bar';\n        this.barChartLegend = true;\n        this.doughnutChartType = 'doughnut';\n        this.radarChartType = 'radar';\n        this.pieChartType = 'pie';\n        this.polarAreaLegend = true;\n        this.polarAreaChartType = 'polarArea';\n        this.lineChartLegend = true;\n        this.lineChartType = 'line';\n    }\n}\n","export default \"<div [@routerTransition]>\\n    <app-page-header [heading]=\\\"'Charts'\\\" [icon]=\\\"'fa-bar-chart-o'\\\"></app-page-header>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Bar Chart\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <canvas\\n                        (chartClick)=\\\"chartClicked($event)\\\"\\n                        (chartHover)=\\\"chartHovered($event)\\\"\\n                        [chartType]=\\\"barChartType\\\"\\n                        [datasets]=\\\"barChartData\\\"\\n                        [labels]=\\\"barChartLabels\\\"\\n                        [legend]=\\\"barChartLegend\\\"\\n                        [options]=\\\"barChartOptions\\\"\\n                        baseChart\\n                    >\\n                    </canvas>\\n                </div>\\n                <div class=\\\"card-footer\\\">\\n                    <button (click)=\\\"randomize()\\\" class=\\\"btn btn-info btn-sm\\\">Update</button>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Doughnut Chart\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <canvas\\n                        (chartClick)=\\\"chartClicked($event)\\\"\\n                        (chartHover)=\\\"chartHovered($event)\\\"\\n                        [chartType]=\\\"doughnutChartType\\\"\\n                        [data]=\\\"doughnutChartData\\\"\\n                        [labels]=\\\"doughnutChartLabels\\\"\\n                        baseChart\\n                        height=\\\"180px\\\"\\n                    >\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Radar Chart\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <canvas\\n                        (chartClick)=\\\"chartClicked($event)\\\"\\n                        (chartHover)=\\\"chartHovered($event)\\\"\\n                        [chartType]=\\\"radarChartType\\\"\\n                        [datasets]=\\\"radarChartData\\\"\\n                        [labels]=\\\"radarChartLabels\\\"\\n                        baseChart\\n                        height=\\\"150px\\\"\\n                    >\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Pie Chart\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <canvas\\n                        (chartClick)=\\\"chartClicked($event)\\\"\\n                        (chartHover)=\\\"chartHovered($event)\\\"\\n                        [chartType]=\\\"pieChartType\\\"\\n                        [data]=\\\"pieChartData\\\"\\n                        [labels]=\\\"pieChartLabels\\\"\\n                        baseChart\\n                        height=\\\"150px\\\"\\n                    >\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Polar Area Chart\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <canvas\\n                        (chartClick)=\\\"chartClicked($event)\\\"\\n                        (chartHover)=\\\"chartHovered($event)\\\"\\n                        [chartType]=\\\"polarAreaChartType\\\"\\n                        [data]=\\\"polarAreaChartData\\\"\\n                        [labels]=\\\"polarAreaChartLabels\\\"\\n                        [legend]=\\\"polarAreaLegend\\\"\\n                        baseChart\\n                        height=\\\"130px\\\"\\n                    >\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col col-sm-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    Line Chart\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <canvas\\n                        (chartClick)=\\\"chartClicked($event)\\\"\\n                        (chartHover)=\\\"chartHovered($event)\\\"\\n                        [chartType]=\\\"lineChartType\\\"\\n                        [colors]=\\\"lineChartColors\\\"\\n                        [datasets]=\\\"lineChartData\\\"\\n                        [labels]=\\\"lineChartLabels\\\"\\n                        [legend]=\\\"lineChartLegend\\\"\\n                        [options]=\\\"lineChartOptions\\\"\\n                        baseChart\\n                        height=\\\"130\\\"\\n                    >\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjaGFydHMuY29tcG9uZW50LnNjc3MifQ== */\";"]}